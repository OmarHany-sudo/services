# -*- coding: utf-8 -*-
# code generated by Prisma. DO NOT EDIT.
# pyright: reportUnusedImport=false
# fmt: off

# global imports for type checking
from builtins import bool as _bool
from builtins import int as _int
from builtins import float as _float
from builtins import str as _str
import sys
import decimal
import datetime
from typing import (
    TYPE_CHECKING,
    Optional,
    Iterable,
    Iterator,
    Sequence,
    Callable,
    ClassVar,
    NoReturn,
    TypeVar,
    Generic,
    Mapping,
    Tuple,
    Union,
    List,
    Dict,
    Type,
    Any,
    Set,
    overload,
    cast,
)
from typing_extensions import TypedDict, Literal


LiteralString = str
# -- template types.py.jinja --
from typing import TypeVar

import httpx
from . import _types
from .utils import _NoneType



# TODO: filters with aggregates should have their own recursive fields
# TODO: cleanup whitespace control
# TODO: add an argument to signify that the last iteration should be skipped


SortMode = _types.SortMode
SortOrder = _types.SortOrder

MetricsFormat = _types.MetricsFormat

DatasourceOverride = _types.DatasourceOverride
HttpConfig = _types.HttpConfig


# types that can be serialized to json by our query builder
Serializable = Union[
    None,
    bool,
    float,
    int,
    str,
    datetime.datetime,
    List[Any],
    Dict[None, Any],
    Dict[bool, Any],
    Dict[float, Any],
    Dict[int, Any],
    Dict[str, Any],
]


    

StringFilter = TypedDict(
    'StringFilter',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive1'],
        'mode': SortMode,
        'search': str,
    },
    total=False,
)


StringFilterRecursive1 = TypedDict(
    'StringFilterRecursive1',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive2'],
        'mode': SortMode,
        'search': str,
    },
    total=False,
)


StringFilterRecursive2 = TypedDict(
    'StringFilterRecursive2',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive3'],
        'mode': SortMode,
        'search': str,
    },
    total=False,
)


StringFilterRecursive3 = TypedDict(
    'StringFilterRecursive3',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive4'],
        'mode': SortMode,
        'search': str,
    },
    total=False,
)


StringFilterRecursive4 = TypedDict(
    'StringFilterRecursive4',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
                'mode': SortMode,
        'search': str,
    },
    total=False,
)


class StringWithAggregatesFilter(StringFilter, total=False):
    _max: 'StringFilter'
    _min: 'StringFilter'
    _sum: 'StringFilter'
    _avg: 'StringFilter'
    _count: 'IntFilter'


    

DateTimeFilter = TypedDict(
    'DateTimeFilter',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive1'],
    },
    total=False,
)


DateTimeFilterRecursive1 = TypedDict(
    'DateTimeFilterRecursive1',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive2'],
    },
    total=False,
)


DateTimeFilterRecursive2 = TypedDict(
    'DateTimeFilterRecursive2',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive3'],
    },
    total=False,
)


DateTimeFilterRecursive3 = TypedDict(
    'DateTimeFilterRecursive3',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive4'],
    },
    total=False,
)


DateTimeFilterRecursive4 = TypedDict(
    'DateTimeFilterRecursive4',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
            },
    total=False,
)


class DateTimeWithAggregatesFilter(DateTimeFilter, total=False):
    _max: 'DateTimeFilter'
    _min: 'DateTimeFilter'
    _sum: 'DateTimeFilter'
    _avg: 'DateTimeFilter'
    _count: 'IntFilter'


    

BooleanFilter = TypedDict(
    'BooleanFilter',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive1'],
    },
    total=False,
)


BooleanFilterRecursive1 = TypedDict(
    'BooleanFilterRecursive1',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive2'],
    },
    total=False,
)


BooleanFilterRecursive2 = TypedDict(
    'BooleanFilterRecursive2',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive3'],
    },
    total=False,
)


BooleanFilterRecursive3 = TypedDict(
    'BooleanFilterRecursive3',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive4'],
    },
    total=False,
)


BooleanFilterRecursive4 = TypedDict(
    'BooleanFilterRecursive4',
    {
        'equals': bool,
            },
    total=False,
)


class BooleanWithAggregatesFilter(BooleanFilter, total=False):
    _max: 'BooleanFilter'
    _min: 'BooleanFilter'
    _sum: 'BooleanFilter'
    _avg: 'BooleanFilter'
    _count: 'IntFilter'


    

IntFilter = TypedDict(
    'IntFilter',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive1'],
    },
    total=False,
)


IntFilterRecursive1 = TypedDict(
    'IntFilterRecursive1',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive2'],
    },
    total=False,
)


IntFilterRecursive2 = TypedDict(
    'IntFilterRecursive2',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive3'],
    },
    total=False,
)


IntFilterRecursive3 = TypedDict(
    'IntFilterRecursive3',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive4'],
    },
    total=False,
)


IntFilterRecursive4 = TypedDict(
    'IntFilterRecursive4',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
            },
    total=False,
)


class IntWithAggregatesFilter(IntFilter, total=False):
    _max: 'IntFilter'
    _min: 'IntFilter'
    _sum: 'IntFilter'
    _avg: 'IntFilter'
    _count: 'IntFilter'


BigIntFilter = IntFilter
BigIntWithAggregatesFilter = IntWithAggregatesFilter
    

FloatFilter = TypedDict(
    'FloatFilter',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive1'],
    },
    total=False,
)


FloatFilterRecursive1 = TypedDict(
    'FloatFilterRecursive1',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive2'],
    },
    total=False,
)


FloatFilterRecursive2 = TypedDict(
    'FloatFilterRecursive2',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive3'],
    },
    total=False,
)


FloatFilterRecursive3 = TypedDict(
    'FloatFilterRecursive3',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive4'],
    },
    total=False,
)


FloatFilterRecursive4 = TypedDict(
    'FloatFilterRecursive4',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
            },
    total=False,
)


class FloatWithAggregatesFilter(FloatFilter, total=False):
    _max: 'FloatFilter'
    _min: 'FloatFilter'
    _sum: 'FloatFilter'
    _avg: 'FloatFilter'
    _count: 'IntFilter'


    

BytesFilter = TypedDict(
    'BytesFilter',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive1'],
    },
    total=False,
)


BytesFilterRecursive1 = TypedDict(
    'BytesFilterRecursive1',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive2'],
    },
    total=False,
)


BytesFilterRecursive2 = TypedDict(
    'BytesFilterRecursive2',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive3'],
    },
    total=False,
)


BytesFilterRecursive3 = TypedDict(
    'BytesFilterRecursive3',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive4'],
    },
    total=False,
)


BytesFilterRecursive4 = TypedDict(
    'BytesFilterRecursive4',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
            },
    total=False,
)


class BytesWithAggregatesFilter(BytesFilter, total=False):
    _max: 'BytesFilter'
    _min: 'BytesFilter'
    _sum: 'BytesFilter'
    _avg: 'BytesFilter'
    _count: 'IntFilter'


# TODO: preview feature for improving JSON filtering
JsonFilter = TypedDict(
    'JsonFilter',
    {
        'equals': 'fields.Json',
        'not': 'fields.Json',
    },
    total=False,
)


class JsonWithAggregatesFilter(JsonFilter, total=False):
    _max: 'JsonFilter'
    _min: 'JsonFilter'
    _sum: 'JsonFilter'
    _avg: 'JsonFilter'
    _count: 'IntFilter'


    

DecimalFilter = TypedDict(
    'DecimalFilter',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive1'],
    },
    total=False,
)


DecimalFilterRecursive1 = TypedDict(
    'DecimalFilterRecursive1',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive2'],
    },
    total=False,
)


DecimalFilterRecursive2 = TypedDict(
    'DecimalFilterRecursive2',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive3'],
    },
    total=False,
)


DecimalFilterRecursive3 = TypedDict(
    'DecimalFilterRecursive3',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive4'],
    },
    total=False,
)


DecimalFilterRecursive4 = TypedDict(
    'DecimalFilterRecursive4',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
            },
    total=False,
)


class DecimalWithAggregatesFilter(StringFilter, total=False):
    _max: 'DecimalFilter'
    _min: 'DecimalFilter'
    _sum: 'DecimalFilter'
    _avg: 'DecimalFilter'
    _count: 'IntFilter'


class _FloatSetInput(TypedDict):
    set: float


class _FloatDivideInput(TypedDict):
    divide: float


class _FloatMultiplyInput(TypedDict):
    multiply: float


class _FloatIncrementInput(TypedDict):
    increment: float


class _FloatDecrementInput(TypedDict):
    decrement: float


class _IntSetInput(TypedDict):
    set: int


class _IntDivideInput(TypedDict):
    divide: int


class _IntMultiplyInput(TypedDict):
    multiply: int


class _IntIncrementInput(TypedDict):
    increment: int


class _IntDecrementInput(TypedDict):
    decrement: int


AtomicFloatInput = Union[
    _FloatSetInput,
    _FloatDivideInput,
    _FloatMultiplyInput,
    _FloatIncrementInput,
    _FloatDecrementInput,
]
AtomicIntInput = Union[
    _IntSetInput,
    _IntDivideInput,
    _IntMultiplyInput,
    _IntIncrementInput,
    _IntDecrementInput,
]
AtomicBigIntInput = AtomicIntInput

class _StringListFilterEqualsInput(TypedDict):
    equals: Optional[List[_str]]


class _StringListFilterHasInput(TypedDict):
    has: _str


class _StringListFilterHasEveryInput(TypedDict):
    has_every: List[_str]


class _StringListFilterHasSomeInput(TypedDict):
    has_some: List[_str]


class _StringListFilterIsEmptyInput(TypedDict):
    is_empty: bool


StringListFilter = Union[
    _StringListFilterHasInput,
    _StringListFilterEqualsInput,
    _StringListFilterHasSomeInput,
    _StringListFilterIsEmptyInput,
    _StringListFilterHasEveryInput,
]


class _StringListUpdateSet(TypedDict):
    set: List[_str]


class _StringListUpdatePush(TypedDict):
    push: List[_str]


StringListUpdate = Union[
    List[_str],
    _StringListUpdateSet,
    _StringListUpdatePush,
]

class _BytesListFilterEqualsInput(TypedDict):
    equals: Optional[List['fields.Base64']]


class _BytesListFilterHasInput(TypedDict):
    has: 'fields.Base64'


class _BytesListFilterHasEveryInput(TypedDict):
    has_every: List['fields.Base64']


class _BytesListFilterHasSomeInput(TypedDict):
    has_some: List['fields.Base64']


class _BytesListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BytesListFilter = Union[
    _BytesListFilterHasInput,
    _BytesListFilterEqualsInput,
    _BytesListFilterHasSomeInput,
    _BytesListFilterIsEmptyInput,
    _BytesListFilterHasEveryInput,
]


class _BytesListUpdateSet(TypedDict):
    set: List['fields.Base64']


class _BytesListUpdatePush(TypedDict):
    push: List['fields.Base64']


BytesListUpdate = Union[
    List['fields.Base64'],
    _BytesListUpdateSet,
    _BytesListUpdatePush,
]

class _DateTimeListFilterEqualsInput(TypedDict):
    equals: Optional[List[datetime.datetime]]


class _DateTimeListFilterHasInput(TypedDict):
    has: datetime.datetime


class _DateTimeListFilterHasEveryInput(TypedDict):
    has_every: List[datetime.datetime]


class _DateTimeListFilterHasSomeInput(TypedDict):
    has_some: List[datetime.datetime]


class _DateTimeListFilterIsEmptyInput(TypedDict):
    is_empty: bool


DateTimeListFilter = Union[
    _DateTimeListFilterHasInput,
    _DateTimeListFilterEqualsInput,
    _DateTimeListFilterHasSomeInput,
    _DateTimeListFilterIsEmptyInput,
    _DateTimeListFilterHasEveryInput,
]


class _DateTimeListUpdateSet(TypedDict):
    set: List[datetime.datetime]


class _DateTimeListUpdatePush(TypedDict):
    push: List[datetime.datetime]


DateTimeListUpdate = Union[
    List[datetime.datetime],
    _DateTimeListUpdateSet,
    _DateTimeListUpdatePush,
]

class _BooleanListFilterEqualsInput(TypedDict):
    equals: Optional[List[_bool]]


class _BooleanListFilterHasInput(TypedDict):
    has: _bool


class _BooleanListFilterHasEveryInput(TypedDict):
    has_every: List[_bool]


class _BooleanListFilterHasSomeInput(TypedDict):
    has_some: List[_bool]


class _BooleanListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BooleanListFilter = Union[
    _BooleanListFilterHasInput,
    _BooleanListFilterEqualsInput,
    _BooleanListFilterHasSomeInput,
    _BooleanListFilterIsEmptyInput,
    _BooleanListFilterHasEveryInput,
]


class _BooleanListUpdateSet(TypedDict):
    set: List[_bool]


class _BooleanListUpdatePush(TypedDict):
    push: List[_bool]


BooleanListUpdate = Union[
    List[_bool],
    _BooleanListUpdateSet,
    _BooleanListUpdatePush,
]

class _IntListFilterEqualsInput(TypedDict):
    equals: Optional[List[_int]]


class _IntListFilterHasInput(TypedDict):
    has: _int


class _IntListFilterHasEveryInput(TypedDict):
    has_every: List[_int]


class _IntListFilterHasSomeInput(TypedDict):
    has_some: List[_int]


class _IntListFilterIsEmptyInput(TypedDict):
    is_empty: bool


IntListFilter = Union[
    _IntListFilterHasInput,
    _IntListFilterEqualsInput,
    _IntListFilterHasSomeInput,
    _IntListFilterIsEmptyInput,
    _IntListFilterHasEveryInput,
]


class _IntListUpdateSet(TypedDict):
    set: List[_int]


class _IntListUpdatePush(TypedDict):
    push: List[_int]


IntListUpdate = Union[
    List[_int],
    _IntListUpdateSet,
    _IntListUpdatePush,
]

class _BigIntListFilterEqualsInput(TypedDict):
    equals: Optional[List[_int]]


class _BigIntListFilterHasInput(TypedDict):
    has: _int


class _BigIntListFilterHasEveryInput(TypedDict):
    has_every: List[_int]


class _BigIntListFilterHasSomeInput(TypedDict):
    has_some: List[_int]


class _BigIntListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BigIntListFilter = Union[
    _BigIntListFilterHasInput,
    _BigIntListFilterEqualsInput,
    _BigIntListFilterHasSomeInput,
    _BigIntListFilterIsEmptyInput,
    _BigIntListFilterHasEveryInput,
]


class _BigIntListUpdateSet(TypedDict):
    set: List[_int]


class _BigIntListUpdatePush(TypedDict):
    push: List[_int]


BigIntListUpdate = Union[
    List[_int],
    _BigIntListUpdateSet,
    _BigIntListUpdatePush,
]

class _FloatListFilterEqualsInput(TypedDict):
    equals: Optional[List[_float]]


class _FloatListFilterHasInput(TypedDict):
    has: _float


class _FloatListFilterHasEveryInput(TypedDict):
    has_every: List[_float]


class _FloatListFilterHasSomeInput(TypedDict):
    has_some: List[_float]


class _FloatListFilterIsEmptyInput(TypedDict):
    is_empty: bool


FloatListFilter = Union[
    _FloatListFilterHasInput,
    _FloatListFilterEqualsInput,
    _FloatListFilterHasSomeInput,
    _FloatListFilterIsEmptyInput,
    _FloatListFilterHasEveryInput,
]


class _FloatListUpdateSet(TypedDict):
    set: List[_float]


class _FloatListUpdatePush(TypedDict):
    push: List[_float]


FloatListUpdate = Union[
    List[_float],
    _FloatListUpdateSet,
    _FloatListUpdatePush,
]

class _JsonListFilterEqualsInput(TypedDict):
    equals: Optional[List['fields.Json']]


class _JsonListFilterHasInput(TypedDict):
    has: 'fields.Json'


class _JsonListFilterHasEveryInput(TypedDict):
    has_every: List['fields.Json']


class _JsonListFilterHasSomeInput(TypedDict):
    has_some: List['fields.Json']


class _JsonListFilterIsEmptyInput(TypedDict):
    is_empty: bool


JsonListFilter = Union[
    _JsonListFilterHasInput,
    _JsonListFilterEqualsInput,
    _JsonListFilterHasSomeInput,
    _JsonListFilterIsEmptyInput,
    _JsonListFilterHasEveryInput,
]


class _JsonListUpdateSet(TypedDict):
    set: List['fields.Json']


class _JsonListUpdatePush(TypedDict):
    push: List['fields.Json']


JsonListUpdate = Union[
    List['fields.Json'],
    _JsonListUpdateSet,
    _JsonListUpdatePush,
]

class _DecimalListFilterEqualsInput(TypedDict):
    equals: Optional[List[decimal.Decimal]]


class _DecimalListFilterHasInput(TypedDict):
    has: decimal.Decimal


class _DecimalListFilterHasEveryInput(TypedDict):
    has_every: List[decimal.Decimal]


class _DecimalListFilterHasSomeInput(TypedDict):
    has_some: List[decimal.Decimal]


class _DecimalListFilterIsEmptyInput(TypedDict):
    is_empty: bool


DecimalListFilter = Union[
    _DecimalListFilterHasInput,
    _DecimalListFilterEqualsInput,
    _DecimalListFilterHasSomeInput,
    _DecimalListFilterIsEmptyInput,
    _DecimalListFilterHasEveryInput,
]


class _DecimalListUpdateSet(TypedDict):
    set: List[decimal.Decimal]


class _DecimalListUpdatePush(TypedDict):
    push: List[decimal.Decimal]


DecimalListUpdate = Union[
    List[decimal.Decimal],
    _DecimalListUpdateSet,
    _DecimalListUpdatePush,
]

class _UserRoleListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.UserRole']]


class _UserRoleListFilterHasInput(TypedDict):
    has: 'enums.UserRole'


class _UserRoleListFilterHasEveryInput(TypedDict):
    has_every: List['enums.UserRole']


class _UserRoleListFilterHasSomeInput(TypedDict):
    has_some: List['enums.UserRole']


class _UserRoleListFilterIsEmptyInput(TypedDict):
    is_empty: bool


UserRoleListFilter = Union[
    _UserRoleListFilterHasInput,
    _UserRoleListFilterEqualsInput,
    _UserRoleListFilterHasSomeInput,
    _UserRoleListFilterIsEmptyInput,
    _UserRoleListFilterHasEveryInput,
]


class _UserRoleListUpdateSet(TypedDict):
    set: List['enums.UserRole']


class _UserRoleListUpdatePush(TypedDict):
    push: List['enums.UserRole']


UserRoleListUpdate = Union[
    List['enums.UserRole'],
    _UserRoleListUpdateSet,
    _UserRoleListUpdatePush,
]

class _LeadSourceListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.LeadSource']]


class _LeadSourceListFilterHasInput(TypedDict):
    has: 'enums.LeadSource'


class _LeadSourceListFilterHasEveryInput(TypedDict):
    has_every: List['enums.LeadSource']


class _LeadSourceListFilterHasSomeInput(TypedDict):
    has_some: List['enums.LeadSource']


class _LeadSourceListFilterIsEmptyInput(TypedDict):
    is_empty: bool


LeadSourceListFilter = Union[
    _LeadSourceListFilterHasInput,
    _LeadSourceListFilterEqualsInput,
    _LeadSourceListFilterHasSomeInput,
    _LeadSourceListFilterIsEmptyInput,
    _LeadSourceListFilterHasEveryInput,
]


class _LeadSourceListUpdateSet(TypedDict):
    set: List['enums.LeadSource']


class _LeadSourceListUpdatePush(TypedDict):
    push: List['enums.LeadSource']


LeadSourceListUpdate = Union[
    List['enums.LeadSource'],
    _LeadSourceListUpdateSet,
    _LeadSourceListUpdatePush,
]

class _LeadStatusListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.LeadStatus']]


class _LeadStatusListFilterHasInput(TypedDict):
    has: 'enums.LeadStatus'


class _LeadStatusListFilterHasEveryInput(TypedDict):
    has_every: List['enums.LeadStatus']


class _LeadStatusListFilterHasSomeInput(TypedDict):
    has_some: List['enums.LeadStatus']


class _LeadStatusListFilterIsEmptyInput(TypedDict):
    is_empty: bool


LeadStatusListFilter = Union[
    _LeadStatusListFilterHasInput,
    _LeadStatusListFilterEqualsInput,
    _LeadStatusListFilterHasSomeInput,
    _LeadStatusListFilterIsEmptyInput,
    _LeadStatusListFilterHasEveryInput,
]


class _LeadStatusListUpdateSet(TypedDict):
    set: List['enums.LeadStatus']


class _LeadStatusListUpdatePush(TypedDict):
    push: List['enums.LeadStatus']


LeadStatusListUpdate = Union[
    List['enums.LeadStatus'],
    _LeadStatusListUpdateSet,
    _LeadStatusListUpdatePush,
]

class _ConsentTypeListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.ConsentType']]


class _ConsentTypeListFilterHasInput(TypedDict):
    has: 'enums.ConsentType'


class _ConsentTypeListFilterHasEveryInput(TypedDict):
    has_every: List['enums.ConsentType']


class _ConsentTypeListFilterHasSomeInput(TypedDict):
    has_some: List['enums.ConsentType']


class _ConsentTypeListFilterIsEmptyInput(TypedDict):
    is_empty: bool


ConsentTypeListFilter = Union[
    _ConsentTypeListFilterHasInput,
    _ConsentTypeListFilterEqualsInput,
    _ConsentTypeListFilterHasSomeInput,
    _ConsentTypeListFilterIsEmptyInput,
    _ConsentTypeListFilterHasEveryInput,
]


class _ConsentTypeListUpdateSet(TypedDict):
    set: List['enums.ConsentType']


class _ConsentTypeListUpdatePush(TypedDict):
    push: List['enums.ConsentType']


ConsentTypeListUpdate = Union[
    List['enums.ConsentType'],
    _ConsentTypeListUpdateSet,
    _ConsentTypeListUpdatePush,
]

class _MessageTypeListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.MessageType']]


class _MessageTypeListFilterHasInput(TypedDict):
    has: 'enums.MessageType'


class _MessageTypeListFilterHasEveryInput(TypedDict):
    has_every: List['enums.MessageType']


class _MessageTypeListFilterHasSomeInput(TypedDict):
    has_some: List['enums.MessageType']


class _MessageTypeListFilterIsEmptyInput(TypedDict):
    is_empty: bool


MessageTypeListFilter = Union[
    _MessageTypeListFilterHasInput,
    _MessageTypeListFilterEqualsInput,
    _MessageTypeListFilterHasSomeInput,
    _MessageTypeListFilterIsEmptyInput,
    _MessageTypeListFilterHasEveryInput,
]


class _MessageTypeListUpdateSet(TypedDict):
    set: List['enums.MessageType']


class _MessageTypeListUpdatePush(TypedDict):
    push: List['enums.MessageType']


MessageTypeListUpdate = Union[
    List['enums.MessageType'],
    _MessageTypeListUpdateSet,
    _MessageTypeListUpdatePush,
]

class _MessagePlatformListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.MessagePlatform']]


class _MessagePlatformListFilterHasInput(TypedDict):
    has: 'enums.MessagePlatform'


class _MessagePlatformListFilterHasEveryInput(TypedDict):
    has_every: List['enums.MessagePlatform']


class _MessagePlatformListFilterHasSomeInput(TypedDict):
    has_some: List['enums.MessagePlatform']


class _MessagePlatformListFilterIsEmptyInput(TypedDict):
    is_empty: bool


MessagePlatformListFilter = Union[
    _MessagePlatformListFilterHasInput,
    _MessagePlatformListFilterEqualsInput,
    _MessagePlatformListFilterHasSomeInput,
    _MessagePlatformListFilterIsEmptyInput,
    _MessagePlatformListFilterHasEveryInput,
]


class _MessagePlatformListUpdateSet(TypedDict):
    set: List['enums.MessagePlatform']


class _MessagePlatformListUpdatePush(TypedDict):
    push: List['enums.MessagePlatform']


MessagePlatformListUpdate = Union[
    List['enums.MessagePlatform'],
    _MessagePlatformListUpdateSet,
    _MessagePlatformListUpdatePush,
]

class _MessageStatusListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.MessageStatus']]


class _MessageStatusListFilterHasInput(TypedDict):
    has: 'enums.MessageStatus'


class _MessageStatusListFilterHasEveryInput(TypedDict):
    has_every: List['enums.MessageStatus']


class _MessageStatusListFilterHasSomeInput(TypedDict):
    has_some: List['enums.MessageStatus']


class _MessageStatusListFilterIsEmptyInput(TypedDict):
    is_empty: bool


MessageStatusListFilter = Union[
    _MessageStatusListFilterHasInput,
    _MessageStatusListFilterEqualsInput,
    _MessageStatusListFilterHasSomeInput,
    _MessageStatusListFilterIsEmptyInput,
    _MessageStatusListFilterHasEveryInput,
]


class _MessageStatusListUpdateSet(TypedDict):
    set: List['enums.MessageStatus']


class _MessageStatusListUpdatePush(TypedDict):
    push: List['enums.MessageStatus']


MessageStatusListUpdate = Union[
    List['enums.MessageStatus'],
    _MessageStatusListUpdateSet,
    _MessageStatusListUpdatePush,
]

class _CampaignTypeListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.CampaignType']]


class _CampaignTypeListFilterHasInput(TypedDict):
    has: 'enums.CampaignType'


class _CampaignTypeListFilterHasEveryInput(TypedDict):
    has_every: List['enums.CampaignType']


class _CampaignTypeListFilterHasSomeInput(TypedDict):
    has_some: List['enums.CampaignType']


class _CampaignTypeListFilterIsEmptyInput(TypedDict):
    is_empty: bool


CampaignTypeListFilter = Union[
    _CampaignTypeListFilterHasInput,
    _CampaignTypeListFilterEqualsInput,
    _CampaignTypeListFilterHasSomeInput,
    _CampaignTypeListFilterIsEmptyInput,
    _CampaignTypeListFilterHasEveryInput,
]


class _CampaignTypeListUpdateSet(TypedDict):
    set: List['enums.CampaignType']


class _CampaignTypeListUpdatePush(TypedDict):
    push: List['enums.CampaignType']


CampaignTypeListUpdate = Union[
    List['enums.CampaignType'],
    _CampaignTypeListUpdateSet,
    _CampaignTypeListUpdatePush,
]

class _CampaignStatusListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.CampaignStatus']]


class _CampaignStatusListFilterHasInput(TypedDict):
    has: 'enums.CampaignStatus'


class _CampaignStatusListFilterHasEveryInput(TypedDict):
    has_every: List['enums.CampaignStatus']


class _CampaignStatusListFilterHasSomeInput(TypedDict):
    has_some: List['enums.CampaignStatus']


class _CampaignStatusListFilterIsEmptyInput(TypedDict):
    is_empty: bool


CampaignStatusListFilter = Union[
    _CampaignStatusListFilterHasInput,
    _CampaignStatusListFilterEqualsInput,
    _CampaignStatusListFilterHasSomeInput,
    _CampaignStatusListFilterIsEmptyInput,
    _CampaignStatusListFilterHasEveryInput,
]


class _CampaignStatusListUpdateSet(TypedDict):
    set: List['enums.CampaignStatus']


class _CampaignStatusListUpdatePush(TypedDict):
    push: List['enums.CampaignStatus']


CampaignStatusListUpdate = Union[
    List['enums.CampaignStatus'],
    _CampaignStatusListUpdateSet,
    _CampaignStatusListUpdatePush,
]


# User types

class UserOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the User create method"""
    id: _str
    name: Optional[_str]
    image: Optional[_str]
    role: 'enums.UserRole'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    facebookId: Optional[_str]
    facebookToken: Optional[_str]
    facebookTokenExpiry: Optional[datetime.datetime]
    facebookPages: 'FacebookPageCreateManyNestedWithoutRelationsInput'
    whatsappNumbers: 'WhatsappNumberCreateManyNestedWithoutRelationsInput'
    leads: 'LeadCreateManyNestedWithoutRelationsInput'
    campaigns: 'CampaignCreateManyNestedWithoutRelationsInput'
    auditLogs: 'AuditLogCreateManyNestedWithoutRelationsInput'


class UserCreateInput(UserOptionalCreateInput):
    """Required arguments to the User create method"""
    email: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class UserOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the User create method, without relations"""
    id: _str
    name: Optional[_str]
    image: Optional[_str]
    role: 'enums.UserRole'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    facebookId: Optional[_str]
    facebookToken: Optional[_str]
    facebookTokenExpiry: Optional[datetime.datetime]


class UserCreateWithoutRelationsInput(UserOptionalCreateWithoutRelationsInput):
    """Required arguments to the User create method, without relations"""
    email: _str

class UserConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'UserCreateWithoutRelationsInput'
    where: 'UserWhereUniqueInput'

class UserCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'UserCreateWithoutRelationsInput'
    connect: 'UserWhereUniqueInput'
    connect_or_create: 'UserConnectOrCreateWithoutRelationsInput'


class UserCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['UserCreateWithoutRelationsInput', List['UserCreateWithoutRelationsInput']]
    connect: Union['UserWhereUniqueInput', List['UserWhereUniqueInput']]
    connect_or_create: Union['UserConnectOrCreateWithoutRelationsInput', List['UserConnectOrCreateWithoutRelationsInput']]

_UserWhereUnique_id_Input = TypedDict(
    '_UserWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

_UserWhereUnique_email_Input = TypedDict(
    '_UserWhereUnique_email_Input',
    {
        'email': '_str',
    },
    total=True
)

_UserWhereUnique_facebookId_Input = TypedDict(
    '_UserWhereUnique_facebookId_Input',
    {
        'facebookId': '_str',
    },
    total=True
)

UserWhereUniqueInput = Union[
    '_UserWhereUnique_id_Input',
    '_UserWhereUnique_email_Input',
    '_UserWhereUnique_facebookId_Input',
]


class UserUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    email: _str
    name: Optional[_str]
    image: Optional[_str]
    role: 'enums.UserRole'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    facebookId: Optional[_str]
    facebookToken: Optional[_str]
    facebookTokenExpiry: Optional[datetime.datetime]
    facebookPages: 'FacebookPageUpdateManyWithoutRelationsInput'
    whatsappNumbers: 'WhatsappNumberUpdateManyWithoutRelationsInput'
    leads: 'LeadUpdateManyWithoutRelationsInput'
    campaigns: 'CampaignUpdateManyWithoutRelationsInput'
    auditLogs: 'AuditLogUpdateManyWithoutRelationsInput'


class UserUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    email: _str
    name: Optional[_str]
    image: Optional[_str]
    role: 'enums.UserRole'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    facebookId: Optional[_str]
    facebookToken: Optional[_str]
    facebookTokenExpiry: Optional[datetime.datetime]


class UserUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['UserCreateWithoutRelationsInput']
    connect: List['UserWhereUniqueInput']
    connect_or_create: List['UserConnectOrCreateWithoutRelationsInput']
    set: List['UserWhereUniqueInput']
    disconnect: List['UserWhereUniqueInput']
    delete: List['UserWhereUniqueInput']

    # TODO
    # update: List['UserUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['UserUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['UserScalarWhereInput']
    # upsert: List['UserUpserteWithWhereUniqueWithoutRelationsInput']


class UserUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'UserCreateWithoutRelationsInput'
    connect: 'UserWhereUniqueInput'
    connect_or_create: 'UserConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'UserUpdateInput'
    # upsert: 'UserUpsertWithoutRelationsInput'


class UserUpsertInput(TypedDict):
    create: 'UserCreateInput'
    update: 'UserUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_User_id_OrderByInput = TypedDict(
    '_User_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_User_email_OrderByInput = TypedDict(
    '_User_email_OrderByInput',
    {
        'email': 'SortOrder',
    },
    total=True
)

_User_name_OrderByInput = TypedDict(
    '_User_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_User_image_OrderByInput = TypedDict(
    '_User_image_OrderByInput',
    {
        'image': 'SortOrder',
    },
    total=True
)

_User_role_OrderByInput = TypedDict(
    '_User_role_OrderByInput',
    {
        'role': 'SortOrder',
    },
    total=True
)

_User_createdAt_OrderByInput = TypedDict(
    '_User_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_User_updatedAt_OrderByInput = TypedDict(
    '_User_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_User_facebookId_OrderByInput = TypedDict(
    '_User_facebookId_OrderByInput',
    {
        'facebookId': 'SortOrder',
    },
    total=True
)

_User_facebookToken_OrderByInput = TypedDict(
    '_User_facebookToken_OrderByInput',
    {
        'facebookToken': 'SortOrder',
    },
    total=True
)

_User_facebookTokenExpiry_OrderByInput = TypedDict(
    '_User_facebookTokenExpiry_OrderByInput',
    {
        'facebookTokenExpiry': 'SortOrder',
    },
    total=True
)

_User_RelevanceInner = TypedDict(
    '_User_RelevanceInner',
    {
        'fields': 'List[UserScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_User_RelevanceOrderByInput = TypedDict(
    '_User_RelevanceOrderByInput',
    {
        '_relevance': '_User_RelevanceInner',
    },
    total=True
)

UserOrderByInput = Union[
    '_User_id_OrderByInput',
    '_User_email_OrderByInput',
    '_User_name_OrderByInput',
    '_User_image_OrderByInput',
    '_User_role_OrderByInput',
    '_User_createdAt_OrderByInput',
    '_User_updatedAt_OrderByInput',
    '_User_facebookId_OrderByInput',
    '_User_facebookToken_OrderByInput',
    '_User_facebookTokenExpiry_OrderByInput',
    '_User_RelevanceOrderByInput',
]



# recursive User types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

UserRelationFilter = TypedDict(
    'UserRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class UserListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class UserInclude(TypedDict, total=False):
    """User relational arguments"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromUser']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromUser']
    leads: Union[bool, 'FindManyLeadArgsFromUser']
    campaigns: Union[bool, 'FindManyCampaignArgsFromUser']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromUser']


    

class UserIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromUserRecursive1']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromUserRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromUserRecursive1']
    campaigns: Union[bool, 'FindManyCampaignArgsFromUserRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromUserRecursive1']


class UserIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromUserRecursive2']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromUserRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromUserRecursive2']
    campaigns: Union[bool, 'FindManyCampaignArgsFromUserRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromUserRecursive2']


class UserIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromUserRecursive3']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromUserRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromUserRecursive3']
    campaigns: Union[bool, 'FindManyCampaignArgsFromUserRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromUserRecursive3']


class UserIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromUserRecursive4']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromUserRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromUserRecursive4']
    campaigns: Union[bool, 'FindManyCampaignArgsFromUserRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromUserRecursive4']


class UserIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class UserArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyUserArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class FacebookPageIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']
    posts: Union[bool, 'FindManyFacebookPostArgsFromUserRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromUserRecursive1']


class FacebookPageIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']
    posts: Union[bool, 'FindManyFacebookPostArgsFromUserRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromUserRecursive2']


class FacebookPageIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']
    posts: Union[bool, 'FindManyFacebookPostArgsFromUserRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromUserRecursive3']


class FacebookPageIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']
    posts: Union[bool, 'FindManyFacebookPostArgsFromUserRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromUserRecursive4']


class FacebookPageIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class FacebookPageArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FacebookPageArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FacebookPageArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FacebookPageArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FacebookPageArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyFacebookPageArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FindManyFacebookPageArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FindManyFacebookPageArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FindManyFacebookPageArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FindManyFacebookPageArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    
    

class FacebookPostIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    facebookPage: Union[bool, 'FacebookPageArgsFromUserRecursive1']


class FacebookPostIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    facebookPage: Union[bool, 'FacebookPageArgsFromUserRecursive2']


class FacebookPostIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    facebookPage: Union[bool, 'FacebookPageArgsFromUserRecursive3']


class FacebookPostIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    facebookPage: Union[bool, 'FacebookPageArgsFromUserRecursive4']


class FacebookPostIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class FacebookPostArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FacebookPostArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FacebookPostArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FacebookPostArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FacebookPostArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyFacebookPostArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FindManyFacebookPostArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FindManyFacebookPostArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FindManyFacebookPostArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FindManyFacebookPostArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    
    

class WhatsappNumberIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromUserRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive1']


class WhatsappNumberIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromUserRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive2']


class WhatsappNumberIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromUserRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive3']


class WhatsappNumberIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromUserRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive4']


class WhatsappNumberIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class WhatsappNumberArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class WhatsappNumberArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class WhatsappNumberArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class WhatsappNumberArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class WhatsappNumberArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyWhatsappNumberArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class FindManyWhatsappNumberArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class FindManyWhatsappNumberArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class FindManyWhatsappNumberArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class FindManyWhatsappNumberArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    
    

class WhatsappTemplateIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromUserRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive1']


class WhatsappTemplateIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromUserRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive2']


class WhatsappTemplateIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromUserRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive3']


class WhatsappTemplateIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromUserRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive4']


class WhatsappTemplateIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class WhatsappTemplateArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class WhatsappTemplateArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class WhatsappTemplateArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class WhatsappTemplateArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class WhatsappTemplateArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyWhatsappTemplateArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class FindManyWhatsappTemplateArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class FindManyWhatsappTemplateArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class FindManyWhatsappTemplateArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class FindManyWhatsappTemplateArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    
    

class LeadIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']
    facebookPage: Union[bool, 'FacebookPageArgsFromUserRecursive1']
    tags: Union[bool, 'FindManyLeadTagArgsFromUserRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive1']


class LeadIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']
    facebookPage: Union[bool, 'FacebookPageArgsFromUserRecursive2']
    tags: Union[bool, 'FindManyLeadTagArgsFromUserRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive2']


class LeadIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']
    facebookPage: Union[bool, 'FacebookPageArgsFromUserRecursive3']
    tags: Union[bool, 'FindManyLeadTagArgsFromUserRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive3']


class LeadIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']
    facebookPage: Union[bool, 'FacebookPageArgsFromUserRecursive4']
    tags: Union[bool, 'FindManyLeadTagArgsFromUserRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive4']


class LeadIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class LeadArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'LeadIncludeFromLeadRecursive1'


class LeadArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'LeadIncludeFromLeadRecursive2'


class LeadArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'LeadIncludeFromLeadRecursive3'


class LeadArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'LeadIncludeFromLeadRecursive4'


class LeadArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyLeadArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive1'


class FindManyLeadArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive2'


class FindManyLeadArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive3'


class FindManyLeadArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive4'


class FindManyLeadArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    
    

class TagIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    leads: Union[bool, 'FindManyLeadTagArgsFromUserRecursive1']


class TagIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    leads: Union[bool, 'FindManyLeadTagArgsFromUserRecursive2']


class TagIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    leads: Union[bool, 'FindManyLeadTagArgsFromUserRecursive3']


class TagIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    leads: Union[bool, 'FindManyLeadTagArgsFromUserRecursive4']


class TagIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class TagArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'TagIncludeFromTagRecursive1'


class TagArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'TagIncludeFromTagRecursive2'


class TagArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'TagIncludeFromTagRecursive3'


class TagArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'TagIncludeFromTagRecursive4'


class TagArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyTagArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive1'


class FindManyTagArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive2'


class FindManyTagArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive3'


class FindManyTagArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive4'


class FindManyTagArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    
    

class LeadTagIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    lead: Union[bool, 'LeadArgsFromUserRecursive1']
    tag: Union[bool, 'TagArgsFromUserRecursive1']


class LeadTagIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    lead: Union[bool, 'LeadArgsFromUserRecursive2']
    tag: Union[bool, 'TagArgsFromUserRecursive2']


class LeadTagIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    lead: Union[bool, 'LeadArgsFromUserRecursive3']
    tag: Union[bool, 'TagArgsFromUserRecursive3']


class LeadTagIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    lead: Union[bool, 'LeadArgsFromUserRecursive4']
    tag: Union[bool, 'TagArgsFromUserRecursive4']


class LeadTagIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class LeadTagArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class LeadTagArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class LeadTagArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class LeadTagArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class LeadTagArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyLeadTagArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class FindManyLeadTagArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class FindManyLeadTagArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class FindManyLeadTagArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class FindManyLeadTagArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    
    

class MessageIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    lead: Union[bool, 'LeadArgsFromUserRecursive1']
    campaign: Union[bool, 'CampaignArgsFromUserRecursive1']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromUserRecursive1']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromUserRecursive1']


class MessageIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    lead: Union[bool, 'LeadArgsFromUserRecursive2']
    campaign: Union[bool, 'CampaignArgsFromUserRecursive2']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromUserRecursive2']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromUserRecursive2']


class MessageIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    lead: Union[bool, 'LeadArgsFromUserRecursive3']
    campaign: Union[bool, 'CampaignArgsFromUserRecursive3']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromUserRecursive3']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromUserRecursive3']


class MessageIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    lead: Union[bool, 'LeadArgsFromUserRecursive4']
    campaign: Union[bool, 'CampaignArgsFromUserRecursive4']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromUserRecursive4']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromUserRecursive4']


class MessageIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class MessageArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyMessageArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class CampaignIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive1']


class CampaignIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive2']


class CampaignIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive3']


class CampaignIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive4']


class CampaignIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class CampaignArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'CampaignIncludeFromCampaignRecursive1'


class CampaignArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'CampaignIncludeFromCampaignRecursive2'


class CampaignArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'CampaignIncludeFromCampaignRecursive3'


class CampaignArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'CampaignIncludeFromCampaignRecursive4'


class CampaignArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyCampaignArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive1'


class FindManyCampaignArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive2'


class FindManyCampaignArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive3'


class FindManyCampaignArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive4'


class FindManyCampaignArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    
    

class AuditLogIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']


class AuditLogIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']


class AuditLogIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']


class AuditLogIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']


class AuditLogIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class AuditLogArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyAuditLogArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    
    

class ApiKeyIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""


class ApiKeyIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""


class ApiKeyIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""


class ApiKeyIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""


class ApiKeyIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class ApiKeyArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class ApiKeyArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class ApiKeyArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class ApiKeyArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class ApiKeyArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyApiKeyArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class FindManyApiKeyArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class FindManyApiKeyArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class FindManyApiKeyArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class FindManyApiKeyArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    
    

class RateLimitIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""


class RateLimitIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""


class RateLimitIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""


class RateLimitIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""


class RateLimitIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class RateLimitArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class RateLimitArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class RateLimitArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class RateLimitArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class RateLimitArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyRateLimitArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class FindManyRateLimitArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class FindManyRateLimitArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class FindManyRateLimitArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class FindManyRateLimitArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    


FindManyUserArgs = FindManyUserArgsFromUser
FindFirstUserArgs = FindManyUserArgsFromUser


    

class UserWhereInput(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    email: Union[_str, 'types.StringFilter']
    name: Union[None, _str, 'types.StringFilter']
    image: Union[None, _str, 'types.StringFilter']
    role: 'enums.UserRole'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    facebookId: Union[None, _str, 'types.StringFilter']
    facebookToken: Union[None, _str, 'types.StringFilter']
    facebookTokenExpiry: Union[None, datetime.datetime, 'types.DateTimeFilter']
    facebookPages: 'FacebookPageListRelationFilter'
    whatsappNumbers: 'WhatsappNumberListRelationFilter'
    leads: 'LeadListRelationFilter'
    campaigns: 'CampaignListRelationFilter'
    auditLogs: 'AuditLogListRelationFilter'

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive1', List['UserWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive1']
    OR: List['UserWhereInputRecursive1']
    NOT: List['UserWhereInputRecursive1']


class UserWhereInputRecursive1(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    email: Union[_str, 'types.StringFilter']
    name: Union[None, _str, 'types.StringFilter']
    image: Union[None, _str, 'types.StringFilter']
    role: 'enums.UserRole'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    facebookId: Union[None, _str, 'types.StringFilter']
    facebookToken: Union[None, _str, 'types.StringFilter']
    facebookTokenExpiry: Union[None, datetime.datetime, 'types.DateTimeFilter']
    facebookPages: 'FacebookPageListRelationFilter'
    whatsappNumbers: 'WhatsappNumberListRelationFilter'
    leads: 'LeadListRelationFilter'
    campaigns: 'CampaignListRelationFilter'
    auditLogs: 'AuditLogListRelationFilter'

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive2', List['UserWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive2']
    OR: List['UserWhereInputRecursive2']
    NOT: List['UserWhereInputRecursive2']


class UserWhereInputRecursive2(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    email: Union[_str, 'types.StringFilter']
    name: Union[None, _str, 'types.StringFilter']
    image: Union[None, _str, 'types.StringFilter']
    role: 'enums.UserRole'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    facebookId: Union[None, _str, 'types.StringFilter']
    facebookToken: Union[None, _str, 'types.StringFilter']
    facebookTokenExpiry: Union[None, datetime.datetime, 'types.DateTimeFilter']
    facebookPages: 'FacebookPageListRelationFilter'
    whatsappNumbers: 'WhatsappNumberListRelationFilter'
    leads: 'LeadListRelationFilter'
    campaigns: 'CampaignListRelationFilter'
    auditLogs: 'AuditLogListRelationFilter'

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive3', List['UserWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive3']
    OR: List['UserWhereInputRecursive3']
    NOT: List['UserWhereInputRecursive3']


class UserWhereInputRecursive3(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    email: Union[_str, 'types.StringFilter']
    name: Union[None, _str, 'types.StringFilter']
    image: Union[None, _str, 'types.StringFilter']
    role: 'enums.UserRole'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    facebookId: Union[None, _str, 'types.StringFilter']
    facebookToken: Union[None, _str, 'types.StringFilter']
    facebookTokenExpiry: Union[None, datetime.datetime, 'types.DateTimeFilter']
    facebookPages: 'FacebookPageListRelationFilter'
    whatsappNumbers: 'WhatsappNumberListRelationFilter'
    leads: 'LeadListRelationFilter'
    campaigns: 'CampaignListRelationFilter'
    auditLogs: 'AuditLogListRelationFilter'

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive4', List['UserWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive4']
    OR: List['UserWhereInputRecursive4']
    NOT: List['UserWhereInputRecursive4']


class UserWhereInputRecursive4(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    email: Union[_str, 'types.StringFilter']
    name: Union[None, _str, 'types.StringFilter']
    image: Union[None, _str, 'types.StringFilter']
    role: 'enums.UserRole'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    facebookId: Union[None, _str, 'types.StringFilter']
    facebookToken: Union[None, _str, 'types.StringFilter']
    facebookTokenExpiry: Union[None, datetime.datetime, 'types.DateTimeFilter']
    facebookPages: 'FacebookPageListRelationFilter'
    whatsappNumbers: 'WhatsappNumberListRelationFilter'
    leads: 'LeadListRelationFilter'
    campaigns: 'CampaignListRelationFilter'
    auditLogs: 'AuditLogListRelationFilter'



# aggregate User types


    

class UserScalarWhereWithAggregatesInput(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    image: Union[_str, 'types.StringWithAggregatesFilter']
    role: 'enums.UserRole'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    facebookId: Union[_str, 'types.StringWithAggregatesFilter']
    facebookToken: Union[_str, 'types.StringWithAggregatesFilter']
    facebookTokenExpiry: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive1']
    OR: List['UserScalarWhereWithAggregatesInputRecursive1']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive1']


class UserScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    image: Union[_str, 'types.StringWithAggregatesFilter']
    role: 'enums.UserRole'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    facebookId: Union[_str, 'types.StringWithAggregatesFilter']
    facebookToken: Union[_str, 'types.StringWithAggregatesFilter']
    facebookTokenExpiry: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive2']
    OR: List['UserScalarWhereWithAggregatesInputRecursive2']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive2']


class UserScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    image: Union[_str, 'types.StringWithAggregatesFilter']
    role: 'enums.UserRole'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    facebookId: Union[_str, 'types.StringWithAggregatesFilter']
    facebookToken: Union[_str, 'types.StringWithAggregatesFilter']
    facebookTokenExpiry: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive3']
    OR: List['UserScalarWhereWithAggregatesInputRecursive3']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive3']


class UserScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    image: Union[_str, 'types.StringWithAggregatesFilter']
    role: 'enums.UserRole'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    facebookId: Union[_str, 'types.StringWithAggregatesFilter']
    facebookToken: Union[_str, 'types.StringWithAggregatesFilter']
    facebookTokenExpiry: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive4']
    OR: List['UserScalarWhereWithAggregatesInputRecursive4']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive4']


class UserScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    image: Union[_str, 'types.StringWithAggregatesFilter']
    role: 'enums.UserRole'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    facebookId: Union[_str, 'types.StringWithAggregatesFilter']
    facebookToken: Union[_str, 'types.StringWithAggregatesFilter']
    facebookTokenExpiry: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class UserGroupByOutput(TypedDict, total=False):
    id: _str
    email: _str
    name: _str
    image: _str
    role: 'enums.UserRole'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    facebookId: _str
    facebookToken: _str
    facebookTokenExpiry: datetime.datetime
    _sum: 'UserSumAggregateOutput'
    _avg: 'UserAvgAggregateOutput'
    _min: 'UserMinAggregateOutput'
    _max: 'UserMaxAggregateOutput'
    _count: 'UserCountAggregateOutput'


class UserAvgAggregateOutput(TypedDict, total=False):
    """User output for aggregating averages"""


class UserSumAggregateOutput(TypedDict, total=False):
    """User output for aggregating sums"""


class UserScalarAggregateOutput(TypedDict, total=False):
    """User output including scalar fields"""
    id: _str
    email: _str
    name: _str
    image: _str
    role: 'enums.UserRole'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    facebookId: _str
    facebookToken: _str
    facebookTokenExpiry: datetime.datetime


UserMinAggregateOutput = UserScalarAggregateOutput
UserMaxAggregateOutput = UserScalarAggregateOutput


class UserMaxAggregateInput(TypedDict, total=False):
    """User input for aggregating by max"""
    id: bool
    email: bool
    name: bool
    image: bool
    role: bool
    createdAt: bool
    updatedAt: bool
    facebookId: bool
    facebookToken: bool
    facebookTokenExpiry: bool


class UserMinAggregateInput(TypedDict, total=False):
    """User input for aggregating by min"""
    id: bool
    email: bool
    name: bool
    image: bool
    role: bool
    createdAt: bool
    updatedAt: bool
    facebookId: bool
    facebookToken: bool
    facebookTokenExpiry: bool


class UserNumberAggregateInput(TypedDict, total=False):
    """User input for aggregating numbers"""


UserAvgAggregateInput = UserNumberAggregateInput
UserSumAggregateInput = UserNumberAggregateInput


UserCountAggregateInput = TypedDict(
    'UserCountAggregateInput',
    {
        'id': bool,
        'email': bool,
        'name': bool,
        'image': bool,
        'role': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'facebookId': bool,
        'facebookToken': bool,
        'facebookTokenExpiry': bool,
        '_all': bool,
    },
    total=False,
)

UserCountAggregateOutput = TypedDict(
    'UserCountAggregateOutput',
    {
        'id': int,
        'email': int,
        'name': int,
        'image': int,
        'role': int,
        'createdAt': int,
        'updatedAt': int,
        'facebookId': int,
        'facebookToken': int,
        'facebookTokenExpiry': int,
        '_all': int,
    },
    total=False,
)


UserKeys = Literal[
    'id',
    'email',
    'name',
    'image',
    'role',
    'createdAt',
    'updatedAt',
    'facebookId',
    'facebookToken',
    'facebookTokenExpiry',
    'facebookPages',
    'whatsappNumbers',
    'leads',
    'campaigns',
    'auditLogs',
]
UserScalarFieldKeys = Literal[
    'id',
    'email',
    'name',
    'image',
    'role',
    'createdAt',
    'updatedAt',
    'facebookId',
    'facebookToken',
    'facebookTokenExpiry',
]
UserScalarFieldKeysT = TypeVar('UserScalarFieldKeysT', bound=UserScalarFieldKeys)

UserRelationalFieldKeys = Literal[
        'facebookPages',
        'whatsappNumbers',
        'leads',
        'campaigns',
        'auditLogs',
    ]

# FacebookPage types

class FacebookPageOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the FacebookPage create method"""
    id: _str
    tokenExpiry: Optional[datetime.datetime]
    isActive: _bool
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    userId: _str
    user: 'UserCreateNestedWithoutRelationsInput'
    posts: 'FacebookPostCreateManyNestedWithoutRelationsInput'
    leads: 'LeadCreateManyNestedWithoutRelationsInput'


class FacebookPageCreateInput(FacebookPageOptionalCreateInput):
    """Required arguments to the FacebookPage create method"""
    facebookPageId: _str
    name: _str
    accessToken: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class FacebookPageOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the FacebookPage create method, without relations"""
    id: _str
    tokenExpiry: Optional[datetime.datetime]
    isActive: _bool
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    userId: _str


class FacebookPageCreateWithoutRelationsInput(FacebookPageOptionalCreateWithoutRelationsInput):
    """Required arguments to the FacebookPage create method, without relations"""
    facebookPageId: _str
    name: _str
    accessToken: _str

class FacebookPageConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'FacebookPageCreateWithoutRelationsInput'
    where: 'FacebookPageWhereUniqueInput'

class FacebookPageCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'FacebookPageCreateWithoutRelationsInput'
    connect: 'FacebookPageWhereUniqueInput'
    connect_or_create: 'FacebookPageConnectOrCreateWithoutRelationsInput'


class FacebookPageCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['FacebookPageCreateWithoutRelationsInput', List['FacebookPageCreateWithoutRelationsInput']]
    connect: Union['FacebookPageWhereUniqueInput', List['FacebookPageWhereUniqueInput']]
    connect_or_create: Union['FacebookPageConnectOrCreateWithoutRelationsInput', List['FacebookPageConnectOrCreateWithoutRelationsInput']]

_FacebookPageWhereUnique_id_Input = TypedDict(
    '_FacebookPageWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

_FacebookPageWhereUnique_facebookPageId_Input = TypedDict(
    '_FacebookPageWhereUnique_facebookPageId_Input',
    {
        'facebookPageId': '_str',
    },
    total=True
)

FacebookPageWhereUniqueInput = Union[
    '_FacebookPageWhereUnique_id_Input',
    '_FacebookPageWhereUnique_facebookPageId_Input',
]


class FacebookPageUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    facebookPageId: _str
    name: _str
    accessToken: _str
    tokenExpiry: Optional[datetime.datetime]
    isActive: _bool
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    user: 'UserUpdateOneWithoutRelationsInput'
    posts: 'FacebookPostUpdateManyWithoutRelationsInput'
    leads: 'LeadUpdateManyWithoutRelationsInput'


class FacebookPageUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    facebookPageId: _str
    name: _str
    accessToken: _str
    tokenExpiry: Optional[datetime.datetime]
    isActive: _bool
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class FacebookPageUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['FacebookPageCreateWithoutRelationsInput']
    connect: List['FacebookPageWhereUniqueInput']
    connect_or_create: List['FacebookPageConnectOrCreateWithoutRelationsInput']
    set: List['FacebookPageWhereUniqueInput']
    disconnect: List['FacebookPageWhereUniqueInput']
    delete: List['FacebookPageWhereUniqueInput']

    # TODO
    # update: List['FacebookPageUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['FacebookPageUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['FacebookPageScalarWhereInput']
    # upsert: List['FacebookPageUpserteWithWhereUniqueWithoutRelationsInput']


class FacebookPageUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'FacebookPageCreateWithoutRelationsInput'
    connect: 'FacebookPageWhereUniqueInput'
    connect_or_create: 'FacebookPageConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'FacebookPageUpdateInput'
    # upsert: 'FacebookPageUpsertWithoutRelationsInput'


class FacebookPageUpsertInput(TypedDict):
    create: 'FacebookPageCreateInput'
    update: 'FacebookPageUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_FacebookPage_id_OrderByInput = TypedDict(
    '_FacebookPage_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_FacebookPage_facebookPageId_OrderByInput = TypedDict(
    '_FacebookPage_facebookPageId_OrderByInput',
    {
        'facebookPageId': 'SortOrder',
    },
    total=True
)

_FacebookPage_name_OrderByInput = TypedDict(
    '_FacebookPage_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_FacebookPage_accessToken_OrderByInput = TypedDict(
    '_FacebookPage_accessToken_OrderByInput',
    {
        'accessToken': 'SortOrder',
    },
    total=True
)

_FacebookPage_tokenExpiry_OrderByInput = TypedDict(
    '_FacebookPage_tokenExpiry_OrderByInput',
    {
        'tokenExpiry': 'SortOrder',
    },
    total=True
)

_FacebookPage_isActive_OrderByInput = TypedDict(
    '_FacebookPage_isActive_OrderByInput',
    {
        'isActive': 'SortOrder',
    },
    total=True
)

_FacebookPage_createdAt_OrderByInput = TypedDict(
    '_FacebookPage_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_FacebookPage_updatedAt_OrderByInput = TypedDict(
    '_FacebookPage_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_FacebookPage_userId_OrderByInput = TypedDict(
    '_FacebookPage_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_FacebookPage_RelevanceInner = TypedDict(
    '_FacebookPage_RelevanceInner',
    {
        'fields': 'List[FacebookPageScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_FacebookPage_RelevanceOrderByInput = TypedDict(
    '_FacebookPage_RelevanceOrderByInput',
    {
        '_relevance': '_FacebookPage_RelevanceInner',
    },
    total=True
)

FacebookPageOrderByInput = Union[
    '_FacebookPage_id_OrderByInput',
    '_FacebookPage_facebookPageId_OrderByInput',
    '_FacebookPage_name_OrderByInput',
    '_FacebookPage_accessToken_OrderByInput',
    '_FacebookPage_tokenExpiry_OrderByInput',
    '_FacebookPage_isActive_OrderByInput',
    '_FacebookPage_createdAt_OrderByInput',
    '_FacebookPage_updatedAt_OrderByInput',
    '_FacebookPage_userId_OrderByInput',
    '_FacebookPage_RelevanceOrderByInput',
]



# recursive FacebookPage types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

FacebookPageRelationFilter = TypedDict(
    'FacebookPageRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class FacebookPageListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class FacebookPageInclude(TypedDict, total=False):
    """FacebookPage relational arguments"""
    user: Union[bool, 'UserArgsFromFacebookPage']
    posts: Union[bool, 'FindManyFacebookPostArgsFromFacebookPage']
    leads: Union[bool, 'FindManyLeadArgsFromFacebookPage']


    

class UserIncludeFromFacebookPage(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromFacebookPageRecursive1']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromFacebookPageRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromFacebookPageRecursive1']
    campaigns: Union[bool, 'FindManyCampaignArgsFromFacebookPageRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromFacebookPageRecursive1']


class UserIncludeFromFacebookPageRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromFacebookPageRecursive2']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromFacebookPageRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromFacebookPageRecursive2']
    campaigns: Union[bool, 'FindManyCampaignArgsFromFacebookPageRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromFacebookPageRecursive2']


class UserIncludeFromFacebookPageRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromFacebookPageRecursive3']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromFacebookPageRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromFacebookPageRecursive3']
    campaigns: Union[bool, 'FindManyCampaignArgsFromFacebookPageRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromFacebookPageRecursive3']


class UserIncludeFromFacebookPageRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromFacebookPageRecursive4']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromFacebookPageRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromFacebookPageRecursive4']
    campaigns: Union[bool, 'FindManyCampaignArgsFromFacebookPageRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromFacebookPageRecursive4']


class UserIncludeFromFacebookPageRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPage"""

    

class UserArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    
    

class FindManyUserArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class FacebookPageIncludeFromFacebookPage(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive1']
    posts: Union[bool, 'FindManyFacebookPostArgsFromFacebookPageRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromFacebookPageRecursive1']


class FacebookPageIncludeFromFacebookPageRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive2']
    posts: Union[bool, 'FindManyFacebookPostArgsFromFacebookPageRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromFacebookPageRecursive2']


class FacebookPageIncludeFromFacebookPageRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive3']
    posts: Union[bool, 'FindManyFacebookPostArgsFromFacebookPageRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromFacebookPageRecursive3']


class FacebookPageIncludeFromFacebookPageRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive4']
    posts: Union[bool, 'FindManyFacebookPostArgsFromFacebookPageRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromFacebookPageRecursive4']


class FacebookPageIncludeFromFacebookPageRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPage"""

    

class FacebookPageArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FacebookPageArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FacebookPageArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FacebookPageArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FacebookPageArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    
    

class FindManyFacebookPageArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FindManyFacebookPageArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FindManyFacebookPageArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FindManyFacebookPageArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FindManyFacebookPageArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    
    

class FacebookPostIncludeFromFacebookPage(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    facebookPage: Union[bool, 'FacebookPageArgsFromFacebookPageRecursive1']


class FacebookPostIncludeFromFacebookPageRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    facebookPage: Union[bool, 'FacebookPageArgsFromFacebookPageRecursive2']


class FacebookPostIncludeFromFacebookPageRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    facebookPage: Union[bool, 'FacebookPageArgsFromFacebookPageRecursive3']


class FacebookPostIncludeFromFacebookPageRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    facebookPage: Union[bool, 'FacebookPageArgsFromFacebookPageRecursive4']


class FacebookPostIncludeFromFacebookPageRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPage"""

    

class FacebookPostArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FacebookPostArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FacebookPostArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FacebookPostArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FacebookPostArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    
    

class FindManyFacebookPostArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FindManyFacebookPostArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FindManyFacebookPostArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FindManyFacebookPostArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FindManyFacebookPostArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    
    

class WhatsappNumberIncludeFromFacebookPage(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive1']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromFacebookPageRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPageRecursive1']


class WhatsappNumberIncludeFromFacebookPageRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive2']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromFacebookPageRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPageRecursive2']


class WhatsappNumberIncludeFromFacebookPageRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive3']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromFacebookPageRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPageRecursive3']


class WhatsappNumberIncludeFromFacebookPageRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive4']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromFacebookPageRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPageRecursive4']


class WhatsappNumberIncludeFromFacebookPageRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPage"""

    

class WhatsappNumberArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class WhatsappNumberArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class WhatsappNumberArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class WhatsappNumberArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class WhatsappNumberArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    
    

class FindManyWhatsappNumberArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class FindManyWhatsappNumberArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class FindManyWhatsappNumberArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class FindManyWhatsappNumberArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class FindManyWhatsappNumberArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    
    

class WhatsappTemplateIncludeFromFacebookPage(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromFacebookPageRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPageRecursive1']


class WhatsappTemplateIncludeFromFacebookPageRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromFacebookPageRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPageRecursive2']


class WhatsappTemplateIncludeFromFacebookPageRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromFacebookPageRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPageRecursive3']


class WhatsappTemplateIncludeFromFacebookPageRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromFacebookPageRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPageRecursive4']


class WhatsappTemplateIncludeFromFacebookPageRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPage"""

    

class WhatsappTemplateArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class WhatsappTemplateArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class WhatsappTemplateArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class WhatsappTemplateArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class WhatsappTemplateArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    
    

class FindManyWhatsappTemplateArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class FindManyWhatsappTemplateArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class FindManyWhatsappTemplateArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class FindManyWhatsappTemplateArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class FindManyWhatsappTemplateArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    
    

class LeadIncludeFromFacebookPage(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive1']
    facebookPage: Union[bool, 'FacebookPageArgsFromFacebookPageRecursive1']
    tags: Union[bool, 'FindManyLeadTagArgsFromFacebookPageRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPageRecursive1']


class LeadIncludeFromFacebookPageRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive2']
    facebookPage: Union[bool, 'FacebookPageArgsFromFacebookPageRecursive2']
    tags: Union[bool, 'FindManyLeadTagArgsFromFacebookPageRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPageRecursive2']


class LeadIncludeFromFacebookPageRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive3']
    facebookPage: Union[bool, 'FacebookPageArgsFromFacebookPageRecursive3']
    tags: Union[bool, 'FindManyLeadTagArgsFromFacebookPageRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPageRecursive3']


class LeadIncludeFromFacebookPageRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive4']
    facebookPage: Union[bool, 'FacebookPageArgsFromFacebookPageRecursive4']
    tags: Union[bool, 'FindManyLeadTagArgsFromFacebookPageRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPageRecursive4']


class LeadIncludeFromFacebookPageRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPage"""

    

class LeadArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'LeadIncludeFromLeadRecursive1'


class LeadArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'LeadIncludeFromLeadRecursive2'


class LeadArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'LeadIncludeFromLeadRecursive3'


class LeadArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'LeadIncludeFromLeadRecursive4'


class LeadArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    
    

class FindManyLeadArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive1'


class FindManyLeadArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive2'


class FindManyLeadArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive3'


class FindManyLeadArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive4'


class FindManyLeadArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    
    

class TagIncludeFromFacebookPage(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    leads: Union[bool, 'FindManyLeadTagArgsFromFacebookPageRecursive1']


class TagIncludeFromFacebookPageRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    leads: Union[bool, 'FindManyLeadTagArgsFromFacebookPageRecursive2']


class TagIncludeFromFacebookPageRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    leads: Union[bool, 'FindManyLeadTagArgsFromFacebookPageRecursive3']


class TagIncludeFromFacebookPageRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    leads: Union[bool, 'FindManyLeadTagArgsFromFacebookPageRecursive4']


class TagIncludeFromFacebookPageRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPage"""

    

class TagArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'TagIncludeFromTagRecursive1'


class TagArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'TagIncludeFromTagRecursive2'


class TagArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'TagIncludeFromTagRecursive3'


class TagArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'TagIncludeFromTagRecursive4'


class TagArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    
    

class FindManyTagArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive1'


class FindManyTagArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive2'


class FindManyTagArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive3'


class FindManyTagArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive4'


class FindManyTagArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    
    

class LeadTagIncludeFromFacebookPage(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    lead: Union[bool, 'LeadArgsFromFacebookPageRecursive1']
    tag: Union[bool, 'TagArgsFromFacebookPageRecursive1']


class LeadTagIncludeFromFacebookPageRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    lead: Union[bool, 'LeadArgsFromFacebookPageRecursive2']
    tag: Union[bool, 'TagArgsFromFacebookPageRecursive2']


class LeadTagIncludeFromFacebookPageRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    lead: Union[bool, 'LeadArgsFromFacebookPageRecursive3']
    tag: Union[bool, 'TagArgsFromFacebookPageRecursive3']


class LeadTagIncludeFromFacebookPageRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    lead: Union[bool, 'LeadArgsFromFacebookPageRecursive4']
    tag: Union[bool, 'TagArgsFromFacebookPageRecursive4']


class LeadTagIncludeFromFacebookPageRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPage"""

    

class LeadTagArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class LeadTagArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class LeadTagArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class LeadTagArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class LeadTagArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    
    

class FindManyLeadTagArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class FindManyLeadTagArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class FindManyLeadTagArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class FindManyLeadTagArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class FindManyLeadTagArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    
    

class MessageIncludeFromFacebookPage(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    lead: Union[bool, 'LeadArgsFromFacebookPageRecursive1']
    campaign: Union[bool, 'CampaignArgsFromFacebookPageRecursive1']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromFacebookPageRecursive1']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromFacebookPageRecursive1']


class MessageIncludeFromFacebookPageRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    lead: Union[bool, 'LeadArgsFromFacebookPageRecursive2']
    campaign: Union[bool, 'CampaignArgsFromFacebookPageRecursive2']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromFacebookPageRecursive2']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromFacebookPageRecursive2']


class MessageIncludeFromFacebookPageRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    lead: Union[bool, 'LeadArgsFromFacebookPageRecursive3']
    campaign: Union[bool, 'CampaignArgsFromFacebookPageRecursive3']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromFacebookPageRecursive3']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromFacebookPageRecursive3']


class MessageIncludeFromFacebookPageRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    lead: Union[bool, 'LeadArgsFromFacebookPageRecursive4']
    campaign: Union[bool, 'CampaignArgsFromFacebookPageRecursive4']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromFacebookPageRecursive4']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromFacebookPageRecursive4']


class MessageIncludeFromFacebookPageRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPage"""

    

class MessageArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    
    

class FindManyMessageArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class CampaignIncludeFromFacebookPage(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPageRecursive1']


class CampaignIncludeFromFacebookPageRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPageRecursive2']


class CampaignIncludeFromFacebookPageRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPageRecursive3']


class CampaignIncludeFromFacebookPageRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPageRecursive4']


class CampaignIncludeFromFacebookPageRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPage"""

    

class CampaignArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'CampaignIncludeFromCampaignRecursive1'


class CampaignArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'CampaignIncludeFromCampaignRecursive2'


class CampaignArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'CampaignIncludeFromCampaignRecursive3'


class CampaignArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'CampaignIncludeFromCampaignRecursive4'


class CampaignArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    
    

class FindManyCampaignArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive1'


class FindManyCampaignArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive2'


class FindManyCampaignArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive3'


class FindManyCampaignArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive4'


class FindManyCampaignArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    
    

class AuditLogIncludeFromFacebookPage(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive1']


class AuditLogIncludeFromFacebookPageRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive2']


class AuditLogIncludeFromFacebookPageRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive3']


class AuditLogIncludeFromFacebookPageRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPage"""
    user: Union[bool, 'UserArgsFromFacebookPageRecursive4']


class AuditLogIncludeFromFacebookPageRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPage"""

    

class AuditLogArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    
    

class FindManyAuditLogArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    
    

class ApiKeyIncludeFromFacebookPage(TypedDict, total=False):
    """Relational arguments for FacebookPage"""


class ApiKeyIncludeFromFacebookPageRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPage"""


class ApiKeyIncludeFromFacebookPageRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPage"""


class ApiKeyIncludeFromFacebookPageRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPage"""


class ApiKeyIncludeFromFacebookPageRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPage"""

    

class ApiKeyArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class ApiKeyArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class ApiKeyArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class ApiKeyArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class ApiKeyArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    
    

class FindManyApiKeyArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class FindManyApiKeyArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class FindManyApiKeyArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class FindManyApiKeyArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class FindManyApiKeyArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    
    

class RateLimitIncludeFromFacebookPage(TypedDict, total=False):
    """Relational arguments for FacebookPage"""


class RateLimitIncludeFromFacebookPageRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPage"""


class RateLimitIncludeFromFacebookPageRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPage"""


class RateLimitIncludeFromFacebookPageRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPage"""


class RateLimitIncludeFromFacebookPageRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPage"""

    

class RateLimitArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class RateLimitArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class RateLimitArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class RateLimitArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class RateLimitArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    
    

class FindManyRateLimitArgsFromFacebookPage(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class FindManyRateLimitArgsFromFacebookPageRecursive1(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class FindManyRateLimitArgsFromFacebookPageRecursive2(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class FindManyRateLimitArgsFromFacebookPageRecursive3(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class FindManyRateLimitArgsFromFacebookPageRecursive4(TypedDict, total=False):
    """Arguments for FacebookPage"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    


FindManyFacebookPageArgs = FindManyFacebookPageArgsFromFacebookPage
FindFirstFacebookPageArgs = FindManyFacebookPageArgsFromFacebookPage


    

class FacebookPageWhereInput(TypedDict, total=False):
    """FacebookPage arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    facebookPageId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    accessToken: Union[_str, 'types.StringFilter']
    tokenExpiry: Union[None, datetime.datetime, 'types.DateTimeFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    posts: 'FacebookPostListRelationFilter'
    leads: 'LeadListRelationFilter'

    # should be noted that AND and NOT should be Union['FacebookPageWhereInputRecursive1', List['FacebookPageWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['FacebookPageWhereInputRecursive1']
    OR: List['FacebookPageWhereInputRecursive1']
    NOT: List['FacebookPageWhereInputRecursive1']


class FacebookPageWhereInputRecursive1(TypedDict, total=False):
    """FacebookPage arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    facebookPageId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    accessToken: Union[_str, 'types.StringFilter']
    tokenExpiry: Union[None, datetime.datetime, 'types.DateTimeFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    posts: 'FacebookPostListRelationFilter'
    leads: 'LeadListRelationFilter'

    # should be noted that AND and NOT should be Union['FacebookPageWhereInputRecursive2', List['FacebookPageWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['FacebookPageWhereInputRecursive2']
    OR: List['FacebookPageWhereInputRecursive2']
    NOT: List['FacebookPageWhereInputRecursive2']


class FacebookPageWhereInputRecursive2(TypedDict, total=False):
    """FacebookPage arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    facebookPageId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    accessToken: Union[_str, 'types.StringFilter']
    tokenExpiry: Union[None, datetime.datetime, 'types.DateTimeFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    posts: 'FacebookPostListRelationFilter'
    leads: 'LeadListRelationFilter'

    # should be noted that AND and NOT should be Union['FacebookPageWhereInputRecursive3', List['FacebookPageWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['FacebookPageWhereInputRecursive3']
    OR: List['FacebookPageWhereInputRecursive3']
    NOT: List['FacebookPageWhereInputRecursive3']


class FacebookPageWhereInputRecursive3(TypedDict, total=False):
    """FacebookPage arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    facebookPageId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    accessToken: Union[_str, 'types.StringFilter']
    tokenExpiry: Union[None, datetime.datetime, 'types.DateTimeFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    posts: 'FacebookPostListRelationFilter'
    leads: 'LeadListRelationFilter'

    # should be noted that AND and NOT should be Union['FacebookPageWhereInputRecursive4', List['FacebookPageWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['FacebookPageWhereInputRecursive4']
    OR: List['FacebookPageWhereInputRecursive4']
    NOT: List['FacebookPageWhereInputRecursive4']


class FacebookPageWhereInputRecursive4(TypedDict, total=False):
    """FacebookPage arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    facebookPageId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    accessToken: Union[_str, 'types.StringFilter']
    tokenExpiry: Union[None, datetime.datetime, 'types.DateTimeFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    posts: 'FacebookPostListRelationFilter'
    leads: 'LeadListRelationFilter'



# aggregate FacebookPage types


    

class FacebookPageScalarWhereWithAggregatesInput(TypedDict, total=False):
    """FacebookPage arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    facebookPageId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    accessToken: Union[_str, 'types.StringWithAggregatesFilter']
    tokenExpiry: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['FacebookPageScalarWhereWithAggregatesInputRecursive1']
    OR: List['FacebookPageScalarWhereWithAggregatesInputRecursive1']
    NOT: List['FacebookPageScalarWhereWithAggregatesInputRecursive1']


class FacebookPageScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """FacebookPage arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    facebookPageId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    accessToken: Union[_str, 'types.StringWithAggregatesFilter']
    tokenExpiry: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['FacebookPageScalarWhereWithAggregatesInputRecursive2']
    OR: List['FacebookPageScalarWhereWithAggregatesInputRecursive2']
    NOT: List['FacebookPageScalarWhereWithAggregatesInputRecursive2']


class FacebookPageScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """FacebookPage arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    facebookPageId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    accessToken: Union[_str, 'types.StringWithAggregatesFilter']
    tokenExpiry: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['FacebookPageScalarWhereWithAggregatesInputRecursive3']
    OR: List['FacebookPageScalarWhereWithAggregatesInputRecursive3']
    NOT: List['FacebookPageScalarWhereWithAggregatesInputRecursive3']


class FacebookPageScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """FacebookPage arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    facebookPageId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    accessToken: Union[_str, 'types.StringWithAggregatesFilter']
    tokenExpiry: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['FacebookPageScalarWhereWithAggregatesInputRecursive4']
    OR: List['FacebookPageScalarWhereWithAggregatesInputRecursive4']
    NOT: List['FacebookPageScalarWhereWithAggregatesInputRecursive4']


class FacebookPageScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """FacebookPage arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    facebookPageId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    accessToken: Union[_str, 'types.StringWithAggregatesFilter']
    tokenExpiry: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']



class FacebookPageGroupByOutput(TypedDict, total=False):
    id: _str
    facebookPageId: _str
    name: _str
    accessToken: _str
    tokenExpiry: datetime.datetime
    isActive: _bool
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    userId: _str
    _sum: 'FacebookPageSumAggregateOutput'
    _avg: 'FacebookPageAvgAggregateOutput'
    _min: 'FacebookPageMinAggregateOutput'
    _max: 'FacebookPageMaxAggregateOutput'
    _count: 'FacebookPageCountAggregateOutput'


class FacebookPageAvgAggregateOutput(TypedDict, total=False):
    """FacebookPage output for aggregating averages"""


class FacebookPageSumAggregateOutput(TypedDict, total=False):
    """FacebookPage output for aggregating sums"""


class FacebookPageScalarAggregateOutput(TypedDict, total=False):
    """FacebookPage output including scalar fields"""
    id: _str
    facebookPageId: _str
    name: _str
    accessToken: _str
    tokenExpiry: datetime.datetime
    isActive: _bool
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    userId: _str


FacebookPageMinAggregateOutput = FacebookPageScalarAggregateOutput
FacebookPageMaxAggregateOutput = FacebookPageScalarAggregateOutput


class FacebookPageMaxAggregateInput(TypedDict, total=False):
    """FacebookPage input for aggregating by max"""
    id: bool
    facebookPageId: bool
    name: bool
    accessToken: bool
    tokenExpiry: bool
    isActive: bool
    createdAt: bool
    updatedAt: bool
    userId: bool


class FacebookPageMinAggregateInput(TypedDict, total=False):
    """FacebookPage input for aggregating by min"""
    id: bool
    facebookPageId: bool
    name: bool
    accessToken: bool
    tokenExpiry: bool
    isActive: bool
    createdAt: bool
    updatedAt: bool
    userId: bool


class FacebookPageNumberAggregateInput(TypedDict, total=False):
    """FacebookPage input for aggregating numbers"""


FacebookPageAvgAggregateInput = FacebookPageNumberAggregateInput
FacebookPageSumAggregateInput = FacebookPageNumberAggregateInput


FacebookPageCountAggregateInput = TypedDict(
    'FacebookPageCountAggregateInput',
    {
        'id': bool,
        'facebookPageId': bool,
        'name': bool,
        'accessToken': bool,
        'tokenExpiry': bool,
        'isActive': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'userId': bool,
        '_all': bool,
    },
    total=False,
)

FacebookPageCountAggregateOutput = TypedDict(
    'FacebookPageCountAggregateOutput',
    {
        'id': int,
        'facebookPageId': int,
        'name': int,
        'accessToken': int,
        'tokenExpiry': int,
        'isActive': int,
        'createdAt': int,
        'updatedAt': int,
        'userId': int,
        '_all': int,
    },
    total=False,
)


FacebookPageKeys = Literal[
    'id',
    'facebookPageId',
    'name',
    'accessToken',
    'tokenExpiry',
    'isActive',
    'createdAt',
    'updatedAt',
    'userId',
    'user',
    'posts',
    'leads',
]
FacebookPageScalarFieldKeys = Literal[
    'id',
    'facebookPageId',
    'name',
    'accessToken',
    'tokenExpiry',
    'isActive',
    'createdAt',
    'updatedAt',
    'userId',
]
FacebookPageScalarFieldKeysT = TypeVar('FacebookPageScalarFieldKeysT', bound=FacebookPageScalarFieldKeys)

FacebookPageRelationalFieldKeys = Literal[
        'user',
        'posts',
        'leads',
    ]

# FacebookPost types

class FacebookPostOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the FacebookPost create method"""
    id: _str
    message: Optional[_str]
    story: Optional[_str]
    likesCount: _int
    commentsCount: _int
    sharesCount: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    facebookPageId: _str
    facebookPage: 'FacebookPageCreateNestedWithoutRelationsInput'


class FacebookPostCreateInput(FacebookPostOptionalCreateInput):
    """Required arguments to the FacebookPost create method"""
    facebookPostId: _str
    createdTime: datetime.datetime


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class FacebookPostOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the FacebookPost create method, without relations"""
    id: _str
    message: Optional[_str]
    story: Optional[_str]
    likesCount: _int
    commentsCount: _int
    sharesCount: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    facebookPageId: _str


class FacebookPostCreateWithoutRelationsInput(FacebookPostOptionalCreateWithoutRelationsInput):
    """Required arguments to the FacebookPost create method, without relations"""
    facebookPostId: _str
    createdTime: datetime.datetime

class FacebookPostConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'FacebookPostCreateWithoutRelationsInput'
    where: 'FacebookPostWhereUniqueInput'

class FacebookPostCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'FacebookPostCreateWithoutRelationsInput'
    connect: 'FacebookPostWhereUniqueInput'
    connect_or_create: 'FacebookPostConnectOrCreateWithoutRelationsInput'


class FacebookPostCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['FacebookPostCreateWithoutRelationsInput', List['FacebookPostCreateWithoutRelationsInput']]
    connect: Union['FacebookPostWhereUniqueInput', List['FacebookPostWhereUniqueInput']]
    connect_or_create: Union['FacebookPostConnectOrCreateWithoutRelationsInput', List['FacebookPostConnectOrCreateWithoutRelationsInput']]

_FacebookPostWhereUnique_id_Input = TypedDict(
    '_FacebookPostWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

_FacebookPostWhereUnique_facebookPostId_Input = TypedDict(
    '_FacebookPostWhereUnique_facebookPostId_Input',
    {
        'facebookPostId': '_str',
    },
    total=True
)

FacebookPostWhereUniqueInput = Union[
    '_FacebookPostWhereUnique_id_Input',
    '_FacebookPostWhereUnique_facebookPostId_Input',
]


class FacebookPostUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    facebookPostId: _str
    message: Optional[_str]
    story: Optional[_str]
    createdTime: datetime.datetime
    likesCount: Union[AtomicIntInput, _int]
    commentsCount: Union[AtomicIntInput, _int]
    sharesCount: Union[AtomicIntInput, _int]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    facebookPage: 'FacebookPageUpdateOneWithoutRelationsInput'


class FacebookPostUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    facebookPostId: _str
    message: Optional[_str]
    story: Optional[_str]
    createdTime: datetime.datetime
    likesCount: Union[AtomicIntInput, _int]
    commentsCount: Union[AtomicIntInput, _int]
    sharesCount: Union[AtomicIntInput, _int]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class FacebookPostUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['FacebookPostCreateWithoutRelationsInput']
    connect: List['FacebookPostWhereUniqueInput']
    connect_or_create: List['FacebookPostConnectOrCreateWithoutRelationsInput']
    set: List['FacebookPostWhereUniqueInput']
    disconnect: List['FacebookPostWhereUniqueInput']
    delete: List['FacebookPostWhereUniqueInput']

    # TODO
    # update: List['FacebookPostUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['FacebookPostUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['FacebookPostScalarWhereInput']
    # upsert: List['FacebookPostUpserteWithWhereUniqueWithoutRelationsInput']


class FacebookPostUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'FacebookPostCreateWithoutRelationsInput'
    connect: 'FacebookPostWhereUniqueInput'
    connect_or_create: 'FacebookPostConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'FacebookPostUpdateInput'
    # upsert: 'FacebookPostUpsertWithoutRelationsInput'


class FacebookPostUpsertInput(TypedDict):
    create: 'FacebookPostCreateInput'
    update: 'FacebookPostUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_FacebookPost_id_OrderByInput = TypedDict(
    '_FacebookPost_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_FacebookPost_facebookPostId_OrderByInput = TypedDict(
    '_FacebookPost_facebookPostId_OrderByInput',
    {
        'facebookPostId': 'SortOrder',
    },
    total=True
)

_FacebookPost_message_OrderByInput = TypedDict(
    '_FacebookPost_message_OrderByInput',
    {
        'message': 'SortOrder',
    },
    total=True
)

_FacebookPost_story_OrderByInput = TypedDict(
    '_FacebookPost_story_OrderByInput',
    {
        'story': 'SortOrder',
    },
    total=True
)

_FacebookPost_createdTime_OrderByInput = TypedDict(
    '_FacebookPost_createdTime_OrderByInput',
    {
        'createdTime': 'SortOrder',
    },
    total=True
)

_FacebookPost_likesCount_OrderByInput = TypedDict(
    '_FacebookPost_likesCount_OrderByInput',
    {
        'likesCount': 'SortOrder',
    },
    total=True
)

_FacebookPost_commentsCount_OrderByInput = TypedDict(
    '_FacebookPost_commentsCount_OrderByInput',
    {
        'commentsCount': 'SortOrder',
    },
    total=True
)

_FacebookPost_sharesCount_OrderByInput = TypedDict(
    '_FacebookPost_sharesCount_OrderByInput',
    {
        'sharesCount': 'SortOrder',
    },
    total=True
)

_FacebookPost_createdAt_OrderByInput = TypedDict(
    '_FacebookPost_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_FacebookPost_updatedAt_OrderByInput = TypedDict(
    '_FacebookPost_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_FacebookPost_facebookPageId_OrderByInput = TypedDict(
    '_FacebookPost_facebookPageId_OrderByInput',
    {
        'facebookPageId': 'SortOrder',
    },
    total=True
)

_FacebookPost_RelevanceInner = TypedDict(
    '_FacebookPost_RelevanceInner',
    {
        'fields': 'List[FacebookPostScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_FacebookPost_RelevanceOrderByInput = TypedDict(
    '_FacebookPost_RelevanceOrderByInput',
    {
        '_relevance': '_FacebookPost_RelevanceInner',
    },
    total=True
)

FacebookPostOrderByInput = Union[
    '_FacebookPost_id_OrderByInput',
    '_FacebookPost_facebookPostId_OrderByInput',
    '_FacebookPost_message_OrderByInput',
    '_FacebookPost_story_OrderByInput',
    '_FacebookPost_createdTime_OrderByInput',
    '_FacebookPost_likesCount_OrderByInput',
    '_FacebookPost_commentsCount_OrderByInput',
    '_FacebookPost_sharesCount_OrderByInput',
    '_FacebookPost_createdAt_OrderByInput',
    '_FacebookPost_updatedAt_OrderByInput',
    '_FacebookPost_facebookPageId_OrderByInput',
    '_FacebookPost_RelevanceOrderByInput',
]



# recursive FacebookPost types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

FacebookPostRelationFilter = TypedDict(
    'FacebookPostRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class FacebookPostListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class FacebookPostInclude(TypedDict, total=False):
    """FacebookPost relational arguments"""
    facebookPage: Union[bool, 'FacebookPageArgsFromFacebookPost']


    

class UserIncludeFromFacebookPost(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromFacebookPostRecursive1']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromFacebookPostRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromFacebookPostRecursive1']
    campaigns: Union[bool, 'FindManyCampaignArgsFromFacebookPostRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromFacebookPostRecursive1']


class UserIncludeFromFacebookPostRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromFacebookPostRecursive2']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromFacebookPostRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromFacebookPostRecursive2']
    campaigns: Union[bool, 'FindManyCampaignArgsFromFacebookPostRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromFacebookPostRecursive2']


class UserIncludeFromFacebookPostRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromFacebookPostRecursive3']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromFacebookPostRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromFacebookPostRecursive3']
    campaigns: Union[bool, 'FindManyCampaignArgsFromFacebookPostRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromFacebookPostRecursive3']


class UserIncludeFromFacebookPostRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromFacebookPostRecursive4']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromFacebookPostRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromFacebookPostRecursive4']
    campaigns: Union[bool, 'FindManyCampaignArgsFromFacebookPostRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromFacebookPostRecursive4']


class UserIncludeFromFacebookPostRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPost"""

    

class UserArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    
    

class FindManyUserArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class FacebookPageIncludeFromFacebookPost(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive1']
    posts: Union[bool, 'FindManyFacebookPostArgsFromFacebookPostRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromFacebookPostRecursive1']


class FacebookPageIncludeFromFacebookPostRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive2']
    posts: Union[bool, 'FindManyFacebookPostArgsFromFacebookPostRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromFacebookPostRecursive2']


class FacebookPageIncludeFromFacebookPostRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive3']
    posts: Union[bool, 'FindManyFacebookPostArgsFromFacebookPostRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromFacebookPostRecursive3']


class FacebookPageIncludeFromFacebookPostRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive4']
    posts: Union[bool, 'FindManyFacebookPostArgsFromFacebookPostRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromFacebookPostRecursive4']


class FacebookPageIncludeFromFacebookPostRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPost"""

    

class FacebookPageArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FacebookPageArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FacebookPageArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FacebookPageArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FacebookPageArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    
    

class FindManyFacebookPageArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FindManyFacebookPageArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FindManyFacebookPageArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FindManyFacebookPageArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FindManyFacebookPageArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    
    

class FacebookPostIncludeFromFacebookPost(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    facebookPage: Union[bool, 'FacebookPageArgsFromFacebookPostRecursive1']


class FacebookPostIncludeFromFacebookPostRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    facebookPage: Union[bool, 'FacebookPageArgsFromFacebookPostRecursive2']


class FacebookPostIncludeFromFacebookPostRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    facebookPage: Union[bool, 'FacebookPageArgsFromFacebookPostRecursive3']


class FacebookPostIncludeFromFacebookPostRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    facebookPage: Union[bool, 'FacebookPageArgsFromFacebookPostRecursive4']


class FacebookPostIncludeFromFacebookPostRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPost"""

    

class FacebookPostArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FacebookPostArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FacebookPostArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FacebookPostArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FacebookPostArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    
    

class FindManyFacebookPostArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FindManyFacebookPostArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FindManyFacebookPostArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FindManyFacebookPostArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FindManyFacebookPostArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    
    

class WhatsappNumberIncludeFromFacebookPost(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive1']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromFacebookPostRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPostRecursive1']


class WhatsappNumberIncludeFromFacebookPostRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive2']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromFacebookPostRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPostRecursive2']


class WhatsappNumberIncludeFromFacebookPostRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive3']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromFacebookPostRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPostRecursive3']


class WhatsappNumberIncludeFromFacebookPostRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive4']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromFacebookPostRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPostRecursive4']


class WhatsappNumberIncludeFromFacebookPostRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPost"""

    

class WhatsappNumberArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class WhatsappNumberArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class WhatsappNumberArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class WhatsappNumberArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class WhatsappNumberArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    
    

class FindManyWhatsappNumberArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class FindManyWhatsappNumberArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class FindManyWhatsappNumberArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class FindManyWhatsappNumberArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class FindManyWhatsappNumberArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    
    

class WhatsappTemplateIncludeFromFacebookPost(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromFacebookPostRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPostRecursive1']


class WhatsappTemplateIncludeFromFacebookPostRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromFacebookPostRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPostRecursive2']


class WhatsappTemplateIncludeFromFacebookPostRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromFacebookPostRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPostRecursive3']


class WhatsappTemplateIncludeFromFacebookPostRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromFacebookPostRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPostRecursive4']


class WhatsappTemplateIncludeFromFacebookPostRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPost"""

    

class WhatsappTemplateArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class WhatsappTemplateArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class WhatsappTemplateArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class WhatsappTemplateArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class WhatsappTemplateArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    
    

class FindManyWhatsappTemplateArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class FindManyWhatsappTemplateArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class FindManyWhatsappTemplateArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class FindManyWhatsappTemplateArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class FindManyWhatsappTemplateArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    
    

class LeadIncludeFromFacebookPost(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive1']
    facebookPage: Union[bool, 'FacebookPageArgsFromFacebookPostRecursive1']
    tags: Union[bool, 'FindManyLeadTagArgsFromFacebookPostRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPostRecursive1']


class LeadIncludeFromFacebookPostRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive2']
    facebookPage: Union[bool, 'FacebookPageArgsFromFacebookPostRecursive2']
    tags: Union[bool, 'FindManyLeadTagArgsFromFacebookPostRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPostRecursive2']


class LeadIncludeFromFacebookPostRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive3']
    facebookPage: Union[bool, 'FacebookPageArgsFromFacebookPostRecursive3']
    tags: Union[bool, 'FindManyLeadTagArgsFromFacebookPostRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPostRecursive3']


class LeadIncludeFromFacebookPostRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive4']
    facebookPage: Union[bool, 'FacebookPageArgsFromFacebookPostRecursive4']
    tags: Union[bool, 'FindManyLeadTagArgsFromFacebookPostRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPostRecursive4']


class LeadIncludeFromFacebookPostRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPost"""

    

class LeadArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'LeadIncludeFromLeadRecursive1'


class LeadArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'LeadIncludeFromLeadRecursive2'


class LeadArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'LeadIncludeFromLeadRecursive3'


class LeadArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'LeadIncludeFromLeadRecursive4'


class LeadArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    
    

class FindManyLeadArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive1'


class FindManyLeadArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive2'


class FindManyLeadArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive3'


class FindManyLeadArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive4'


class FindManyLeadArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    
    

class TagIncludeFromFacebookPost(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    leads: Union[bool, 'FindManyLeadTagArgsFromFacebookPostRecursive1']


class TagIncludeFromFacebookPostRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    leads: Union[bool, 'FindManyLeadTagArgsFromFacebookPostRecursive2']


class TagIncludeFromFacebookPostRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    leads: Union[bool, 'FindManyLeadTagArgsFromFacebookPostRecursive3']


class TagIncludeFromFacebookPostRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    leads: Union[bool, 'FindManyLeadTagArgsFromFacebookPostRecursive4']


class TagIncludeFromFacebookPostRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPost"""

    

class TagArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'TagIncludeFromTagRecursive1'


class TagArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'TagIncludeFromTagRecursive2'


class TagArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'TagIncludeFromTagRecursive3'


class TagArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'TagIncludeFromTagRecursive4'


class TagArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    
    

class FindManyTagArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive1'


class FindManyTagArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive2'


class FindManyTagArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive3'


class FindManyTagArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive4'


class FindManyTagArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    
    

class LeadTagIncludeFromFacebookPost(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    lead: Union[bool, 'LeadArgsFromFacebookPostRecursive1']
    tag: Union[bool, 'TagArgsFromFacebookPostRecursive1']


class LeadTagIncludeFromFacebookPostRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    lead: Union[bool, 'LeadArgsFromFacebookPostRecursive2']
    tag: Union[bool, 'TagArgsFromFacebookPostRecursive2']


class LeadTagIncludeFromFacebookPostRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    lead: Union[bool, 'LeadArgsFromFacebookPostRecursive3']
    tag: Union[bool, 'TagArgsFromFacebookPostRecursive3']


class LeadTagIncludeFromFacebookPostRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    lead: Union[bool, 'LeadArgsFromFacebookPostRecursive4']
    tag: Union[bool, 'TagArgsFromFacebookPostRecursive4']


class LeadTagIncludeFromFacebookPostRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPost"""

    

class LeadTagArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class LeadTagArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class LeadTagArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class LeadTagArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class LeadTagArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    
    

class FindManyLeadTagArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class FindManyLeadTagArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class FindManyLeadTagArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class FindManyLeadTagArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class FindManyLeadTagArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    
    

class MessageIncludeFromFacebookPost(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    lead: Union[bool, 'LeadArgsFromFacebookPostRecursive1']
    campaign: Union[bool, 'CampaignArgsFromFacebookPostRecursive1']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromFacebookPostRecursive1']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromFacebookPostRecursive1']


class MessageIncludeFromFacebookPostRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    lead: Union[bool, 'LeadArgsFromFacebookPostRecursive2']
    campaign: Union[bool, 'CampaignArgsFromFacebookPostRecursive2']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromFacebookPostRecursive2']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromFacebookPostRecursive2']


class MessageIncludeFromFacebookPostRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    lead: Union[bool, 'LeadArgsFromFacebookPostRecursive3']
    campaign: Union[bool, 'CampaignArgsFromFacebookPostRecursive3']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromFacebookPostRecursive3']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromFacebookPostRecursive3']


class MessageIncludeFromFacebookPostRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    lead: Union[bool, 'LeadArgsFromFacebookPostRecursive4']
    campaign: Union[bool, 'CampaignArgsFromFacebookPostRecursive4']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromFacebookPostRecursive4']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromFacebookPostRecursive4']


class MessageIncludeFromFacebookPostRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPost"""

    

class MessageArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    
    

class FindManyMessageArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class CampaignIncludeFromFacebookPost(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPostRecursive1']


class CampaignIncludeFromFacebookPostRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPostRecursive2']


class CampaignIncludeFromFacebookPostRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPostRecursive3']


class CampaignIncludeFromFacebookPostRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromFacebookPostRecursive4']


class CampaignIncludeFromFacebookPostRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPost"""

    

class CampaignArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'CampaignIncludeFromCampaignRecursive1'


class CampaignArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'CampaignIncludeFromCampaignRecursive2'


class CampaignArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'CampaignIncludeFromCampaignRecursive3'


class CampaignArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'CampaignIncludeFromCampaignRecursive4'


class CampaignArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    
    

class FindManyCampaignArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive1'


class FindManyCampaignArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive2'


class FindManyCampaignArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive3'


class FindManyCampaignArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive4'


class FindManyCampaignArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    
    

class AuditLogIncludeFromFacebookPost(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive1']


class AuditLogIncludeFromFacebookPostRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive2']


class AuditLogIncludeFromFacebookPostRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive3']


class AuditLogIncludeFromFacebookPostRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPost"""
    user: Union[bool, 'UserArgsFromFacebookPostRecursive4']


class AuditLogIncludeFromFacebookPostRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPost"""

    

class AuditLogArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    
    

class FindManyAuditLogArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    
    

class ApiKeyIncludeFromFacebookPost(TypedDict, total=False):
    """Relational arguments for FacebookPost"""


class ApiKeyIncludeFromFacebookPostRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPost"""


class ApiKeyIncludeFromFacebookPostRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPost"""


class ApiKeyIncludeFromFacebookPostRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPost"""


class ApiKeyIncludeFromFacebookPostRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPost"""

    

class ApiKeyArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class ApiKeyArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class ApiKeyArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class ApiKeyArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class ApiKeyArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    
    

class FindManyApiKeyArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class FindManyApiKeyArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class FindManyApiKeyArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class FindManyApiKeyArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class FindManyApiKeyArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    
    

class RateLimitIncludeFromFacebookPost(TypedDict, total=False):
    """Relational arguments for FacebookPost"""


class RateLimitIncludeFromFacebookPostRecursive1(TypedDict, total=False):
    """Relational arguments for FacebookPost"""


class RateLimitIncludeFromFacebookPostRecursive2(TypedDict, total=False):
    """Relational arguments for FacebookPost"""


class RateLimitIncludeFromFacebookPostRecursive3(TypedDict, total=False):
    """Relational arguments for FacebookPost"""


class RateLimitIncludeFromFacebookPostRecursive4(TypedDict, total=False):
    """Relational arguments for FacebookPost"""

    

class RateLimitArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class RateLimitArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class RateLimitArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class RateLimitArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class RateLimitArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    
    

class FindManyRateLimitArgsFromFacebookPost(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class FindManyRateLimitArgsFromFacebookPostRecursive1(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class FindManyRateLimitArgsFromFacebookPostRecursive2(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class FindManyRateLimitArgsFromFacebookPostRecursive3(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class FindManyRateLimitArgsFromFacebookPostRecursive4(TypedDict, total=False):
    """Arguments for FacebookPost"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    


FindManyFacebookPostArgs = FindManyFacebookPostArgsFromFacebookPost
FindFirstFacebookPostArgs = FindManyFacebookPostArgsFromFacebookPost


    

class FacebookPostWhereInput(TypedDict, total=False):
    """FacebookPost arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    facebookPostId: Union[_str, 'types.StringFilter']
    message: Union[None, _str, 'types.StringFilter']
    story: Union[None, _str, 'types.StringFilter']
    createdTime: Union[datetime.datetime, 'types.DateTimeFilter']
    likesCount: Union[_int, 'types.IntFilter']
    commentsCount: Union[_int, 'types.IntFilter']
    sharesCount: Union[_int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    facebookPageId: Union[_str, 'types.StringFilter']
    facebookPage: 'FacebookPageRelationFilter'

    # should be noted that AND and NOT should be Union['FacebookPostWhereInputRecursive1', List['FacebookPostWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['FacebookPostWhereInputRecursive1']
    OR: List['FacebookPostWhereInputRecursive1']
    NOT: List['FacebookPostWhereInputRecursive1']


class FacebookPostWhereInputRecursive1(TypedDict, total=False):
    """FacebookPost arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    facebookPostId: Union[_str, 'types.StringFilter']
    message: Union[None, _str, 'types.StringFilter']
    story: Union[None, _str, 'types.StringFilter']
    createdTime: Union[datetime.datetime, 'types.DateTimeFilter']
    likesCount: Union[_int, 'types.IntFilter']
    commentsCount: Union[_int, 'types.IntFilter']
    sharesCount: Union[_int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    facebookPageId: Union[_str, 'types.StringFilter']
    facebookPage: 'FacebookPageRelationFilter'

    # should be noted that AND and NOT should be Union['FacebookPostWhereInputRecursive2', List['FacebookPostWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['FacebookPostWhereInputRecursive2']
    OR: List['FacebookPostWhereInputRecursive2']
    NOT: List['FacebookPostWhereInputRecursive2']


class FacebookPostWhereInputRecursive2(TypedDict, total=False):
    """FacebookPost arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    facebookPostId: Union[_str, 'types.StringFilter']
    message: Union[None, _str, 'types.StringFilter']
    story: Union[None, _str, 'types.StringFilter']
    createdTime: Union[datetime.datetime, 'types.DateTimeFilter']
    likesCount: Union[_int, 'types.IntFilter']
    commentsCount: Union[_int, 'types.IntFilter']
    sharesCount: Union[_int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    facebookPageId: Union[_str, 'types.StringFilter']
    facebookPage: 'FacebookPageRelationFilter'

    # should be noted that AND and NOT should be Union['FacebookPostWhereInputRecursive3', List['FacebookPostWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['FacebookPostWhereInputRecursive3']
    OR: List['FacebookPostWhereInputRecursive3']
    NOT: List['FacebookPostWhereInputRecursive3']


class FacebookPostWhereInputRecursive3(TypedDict, total=False):
    """FacebookPost arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    facebookPostId: Union[_str, 'types.StringFilter']
    message: Union[None, _str, 'types.StringFilter']
    story: Union[None, _str, 'types.StringFilter']
    createdTime: Union[datetime.datetime, 'types.DateTimeFilter']
    likesCount: Union[_int, 'types.IntFilter']
    commentsCount: Union[_int, 'types.IntFilter']
    sharesCount: Union[_int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    facebookPageId: Union[_str, 'types.StringFilter']
    facebookPage: 'FacebookPageRelationFilter'

    # should be noted that AND and NOT should be Union['FacebookPostWhereInputRecursive4', List['FacebookPostWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['FacebookPostWhereInputRecursive4']
    OR: List['FacebookPostWhereInputRecursive4']
    NOT: List['FacebookPostWhereInputRecursive4']


class FacebookPostWhereInputRecursive4(TypedDict, total=False):
    """FacebookPost arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    facebookPostId: Union[_str, 'types.StringFilter']
    message: Union[None, _str, 'types.StringFilter']
    story: Union[None, _str, 'types.StringFilter']
    createdTime: Union[datetime.datetime, 'types.DateTimeFilter']
    likesCount: Union[_int, 'types.IntFilter']
    commentsCount: Union[_int, 'types.IntFilter']
    sharesCount: Union[_int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    facebookPageId: Union[_str, 'types.StringFilter']
    facebookPage: 'FacebookPageRelationFilter'



# aggregate FacebookPost types


    

class FacebookPostScalarWhereWithAggregatesInput(TypedDict, total=False):
    """FacebookPost arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    facebookPostId: Union[_str, 'types.StringWithAggregatesFilter']
    message: Union[_str, 'types.StringWithAggregatesFilter']
    story: Union[_str, 'types.StringWithAggregatesFilter']
    createdTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    likesCount: Union[_int, 'types.IntWithAggregatesFilter']
    commentsCount: Union[_int, 'types.IntWithAggregatesFilter']
    sharesCount: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    facebookPageId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['FacebookPostScalarWhereWithAggregatesInputRecursive1']
    OR: List['FacebookPostScalarWhereWithAggregatesInputRecursive1']
    NOT: List['FacebookPostScalarWhereWithAggregatesInputRecursive1']


class FacebookPostScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """FacebookPost arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    facebookPostId: Union[_str, 'types.StringWithAggregatesFilter']
    message: Union[_str, 'types.StringWithAggregatesFilter']
    story: Union[_str, 'types.StringWithAggregatesFilter']
    createdTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    likesCount: Union[_int, 'types.IntWithAggregatesFilter']
    commentsCount: Union[_int, 'types.IntWithAggregatesFilter']
    sharesCount: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    facebookPageId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['FacebookPostScalarWhereWithAggregatesInputRecursive2']
    OR: List['FacebookPostScalarWhereWithAggregatesInputRecursive2']
    NOT: List['FacebookPostScalarWhereWithAggregatesInputRecursive2']


class FacebookPostScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """FacebookPost arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    facebookPostId: Union[_str, 'types.StringWithAggregatesFilter']
    message: Union[_str, 'types.StringWithAggregatesFilter']
    story: Union[_str, 'types.StringWithAggregatesFilter']
    createdTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    likesCount: Union[_int, 'types.IntWithAggregatesFilter']
    commentsCount: Union[_int, 'types.IntWithAggregatesFilter']
    sharesCount: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    facebookPageId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['FacebookPostScalarWhereWithAggregatesInputRecursive3']
    OR: List['FacebookPostScalarWhereWithAggregatesInputRecursive3']
    NOT: List['FacebookPostScalarWhereWithAggregatesInputRecursive3']


class FacebookPostScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """FacebookPost arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    facebookPostId: Union[_str, 'types.StringWithAggregatesFilter']
    message: Union[_str, 'types.StringWithAggregatesFilter']
    story: Union[_str, 'types.StringWithAggregatesFilter']
    createdTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    likesCount: Union[_int, 'types.IntWithAggregatesFilter']
    commentsCount: Union[_int, 'types.IntWithAggregatesFilter']
    sharesCount: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    facebookPageId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['FacebookPostScalarWhereWithAggregatesInputRecursive4']
    OR: List['FacebookPostScalarWhereWithAggregatesInputRecursive4']
    NOT: List['FacebookPostScalarWhereWithAggregatesInputRecursive4']


class FacebookPostScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """FacebookPost arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    facebookPostId: Union[_str, 'types.StringWithAggregatesFilter']
    message: Union[_str, 'types.StringWithAggregatesFilter']
    story: Union[_str, 'types.StringWithAggregatesFilter']
    createdTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    likesCount: Union[_int, 'types.IntWithAggregatesFilter']
    commentsCount: Union[_int, 'types.IntWithAggregatesFilter']
    sharesCount: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    facebookPageId: Union[_str, 'types.StringWithAggregatesFilter']



class FacebookPostGroupByOutput(TypedDict, total=False):
    id: _str
    facebookPostId: _str
    message: _str
    story: _str
    createdTime: datetime.datetime
    likesCount: _int
    commentsCount: _int
    sharesCount: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    facebookPageId: _str
    _sum: 'FacebookPostSumAggregateOutput'
    _avg: 'FacebookPostAvgAggregateOutput'
    _min: 'FacebookPostMinAggregateOutput'
    _max: 'FacebookPostMaxAggregateOutput'
    _count: 'FacebookPostCountAggregateOutput'


class FacebookPostAvgAggregateOutput(TypedDict, total=False):
    """FacebookPost output for aggregating averages"""
    likesCount: float
    commentsCount: float
    sharesCount: float


class FacebookPostSumAggregateOutput(TypedDict, total=False):
    """FacebookPost output for aggregating sums"""
    likesCount: _int
    commentsCount: _int
    sharesCount: _int


class FacebookPostScalarAggregateOutput(TypedDict, total=False):
    """FacebookPost output including scalar fields"""
    id: _str
    facebookPostId: _str
    message: _str
    story: _str
    createdTime: datetime.datetime
    likesCount: _int
    commentsCount: _int
    sharesCount: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    facebookPageId: _str


FacebookPostMinAggregateOutput = FacebookPostScalarAggregateOutput
FacebookPostMaxAggregateOutput = FacebookPostScalarAggregateOutput


class FacebookPostMaxAggregateInput(TypedDict, total=False):
    """FacebookPost input for aggregating by max"""
    id: bool
    facebookPostId: bool
    message: bool
    story: bool
    createdTime: bool
    likesCount: bool
    commentsCount: bool
    sharesCount: bool
    createdAt: bool
    updatedAt: bool
    facebookPageId: bool


class FacebookPostMinAggregateInput(TypedDict, total=False):
    """FacebookPost input for aggregating by min"""
    id: bool
    facebookPostId: bool
    message: bool
    story: bool
    createdTime: bool
    likesCount: bool
    commentsCount: bool
    sharesCount: bool
    createdAt: bool
    updatedAt: bool
    facebookPageId: bool


class FacebookPostNumberAggregateInput(TypedDict, total=False):
    """FacebookPost input for aggregating numbers"""
    likesCount: bool
    commentsCount: bool
    sharesCount: bool


FacebookPostAvgAggregateInput = FacebookPostNumberAggregateInput
FacebookPostSumAggregateInput = FacebookPostNumberAggregateInput


FacebookPostCountAggregateInput = TypedDict(
    'FacebookPostCountAggregateInput',
    {
        'id': bool,
        'facebookPostId': bool,
        'message': bool,
        'story': bool,
        'createdTime': bool,
        'likesCount': bool,
        'commentsCount': bool,
        'sharesCount': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'facebookPageId': bool,
        '_all': bool,
    },
    total=False,
)

FacebookPostCountAggregateOutput = TypedDict(
    'FacebookPostCountAggregateOutput',
    {
        'id': int,
        'facebookPostId': int,
        'message': int,
        'story': int,
        'createdTime': int,
        'likesCount': int,
        'commentsCount': int,
        'sharesCount': int,
        'createdAt': int,
        'updatedAt': int,
        'facebookPageId': int,
        '_all': int,
    },
    total=False,
)


FacebookPostKeys = Literal[
    'id',
    'facebookPostId',
    'message',
    'story',
    'createdTime',
    'likesCount',
    'commentsCount',
    'sharesCount',
    'createdAt',
    'updatedAt',
    'facebookPageId',
    'facebookPage',
]
FacebookPostScalarFieldKeys = Literal[
    'id',
    'facebookPostId',
    'message',
    'story',
    'createdTime',
    'likesCount',
    'commentsCount',
    'sharesCount',
    'createdAt',
    'updatedAt',
    'facebookPageId',
]
FacebookPostScalarFieldKeysT = TypeVar('FacebookPostScalarFieldKeysT', bound=FacebookPostScalarFieldKeys)

FacebookPostRelationalFieldKeys = Literal[
        'facebookPage',
    ]

# WhatsappNumber types

class WhatsappNumberOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the WhatsappNumber create method"""
    id: _str
    displayName: Optional[_str]
    isActive: _bool
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    userId: _str
    user: 'UserCreateNestedWithoutRelationsInput'
    templates: 'WhatsappTemplateCreateManyNestedWithoutRelationsInput'
    messages: 'MessageCreateManyNestedWithoutRelationsInput'


class WhatsappNumberCreateInput(WhatsappNumberOptionalCreateInput):
    """Required arguments to the WhatsappNumber create method"""
    phoneNumber: _str
    businessAccountId: _str
    accessToken: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class WhatsappNumberOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the WhatsappNumber create method, without relations"""
    id: _str
    displayName: Optional[_str]
    isActive: _bool
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    userId: _str


class WhatsappNumberCreateWithoutRelationsInput(WhatsappNumberOptionalCreateWithoutRelationsInput):
    """Required arguments to the WhatsappNumber create method, without relations"""
    phoneNumber: _str
    businessAccountId: _str
    accessToken: _str

class WhatsappNumberConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'WhatsappNumberCreateWithoutRelationsInput'
    where: 'WhatsappNumberWhereUniqueInput'

class WhatsappNumberCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'WhatsappNumberCreateWithoutRelationsInput'
    connect: 'WhatsappNumberWhereUniqueInput'
    connect_or_create: 'WhatsappNumberConnectOrCreateWithoutRelationsInput'


class WhatsappNumberCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['WhatsappNumberCreateWithoutRelationsInput', List['WhatsappNumberCreateWithoutRelationsInput']]
    connect: Union['WhatsappNumberWhereUniqueInput', List['WhatsappNumberWhereUniqueInput']]
    connect_or_create: Union['WhatsappNumberConnectOrCreateWithoutRelationsInput', List['WhatsappNumberConnectOrCreateWithoutRelationsInput']]

_WhatsappNumberWhereUnique_id_Input = TypedDict(
    '_WhatsappNumberWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

_WhatsappNumberWhereUnique_phoneNumber_Input = TypedDict(
    '_WhatsappNumberWhereUnique_phoneNumber_Input',
    {
        'phoneNumber': '_str',
    },
    total=True
)

WhatsappNumberWhereUniqueInput = Union[
    '_WhatsappNumberWhereUnique_id_Input',
    '_WhatsappNumberWhereUnique_phoneNumber_Input',
]


class WhatsappNumberUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    phoneNumber: _str
    displayName: Optional[_str]
    businessAccountId: _str
    accessToken: _str
    isActive: _bool
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    user: 'UserUpdateOneWithoutRelationsInput'
    templates: 'WhatsappTemplateUpdateManyWithoutRelationsInput'
    messages: 'MessageUpdateManyWithoutRelationsInput'


class WhatsappNumberUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    phoneNumber: _str
    displayName: Optional[_str]
    businessAccountId: _str
    accessToken: _str
    isActive: _bool
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class WhatsappNumberUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['WhatsappNumberCreateWithoutRelationsInput']
    connect: List['WhatsappNumberWhereUniqueInput']
    connect_or_create: List['WhatsappNumberConnectOrCreateWithoutRelationsInput']
    set: List['WhatsappNumberWhereUniqueInput']
    disconnect: List['WhatsappNumberWhereUniqueInput']
    delete: List['WhatsappNumberWhereUniqueInput']

    # TODO
    # update: List['WhatsappNumberUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['WhatsappNumberUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['WhatsappNumberScalarWhereInput']
    # upsert: List['WhatsappNumberUpserteWithWhereUniqueWithoutRelationsInput']


class WhatsappNumberUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'WhatsappNumberCreateWithoutRelationsInput'
    connect: 'WhatsappNumberWhereUniqueInput'
    connect_or_create: 'WhatsappNumberConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'WhatsappNumberUpdateInput'
    # upsert: 'WhatsappNumberUpsertWithoutRelationsInput'


class WhatsappNumberUpsertInput(TypedDict):
    create: 'WhatsappNumberCreateInput'
    update: 'WhatsappNumberUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_WhatsappNumber_id_OrderByInput = TypedDict(
    '_WhatsappNumber_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_WhatsappNumber_phoneNumber_OrderByInput = TypedDict(
    '_WhatsappNumber_phoneNumber_OrderByInput',
    {
        'phoneNumber': 'SortOrder',
    },
    total=True
)

_WhatsappNumber_displayName_OrderByInput = TypedDict(
    '_WhatsappNumber_displayName_OrderByInput',
    {
        'displayName': 'SortOrder',
    },
    total=True
)

_WhatsappNumber_businessAccountId_OrderByInput = TypedDict(
    '_WhatsappNumber_businessAccountId_OrderByInput',
    {
        'businessAccountId': 'SortOrder',
    },
    total=True
)

_WhatsappNumber_accessToken_OrderByInput = TypedDict(
    '_WhatsappNumber_accessToken_OrderByInput',
    {
        'accessToken': 'SortOrder',
    },
    total=True
)

_WhatsappNumber_isActive_OrderByInput = TypedDict(
    '_WhatsappNumber_isActive_OrderByInput',
    {
        'isActive': 'SortOrder',
    },
    total=True
)

_WhatsappNumber_createdAt_OrderByInput = TypedDict(
    '_WhatsappNumber_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_WhatsappNumber_updatedAt_OrderByInput = TypedDict(
    '_WhatsappNumber_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_WhatsappNumber_userId_OrderByInput = TypedDict(
    '_WhatsappNumber_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_WhatsappNumber_RelevanceInner = TypedDict(
    '_WhatsappNumber_RelevanceInner',
    {
        'fields': 'List[WhatsappNumberScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_WhatsappNumber_RelevanceOrderByInput = TypedDict(
    '_WhatsappNumber_RelevanceOrderByInput',
    {
        '_relevance': '_WhatsappNumber_RelevanceInner',
    },
    total=True
)

WhatsappNumberOrderByInput = Union[
    '_WhatsappNumber_id_OrderByInput',
    '_WhatsappNumber_phoneNumber_OrderByInput',
    '_WhatsappNumber_displayName_OrderByInput',
    '_WhatsappNumber_businessAccountId_OrderByInput',
    '_WhatsappNumber_accessToken_OrderByInput',
    '_WhatsappNumber_isActive_OrderByInput',
    '_WhatsappNumber_createdAt_OrderByInput',
    '_WhatsappNumber_updatedAt_OrderByInput',
    '_WhatsappNumber_userId_OrderByInput',
    '_WhatsappNumber_RelevanceOrderByInput',
]



# recursive WhatsappNumber types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

WhatsappNumberRelationFilter = TypedDict(
    'WhatsappNumberRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class WhatsappNumberListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class WhatsappNumberInclude(TypedDict, total=False):
    """WhatsappNumber relational arguments"""
    user: Union[bool, 'UserArgsFromWhatsappNumber']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromWhatsappNumber']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappNumber']


    

class UserIncludeFromWhatsappNumber(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromWhatsappNumberRecursive1']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromWhatsappNumberRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromWhatsappNumberRecursive1']
    campaigns: Union[bool, 'FindManyCampaignArgsFromWhatsappNumberRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromWhatsappNumberRecursive1']


class UserIncludeFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromWhatsappNumberRecursive2']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromWhatsappNumberRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromWhatsappNumberRecursive2']
    campaigns: Union[bool, 'FindManyCampaignArgsFromWhatsappNumberRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromWhatsappNumberRecursive2']


class UserIncludeFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromWhatsappNumberRecursive3']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromWhatsappNumberRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromWhatsappNumberRecursive3']
    campaigns: Union[bool, 'FindManyCampaignArgsFromWhatsappNumberRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromWhatsappNumberRecursive3']


class UserIncludeFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromWhatsappNumberRecursive4']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromWhatsappNumberRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromWhatsappNumberRecursive4']
    campaigns: Union[bool, 'FindManyCampaignArgsFromWhatsappNumberRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromWhatsappNumberRecursive4']


class UserIncludeFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""

    

class UserArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    
    

class FindManyUserArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class FacebookPageIncludeFromWhatsappNumber(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive1']
    posts: Union[bool, 'FindManyFacebookPostArgsFromWhatsappNumberRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromWhatsappNumberRecursive1']


class FacebookPageIncludeFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive2']
    posts: Union[bool, 'FindManyFacebookPostArgsFromWhatsappNumberRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromWhatsappNumberRecursive2']


class FacebookPageIncludeFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive3']
    posts: Union[bool, 'FindManyFacebookPostArgsFromWhatsappNumberRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromWhatsappNumberRecursive3']


class FacebookPageIncludeFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive4']
    posts: Union[bool, 'FindManyFacebookPostArgsFromWhatsappNumberRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromWhatsappNumberRecursive4']


class FacebookPageIncludeFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""

    

class FacebookPageArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FacebookPageArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FacebookPageArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FacebookPageArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FacebookPageArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    
    

class FindManyFacebookPageArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FindManyFacebookPageArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FindManyFacebookPageArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FindManyFacebookPageArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FindManyFacebookPageArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    
    

class FacebookPostIncludeFromWhatsappNumber(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    facebookPage: Union[bool, 'FacebookPageArgsFromWhatsappNumberRecursive1']


class FacebookPostIncludeFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    facebookPage: Union[bool, 'FacebookPageArgsFromWhatsappNumberRecursive2']


class FacebookPostIncludeFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    facebookPage: Union[bool, 'FacebookPageArgsFromWhatsappNumberRecursive3']


class FacebookPostIncludeFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    facebookPage: Union[bool, 'FacebookPageArgsFromWhatsappNumberRecursive4']


class FacebookPostIncludeFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""

    

class FacebookPostArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FacebookPostArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FacebookPostArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FacebookPostArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FacebookPostArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    
    

class FindManyFacebookPostArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FindManyFacebookPostArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FindManyFacebookPostArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FindManyFacebookPostArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FindManyFacebookPostArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    
    

class WhatsappNumberIncludeFromWhatsappNumber(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive1']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromWhatsappNumberRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappNumberRecursive1']


class WhatsappNumberIncludeFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive2']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromWhatsappNumberRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappNumberRecursive2']


class WhatsappNumberIncludeFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive3']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromWhatsappNumberRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappNumberRecursive3']


class WhatsappNumberIncludeFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive4']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromWhatsappNumberRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappNumberRecursive4']


class WhatsappNumberIncludeFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""

    

class WhatsappNumberArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class WhatsappNumberArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class WhatsappNumberArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class WhatsappNumberArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class WhatsappNumberArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    
    

class FindManyWhatsappNumberArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class FindManyWhatsappNumberArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class FindManyWhatsappNumberArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class FindManyWhatsappNumberArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class FindManyWhatsappNumberArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    
    

class WhatsappTemplateIncludeFromWhatsappNumber(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromWhatsappNumberRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappNumberRecursive1']


class WhatsappTemplateIncludeFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromWhatsappNumberRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappNumberRecursive2']


class WhatsappTemplateIncludeFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromWhatsappNumberRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappNumberRecursive3']


class WhatsappTemplateIncludeFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromWhatsappNumberRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappNumberRecursive4']


class WhatsappTemplateIncludeFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""

    

class WhatsappTemplateArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class WhatsappTemplateArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class WhatsappTemplateArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class WhatsappTemplateArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class WhatsappTemplateArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    
    

class FindManyWhatsappTemplateArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class FindManyWhatsappTemplateArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class FindManyWhatsappTemplateArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class FindManyWhatsappTemplateArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class FindManyWhatsappTemplateArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    
    

class LeadIncludeFromWhatsappNumber(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive1']
    facebookPage: Union[bool, 'FacebookPageArgsFromWhatsappNumberRecursive1']
    tags: Union[bool, 'FindManyLeadTagArgsFromWhatsappNumberRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappNumberRecursive1']


class LeadIncludeFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive2']
    facebookPage: Union[bool, 'FacebookPageArgsFromWhatsappNumberRecursive2']
    tags: Union[bool, 'FindManyLeadTagArgsFromWhatsappNumberRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappNumberRecursive2']


class LeadIncludeFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive3']
    facebookPage: Union[bool, 'FacebookPageArgsFromWhatsappNumberRecursive3']
    tags: Union[bool, 'FindManyLeadTagArgsFromWhatsappNumberRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappNumberRecursive3']


class LeadIncludeFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive4']
    facebookPage: Union[bool, 'FacebookPageArgsFromWhatsappNumberRecursive4']
    tags: Union[bool, 'FindManyLeadTagArgsFromWhatsappNumberRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappNumberRecursive4']


class LeadIncludeFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""

    

class LeadArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'LeadIncludeFromLeadRecursive1'


class LeadArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'LeadIncludeFromLeadRecursive2'


class LeadArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'LeadIncludeFromLeadRecursive3'


class LeadArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'LeadIncludeFromLeadRecursive4'


class LeadArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    
    

class FindManyLeadArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive1'


class FindManyLeadArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive2'


class FindManyLeadArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive3'


class FindManyLeadArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive4'


class FindManyLeadArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    
    

class TagIncludeFromWhatsappNumber(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    leads: Union[bool, 'FindManyLeadTagArgsFromWhatsappNumberRecursive1']


class TagIncludeFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    leads: Union[bool, 'FindManyLeadTagArgsFromWhatsappNumberRecursive2']


class TagIncludeFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    leads: Union[bool, 'FindManyLeadTagArgsFromWhatsappNumberRecursive3']


class TagIncludeFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    leads: Union[bool, 'FindManyLeadTagArgsFromWhatsappNumberRecursive4']


class TagIncludeFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""

    

class TagArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'TagIncludeFromTagRecursive1'


class TagArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'TagIncludeFromTagRecursive2'


class TagArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'TagIncludeFromTagRecursive3'


class TagArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'TagIncludeFromTagRecursive4'


class TagArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    
    

class FindManyTagArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive1'


class FindManyTagArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive2'


class FindManyTagArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive3'


class FindManyTagArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive4'


class FindManyTagArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    
    

class LeadTagIncludeFromWhatsappNumber(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    lead: Union[bool, 'LeadArgsFromWhatsappNumberRecursive1']
    tag: Union[bool, 'TagArgsFromWhatsappNumberRecursive1']


class LeadTagIncludeFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    lead: Union[bool, 'LeadArgsFromWhatsappNumberRecursive2']
    tag: Union[bool, 'TagArgsFromWhatsappNumberRecursive2']


class LeadTagIncludeFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    lead: Union[bool, 'LeadArgsFromWhatsappNumberRecursive3']
    tag: Union[bool, 'TagArgsFromWhatsappNumberRecursive3']


class LeadTagIncludeFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    lead: Union[bool, 'LeadArgsFromWhatsappNumberRecursive4']
    tag: Union[bool, 'TagArgsFromWhatsappNumberRecursive4']


class LeadTagIncludeFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""

    

class LeadTagArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class LeadTagArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class LeadTagArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class LeadTagArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class LeadTagArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    
    

class FindManyLeadTagArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class FindManyLeadTagArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class FindManyLeadTagArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class FindManyLeadTagArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class FindManyLeadTagArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    
    

class MessageIncludeFromWhatsappNumber(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    lead: Union[bool, 'LeadArgsFromWhatsappNumberRecursive1']
    campaign: Union[bool, 'CampaignArgsFromWhatsappNumberRecursive1']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromWhatsappNumberRecursive1']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromWhatsappNumberRecursive1']


class MessageIncludeFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    lead: Union[bool, 'LeadArgsFromWhatsappNumberRecursive2']
    campaign: Union[bool, 'CampaignArgsFromWhatsappNumberRecursive2']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromWhatsappNumberRecursive2']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromWhatsappNumberRecursive2']


class MessageIncludeFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    lead: Union[bool, 'LeadArgsFromWhatsappNumberRecursive3']
    campaign: Union[bool, 'CampaignArgsFromWhatsappNumberRecursive3']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromWhatsappNumberRecursive3']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromWhatsappNumberRecursive3']


class MessageIncludeFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    lead: Union[bool, 'LeadArgsFromWhatsappNumberRecursive4']
    campaign: Union[bool, 'CampaignArgsFromWhatsappNumberRecursive4']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromWhatsappNumberRecursive4']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromWhatsappNumberRecursive4']


class MessageIncludeFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""

    

class MessageArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    
    

class FindManyMessageArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class CampaignIncludeFromWhatsappNumber(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappNumberRecursive1']


class CampaignIncludeFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappNumberRecursive2']


class CampaignIncludeFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappNumberRecursive3']


class CampaignIncludeFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappNumberRecursive4']


class CampaignIncludeFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""

    

class CampaignArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'CampaignIncludeFromCampaignRecursive1'


class CampaignArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'CampaignIncludeFromCampaignRecursive2'


class CampaignArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'CampaignIncludeFromCampaignRecursive3'


class CampaignArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'CampaignIncludeFromCampaignRecursive4'


class CampaignArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    
    

class FindManyCampaignArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive1'


class FindManyCampaignArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive2'


class FindManyCampaignArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive3'


class FindManyCampaignArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive4'


class FindManyCampaignArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    
    

class AuditLogIncludeFromWhatsappNumber(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive1']


class AuditLogIncludeFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive2']


class AuditLogIncludeFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive3']


class AuditLogIncludeFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""
    user: Union[bool, 'UserArgsFromWhatsappNumberRecursive4']


class AuditLogIncludeFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""

    

class AuditLogArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    
    

class FindManyAuditLogArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    
    

class ApiKeyIncludeFromWhatsappNumber(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""


class ApiKeyIncludeFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""


class ApiKeyIncludeFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""


class ApiKeyIncludeFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""


class ApiKeyIncludeFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""

    

class ApiKeyArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class ApiKeyArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class ApiKeyArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class ApiKeyArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class ApiKeyArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    
    

class FindManyApiKeyArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class FindManyApiKeyArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class FindManyApiKeyArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class FindManyApiKeyArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class FindManyApiKeyArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    
    

class RateLimitIncludeFromWhatsappNumber(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""


class RateLimitIncludeFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""


class RateLimitIncludeFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""


class RateLimitIncludeFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""


class RateLimitIncludeFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappNumber"""

    

class RateLimitArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class RateLimitArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class RateLimitArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class RateLimitArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class RateLimitArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    
    

class FindManyRateLimitArgsFromWhatsappNumber(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class FindManyRateLimitArgsFromWhatsappNumberRecursive1(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class FindManyRateLimitArgsFromWhatsappNumberRecursive2(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class FindManyRateLimitArgsFromWhatsappNumberRecursive3(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class FindManyRateLimitArgsFromWhatsappNumberRecursive4(TypedDict, total=False):
    """Arguments for WhatsappNumber"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    


FindManyWhatsappNumberArgs = FindManyWhatsappNumberArgsFromWhatsappNumber
FindFirstWhatsappNumberArgs = FindManyWhatsappNumberArgsFromWhatsappNumber


    

class WhatsappNumberWhereInput(TypedDict, total=False):
    """WhatsappNumber arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    phoneNumber: Union[_str, 'types.StringFilter']
    displayName: Union[None, _str, 'types.StringFilter']
    businessAccountId: Union[_str, 'types.StringFilter']
    accessToken: Union[_str, 'types.StringFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    templates: 'WhatsappTemplateListRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['WhatsappNumberWhereInputRecursive1', List['WhatsappNumberWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['WhatsappNumberWhereInputRecursive1']
    OR: List['WhatsappNumberWhereInputRecursive1']
    NOT: List['WhatsappNumberWhereInputRecursive1']


class WhatsappNumberWhereInputRecursive1(TypedDict, total=False):
    """WhatsappNumber arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    phoneNumber: Union[_str, 'types.StringFilter']
    displayName: Union[None, _str, 'types.StringFilter']
    businessAccountId: Union[_str, 'types.StringFilter']
    accessToken: Union[_str, 'types.StringFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    templates: 'WhatsappTemplateListRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['WhatsappNumberWhereInputRecursive2', List['WhatsappNumberWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['WhatsappNumberWhereInputRecursive2']
    OR: List['WhatsappNumberWhereInputRecursive2']
    NOT: List['WhatsappNumberWhereInputRecursive2']


class WhatsappNumberWhereInputRecursive2(TypedDict, total=False):
    """WhatsappNumber arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    phoneNumber: Union[_str, 'types.StringFilter']
    displayName: Union[None, _str, 'types.StringFilter']
    businessAccountId: Union[_str, 'types.StringFilter']
    accessToken: Union[_str, 'types.StringFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    templates: 'WhatsappTemplateListRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['WhatsappNumberWhereInputRecursive3', List['WhatsappNumberWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['WhatsappNumberWhereInputRecursive3']
    OR: List['WhatsappNumberWhereInputRecursive3']
    NOT: List['WhatsappNumberWhereInputRecursive3']


class WhatsappNumberWhereInputRecursive3(TypedDict, total=False):
    """WhatsappNumber arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    phoneNumber: Union[_str, 'types.StringFilter']
    displayName: Union[None, _str, 'types.StringFilter']
    businessAccountId: Union[_str, 'types.StringFilter']
    accessToken: Union[_str, 'types.StringFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    templates: 'WhatsappTemplateListRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['WhatsappNumberWhereInputRecursive4', List['WhatsappNumberWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['WhatsappNumberWhereInputRecursive4']
    OR: List['WhatsappNumberWhereInputRecursive4']
    NOT: List['WhatsappNumberWhereInputRecursive4']


class WhatsappNumberWhereInputRecursive4(TypedDict, total=False):
    """WhatsappNumber arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    phoneNumber: Union[_str, 'types.StringFilter']
    displayName: Union[None, _str, 'types.StringFilter']
    businessAccountId: Union[_str, 'types.StringFilter']
    accessToken: Union[_str, 'types.StringFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    templates: 'WhatsappTemplateListRelationFilter'
    messages: 'MessageListRelationFilter'



# aggregate WhatsappNumber types


    

class WhatsappNumberScalarWhereWithAggregatesInput(TypedDict, total=False):
    """WhatsappNumber arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    phoneNumber: Union[_str, 'types.StringWithAggregatesFilter']
    displayName: Union[_str, 'types.StringWithAggregatesFilter']
    businessAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    accessToken: Union[_str, 'types.StringWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['WhatsappNumberScalarWhereWithAggregatesInputRecursive1']
    OR: List['WhatsappNumberScalarWhereWithAggregatesInputRecursive1']
    NOT: List['WhatsappNumberScalarWhereWithAggregatesInputRecursive1']


class WhatsappNumberScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """WhatsappNumber arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    phoneNumber: Union[_str, 'types.StringWithAggregatesFilter']
    displayName: Union[_str, 'types.StringWithAggregatesFilter']
    businessAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    accessToken: Union[_str, 'types.StringWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['WhatsappNumberScalarWhereWithAggregatesInputRecursive2']
    OR: List['WhatsappNumberScalarWhereWithAggregatesInputRecursive2']
    NOT: List['WhatsappNumberScalarWhereWithAggregatesInputRecursive2']


class WhatsappNumberScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """WhatsappNumber arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    phoneNumber: Union[_str, 'types.StringWithAggregatesFilter']
    displayName: Union[_str, 'types.StringWithAggregatesFilter']
    businessAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    accessToken: Union[_str, 'types.StringWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['WhatsappNumberScalarWhereWithAggregatesInputRecursive3']
    OR: List['WhatsappNumberScalarWhereWithAggregatesInputRecursive3']
    NOT: List['WhatsappNumberScalarWhereWithAggregatesInputRecursive3']


class WhatsappNumberScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """WhatsappNumber arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    phoneNumber: Union[_str, 'types.StringWithAggregatesFilter']
    displayName: Union[_str, 'types.StringWithAggregatesFilter']
    businessAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    accessToken: Union[_str, 'types.StringWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['WhatsappNumberScalarWhereWithAggregatesInputRecursive4']
    OR: List['WhatsappNumberScalarWhereWithAggregatesInputRecursive4']
    NOT: List['WhatsappNumberScalarWhereWithAggregatesInputRecursive4']


class WhatsappNumberScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """WhatsappNumber arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    phoneNumber: Union[_str, 'types.StringWithAggregatesFilter']
    displayName: Union[_str, 'types.StringWithAggregatesFilter']
    businessAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    accessToken: Union[_str, 'types.StringWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']



class WhatsappNumberGroupByOutput(TypedDict, total=False):
    id: _str
    phoneNumber: _str
    displayName: _str
    businessAccountId: _str
    accessToken: _str
    isActive: _bool
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    userId: _str
    _sum: 'WhatsappNumberSumAggregateOutput'
    _avg: 'WhatsappNumberAvgAggregateOutput'
    _min: 'WhatsappNumberMinAggregateOutput'
    _max: 'WhatsappNumberMaxAggregateOutput'
    _count: 'WhatsappNumberCountAggregateOutput'


class WhatsappNumberAvgAggregateOutput(TypedDict, total=False):
    """WhatsappNumber output for aggregating averages"""


class WhatsappNumberSumAggregateOutput(TypedDict, total=False):
    """WhatsappNumber output for aggregating sums"""


class WhatsappNumberScalarAggregateOutput(TypedDict, total=False):
    """WhatsappNumber output including scalar fields"""
    id: _str
    phoneNumber: _str
    displayName: _str
    businessAccountId: _str
    accessToken: _str
    isActive: _bool
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    userId: _str


WhatsappNumberMinAggregateOutput = WhatsappNumberScalarAggregateOutput
WhatsappNumberMaxAggregateOutput = WhatsappNumberScalarAggregateOutput


class WhatsappNumberMaxAggregateInput(TypedDict, total=False):
    """WhatsappNumber input for aggregating by max"""
    id: bool
    phoneNumber: bool
    displayName: bool
    businessAccountId: bool
    accessToken: bool
    isActive: bool
    createdAt: bool
    updatedAt: bool
    userId: bool


class WhatsappNumberMinAggregateInput(TypedDict, total=False):
    """WhatsappNumber input for aggregating by min"""
    id: bool
    phoneNumber: bool
    displayName: bool
    businessAccountId: bool
    accessToken: bool
    isActive: bool
    createdAt: bool
    updatedAt: bool
    userId: bool


class WhatsappNumberNumberAggregateInput(TypedDict, total=False):
    """WhatsappNumber input for aggregating numbers"""


WhatsappNumberAvgAggregateInput = WhatsappNumberNumberAggregateInput
WhatsappNumberSumAggregateInput = WhatsappNumberNumberAggregateInput


WhatsappNumberCountAggregateInput = TypedDict(
    'WhatsappNumberCountAggregateInput',
    {
        'id': bool,
        'phoneNumber': bool,
        'displayName': bool,
        'businessAccountId': bool,
        'accessToken': bool,
        'isActive': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'userId': bool,
        '_all': bool,
    },
    total=False,
)

WhatsappNumberCountAggregateOutput = TypedDict(
    'WhatsappNumberCountAggregateOutput',
    {
        'id': int,
        'phoneNumber': int,
        'displayName': int,
        'businessAccountId': int,
        'accessToken': int,
        'isActive': int,
        'createdAt': int,
        'updatedAt': int,
        'userId': int,
        '_all': int,
    },
    total=False,
)


WhatsappNumberKeys = Literal[
    'id',
    'phoneNumber',
    'displayName',
    'businessAccountId',
    'accessToken',
    'isActive',
    'createdAt',
    'updatedAt',
    'userId',
    'user',
    'templates',
    'messages',
]
WhatsappNumberScalarFieldKeys = Literal[
    'id',
    'phoneNumber',
    'displayName',
    'businessAccountId',
    'accessToken',
    'isActive',
    'createdAt',
    'updatedAt',
    'userId',
]
WhatsappNumberScalarFieldKeysT = TypeVar('WhatsappNumberScalarFieldKeysT', bound=WhatsappNumberScalarFieldKeys)

WhatsappNumberRelationalFieldKeys = Literal[
        'user',
        'templates',
        'messages',
    ]

# WhatsappTemplate types

class WhatsappTemplateOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the WhatsappTemplate create method"""
    id: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    whatsappNumberId: _str
    whatsappNumber: 'WhatsappNumberCreateNestedWithoutRelationsInput'
    messages: 'MessageCreateManyNestedWithoutRelationsInput'


class WhatsappTemplateCreateInput(WhatsappTemplateOptionalCreateInput):
    """Required arguments to the WhatsappTemplate create method"""
    name: _str
    language: _str
    status: _str
    category: _str
    components: 'fields.Json'


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class WhatsappTemplateOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the WhatsappTemplate create method, without relations"""
    id: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    whatsappNumberId: _str


class WhatsappTemplateCreateWithoutRelationsInput(WhatsappTemplateOptionalCreateWithoutRelationsInput):
    """Required arguments to the WhatsappTemplate create method, without relations"""
    name: _str
    language: _str
    status: _str
    category: _str
    components: 'fields.Json'

class WhatsappTemplateConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'WhatsappTemplateCreateWithoutRelationsInput'
    where: 'WhatsappTemplateWhereUniqueInput'

class WhatsappTemplateCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'WhatsappTemplateCreateWithoutRelationsInput'
    connect: 'WhatsappTemplateWhereUniqueInput'
    connect_or_create: 'WhatsappTemplateConnectOrCreateWithoutRelationsInput'


class WhatsappTemplateCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['WhatsappTemplateCreateWithoutRelationsInput', List['WhatsappTemplateCreateWithoutRelationsInput']]
    connect: Union['WhatsappTemplateWhereUniqueInput', List['WhatsappTemplateWhereUniqueInput']]
    connect_or_create: Union['WhatsappTemplateConnectOrCreateWithoutRelationsInput', List['WhatsappTemplateConnectOrCreateWithoutRelationsInput']]

_WhatsappTemplateWhereUnique_id_Input = TypedDict(
    '_WhatsappTemplateWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

_WhatsappTemplateCompoundwhatsappNumberId_nameKeyInner = TypedDict(
    '_WhatsappTemplateCompoundwhatsappNumberId_nameKeyInner',
    {
        'whatsappNumberId': '_str',
        'name': '_str',
    },
    total=True
)

_WhatsappTemplateCompoundwhatsappNumberId_nameKey = TypedDict(
    '_WhatsappTemplateCompoundwhatsappNumberId_nameKey',
    {
        'whatsappNumberId_name': '_WhatsappTemplateCompoundwhatsappNumberId_nameKeyInner',
    },
    total=True
)

WhatsappTemplateWhereUniqueInput = Union[
    '_WhatsappTemplateWhereUnique_id_Input',
    '_WhatsappTemplateCompoundwhatsappNumberId_nameKey',
]


class WhatsappTemplateUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    name: _str
    language: _str
    status: _str
    category: _str
    components: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    whatsappNumber: 'WhatsappNumberUpdateOneWithoutRelationsInput'
    messages: 'MessageUpdateManyWithoutRelationsInput'


class WhatsappTemplateUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    name: _str
    language: _str
    status: _str
    category: _str
    components: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class WhatsappTemplateUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['WhatsappTemplateCreateWithoutRelationsInput']
    connect: List['WhatsappTemplateWhereUniqueInput']
    connect_or_create: List['WhatsappTemplateConnectOrCreateWithoutRelationsInput']
    set: List['WhatsappTemplateWhereUniqueInput']
    disconnect: List['WhatsappTemplateWhereUniqueInput']
    delete: List['WhatsappTemplateWhereUniqueInput']

    # TODO
    # update: List['WhatsappTemplateUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['WhatsappTemplateUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['WhatsappTemplateScalarWhereInput']
    # upsert: List['WhatsappTemplateUpserteWithWhereUniqueWithoutRelationsInput']


class WhatsappTemplateUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'WhatsappTemplateCreateWithoutRelationsInput'
    connect: 'WhatsappTemplateWhereUniqueInput'
    connect_or_create: 'WhatsappTemplateConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'WhatsappTemplateUpdateInput'
    # upsert: 'WhatsappTemplateUpsertWithoutRelationsInput'


class WhatsappTemplateUpsertInput(TypedDict):
    create: 'WhatsappTemplateCreateInput'
    update: 'WhatsappTemplateUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_WhatsappTemplate_id_OrderByInput = TypedDict(
    '_WhatsappTemplate_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_WhatsappTemplate_name_OrderByInput = TypedDict(
    '_WhatsappTemplate_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_WhatsappTemplate_language_OrderByInput = TypedDict(
    '_WhatsappTemplate_language_OrderByInput',
    {
        'language': 'SortOrder',
    },
    total=True
)

_WhatsappTemplate_status_OrderByInput = TypedDict(
    '_WhatsappTemplate_status_OrderByInput',
    {
        'status': 'SortOrder',
    },
    total=True
)

_WhatsappTemplate_category_OrderByInput = TypedDict(
    '_WhatsappTemplate_category_OrderByInput',
    {
        'category': 'SortOrder',
    },
    total=True
)

_WhatsappTemplate_components_OrderByInput = TypedDict(
    '_WhatsappTemplate_components_OrderByInput',
    {
        'components': 'SortOrder',
    },
    total=True
)

_WhatsappTemplate_createdAt_OrderByInput = TypedDict(
    '_WhatsappTemplate_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_WhatsappTemplate_updatedAt_OrderByInput = TypedDict(
    '_WhatsappTemplate_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_WhatsappTemplate_whatsappNumberId_OrderByInput = TypedDict(
    '_WhatsappTemplate_whatsappNumberId_OrderByInput',
    {
        'whatsappNumberId': 'SortOrder',
    },
    total=True
)

_WhatsappTemplate_RelevanceInner = TypedDict(
    '_WhatsappTemplate_RelevanceInner',
    {
        'fields': 'List[WhatsappTemplateScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_WhatsappTemplate_RelevanceOrderByInput = TypedDict(
    '_WhatsappTemplate_RelevanceOrderByInput',
    {
        '_relevance': '_WhatsappTemplate_RelevanceInner',
    },
    total=True
)

WhatsappTemplateOrderByInput = Union[
    '_WhatsappTemplate_id_OrderByInput',
    '_WhatsappTemplate_name_OrderByInput',
    '_WhatsappTemplate_language_OrderByInput',
    '_WhatsappTemplate_status_OrderByInput',
    '_WhatsappTemplate_category_OrderByInput',
    '_WhatsappTemplate_components_OrderByInput',
    '_WhatsappTemplate_createdAt_OrderByInput',
    '_WhatsappTemplate_updatedAt_OrderByInput',
    '_WhatsappTemplate_whatsappNumberId_OrderByInput',
    '_WhatsappTemplate_RelevanceOrderByInput',
]



# recursive WhatsappTemplate types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

WhatsappTemplateRelationFilter = TypedDict(
    'WhatsappTemplateRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class WhatsappTemplateListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class WhatsappTemplateInclude(TypedDict, total=False):
    """WhatsappTemplate relational arguments"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromWhatsappTemplate']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappTemplate']


    

class UserIncludeFromWhatsappTemplate(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromWhatsappTemplateRecursive1']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromWhatsappTemplateRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromWhatsappTemplateRecursive1']
    campaigns: Union[bool, 'FindManyCampaignArgsFromWhatsappTemplateRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromWhatsappTemplateRecursive1']


class UserIncludeFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromWhatsappTemplateRecursive2']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromWhatsappTemplateRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromWhatsappTemplateRecursive2']
    campaigns: Union[bool, 'FindManyCampaignArgsFromWhatsappTemplateRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromWhatsappTemplateRecursive2']


class UserIncludeFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromWhatsappTemplateRecursive3']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromWhatsappTemplateRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromWhatsappTemplateRecursive3']
    campaigns: Union[bool, 'FindManyCampaignArgsFromWhatsappTemplateRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromWhatsappTemplateRecursive3']


class UserIncludeFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromWhatsappTemplateRecursive4']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromWhatsappTemplateRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromWhatsappTemplateRecursive4']
    campaigns: Union[bool, 'FindManyCampaignArgsFromWhatsappTemplateRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromWhatsappTemplateRecursive4']


class UserIncludeFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""

    

class UserArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    
    

class FindManyUserArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class FacebookPageIncludeFromWhatsappTemplate(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive1']
    posts: Union[bool, 'FindManyFacebookPostArgsFromWhatsappTemplateRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromWhatsappTemplateRecursive1']


class FacebookPageIncludeFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive2']
    posts: Union[bool, 'FindManyFacebookPostArgsFromWhatsappTemplateRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromWhatsappTemplateRecursive2']


class FacebookPageIncludeFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive3']
    posts: Union[bool, 'FindManyFacebookPostArgsFromWhatsappTemplateRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromWhatsappTemplateRecursive3']


class FacebookPageIncludeFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive4']
    posts: Union[bool, 'FindManyFacebookPostArgsFromWhatsappTemplateRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromWhatsappTemplateRecursive4']


class FacebookPageIncludeFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""

    

class FacebookPageArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FacebookPageArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FacebookPageArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FacebookPageArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FacebookPageArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    
    

class FindManyFacebookPageArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FindManyFacebookPageArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FindManyFacebookPageArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FindManyFacebookPageArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FindManyFacebookPageArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    
    

class FacebookPostIncludeFromWhatsappTemplate(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    facebookPage: Union[bool, 'FacebookPageArgsFromWhatsappTemplateRecursive1']


class FacebookPostIncludeFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    facebookPage: Union[bool, 'FacebookPageArgsFromWhatsappTemplateRecursive2']


class FacebookPostIncludeFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    facebookPage: Union[bool, 'FacebookPageArgsFromWhatsappTemplateRecursive3']


class FacebookPostIncludeFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    facebookPage: Union[bool, 'FacebookPageArgsFromWhatsappTemplateRecursive4']


class FacebookPostIncludeFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""

    

class FacebookPostArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FacebookPostArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FacebookPostArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FacebookPostArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FacebookPostArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    
    

class FindManyFacebookPostArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FindManyFacebookPostArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FindManyFacebookPostArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FindManyFacebookPostArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FindManyFacebookPostArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    
    

class WhatsappNumberIncludeFromWhatsappTemplate(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive1']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromWhatsappTemplateRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappTemplateRecursive1']


class WhatsappNumberIncludeFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive2']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromWhatsappTemplateRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappTemplateRecursive2']


class WhatsappNumberIncludeFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive3']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromWhatsappTemplateRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappTemplateRecursive3']


class WhatsappNumberIncludeFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive4']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromWhatsappTemplateRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappTemplateRecursive4']


class WhatsappNumberIncludeFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""

    

class WhatsappNumberArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class WhatsappNumberArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class WhatsappNumberArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class WhatsappNumberArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class WhatsappNumberArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    
    

class FindManyWhatsappNumberArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class FindManyWhatsappNumberArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class FindManyWhatsappNumberArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class FindManyWhatsappNumberArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class FindManyWhatsappNumberArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    
    

class WhatsappTemplateIncludeFromWhatsappTemplate(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromWhatsappTemplateRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappTemplateRecursive1']


class WhatsappTemplateIncludeFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromWhatsappTemplateRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappTemplateRecursive2']


class WhatsappTemplateIncludeFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromWhatsappTemplateRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappTemplateRecursive3']


class WhatsappTemplateIncludeFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromWhatsappTemplateRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappTemplateRecursive4']


class WhatsappTemplateIncludeFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""

    

class WhatsappTemplateArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class WhatsappTemplateArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class WhatsappTemplateArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class WhatsappTemplateArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class WhatsappTemplateArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    
    

class FindManyWhatsappTemplateArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class FindManyWhatsappTemplateArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class FindManyWhatsappTemplateArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class FindManyWhatsappTemplateArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class FindManyWhatsappTemplateArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    
    

class LeadIncludeFromWhatsappTemplate(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive1']
    facebookPage: Union[bool, 'FacebookPageArgsFromWhatsappTemplateRecursive1']
    tags: Union[bool, 'FindManyLeadTagArgsFromWhatsappTemplateRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappTemplateRecursive1']


class LeadIncludeFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive2']
    facebookPage: Union[bool, 'FacebookPageArgsFromWhatsappTemplateRecursive2']
    tags: Union[bool, 'FindManyLeadTagArgsFromWhatsappTemplateRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappTemplateRecursive2']


class LeadIncludeFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive3']
    facebookPage: Union[bool, 'FacebookPageArgsFromWhatsappTemplateRecursive3']
    tags: Union[bool, 'FindManyLeadTagArgsFromWhatsappTemplateRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappTemplateRecursive3']


class LeadIncludeFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive4']
    facebookPage: Union[bool, 'FacebookPageArgsFromWhatsappTemplateRecursive4']
    tags: Union[bool, 'FindManyLeadTagArgsFromWhatsappTemplateRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappTemplateRecursive4']


class LeadIncludeFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""

    

class LeadArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'LeadIncludeFromLeadRecursive1'


class LeadArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'LeadIncludeFromLeadRecursive2'


class LeadArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'LeadIncludeFromLeadRecursive3'


class LeadArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'LeadIncludeFromLeadRecursive4'


class LeadArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    
    

class FindManyLeadArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive1'


class FindManyLeadArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive2'


class FindManyLeadArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive3'


class FindManyLeadArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive4'


class FindManyLeadArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    
    

class TagIncludeFromWhatsappTemplate(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    leads: Union[bool, 'FindManyLeadTagArgsFromWhatsappTemplateRecursive1']


class TagIncludeFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    leads: Union[bool, 'FindManyLeadTagArgsFromWhatsappTemplateRecursive2']


class TagIncludeFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    leads: Union[bool, 'FindManyLeadTagArgsFromWhatsappTemplateRecursive3']


class TagIncludeFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    leads: Union[bool, 'FindManyLeadTagArgsFromWhatsappTemplateRecursive4']


class TagIncludeFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""

    

class TagArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'TagIncludeFromTagRecursive1'


class TagArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'TagIncludeFromTagRecursive2'


class TagArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'TagIncludeFromTagRecursive3'


class TagArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'TagIncludeFromTagRecursive4'


class TagArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    
    

class FindManyTagArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive1'


class FindManyTagArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive2'


class FindManyTagArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive3'


class FindManyTagArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive4'


class FindManyTagArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    
    

class LeadTagIncludeFromWhatsappTemplate(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    lead: Union[bool, 'LeadArgsFromWhatsappTemplateRecursive1']
    tag: Union[bool, 'TagArgsFromWhatsappTemplateRecursive1']


class LeadTagIncludeFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    lead: Union[bool, 'LeadArgsFromWhatsappTemplateRecursive2']
    tag: Union[bool, 'TagArgsFromWhatsappTemplateRecursive2']


class LeadTagIncludeFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    lead: Union[bool, 'LeadArgsFromWhatsappTemplateRecursive3']
    tag: Union[bool, 'TagArgsFromWhatsappTemplateRecursive3']


class LeadTagIncludeFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    lead: Union[bool, 'LeadArgsFromWhatsappTemplateRecursive4']
    tag: Union[bool, 'TagArgsFromWhatsappTemplateRecursive4']


class LeadTagIncludeFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""

    

class LeadTagArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class LeadTagArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class LeadTagArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class LeadTagArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class LeadTagArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    
    

class FindManyLeadTagArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class FindManyLeadTagArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class FindManyLeadTagArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class FindManyLeadTagArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class FindManyLeadTagArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    
    

class MessageIncludeFromWhatsappTemplate(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    lead: Union[bool, 'LeadArgsFromWhatsappTemplateRecursive1']
    campaign: Union[bool, 'CampaignArgsFromWhatsappTemplateRecursive1']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromWhatsappTemplateRecursive1']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromWhatsappTemplateRecursive1']


class MessageIncludeFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    lead: Union[bool, 'LeadArgsFromWhatsappTemplateRecursive2']
    campaign: Union[bool, 'CampaignArgsFromWhatsappTemplateRecursive2']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromWhatsappTemplateRecursive2']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromWhatsappTemplateRecursive2']


class MessageIncludeFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    lead: Union[bool, 'LeadArgsFromWhatsappTemplateRecursive3']
    campaign: Union[bool, 'CampaignArgsFromWhatsappTemplateRecursive3']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromWhatsappTemplateRecursive3']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromWhatsappTemplateRecursive3']


class MessageIncludeFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    lead: Union[bool, 'LeadArgsFromWhatsappTemplateRecursive4']
    campaign: Union[bool, 'CampaignArgsFromWhatsappTemplateRecursive4']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromWhatsappTemplateRecursive4']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromWhatsappTemplateRecursive4']


class MessageIncludeFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""

    

class MessageArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    
    

class FindManyMessageArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class CampaignIncludeFromWhatsappTemplate(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappTemplateRecursive1']


class CampaignIncludeFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappTemplateRecursive2']


class CampaignIncludeFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappTemplateRecursive3']


class CampaignIncludeFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromWhatsappTemplateRecursive4']


class CampaignIncludeFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""

    

class CampaignArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'CampaignIncludeFromCampaignRecursive1'


class CampaignArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'CampaignIncludeFromCampaignRecursive2'


class CampaignArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'CampaignIncludeFromCampaignRecursive3'


class CampaignArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'CampaignIncludeFromCampaignRecursive4'


class CampaignArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    
    

class FindManyCampaignArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive1'


class FindManyCampaignArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive2'


class FindManyCampaignArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive3'


class FindManyCampaignArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive4'


class FindManyCampaignArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    
    

class AuditLogIncludeFromWhatsappTemplate(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive1']


class AuditLogIncludeFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive2']


class AuditLogIncludeFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive3']


class AuditLogIncludeFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""
    user: Union[bool, 'UserArgsFromWhatsappTemplateRecursive4']


class AuditLogIncludeFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""

    

class AuditLogArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    
    

class FindManyAuditLogArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    
    

class ApiKeyIncludeFromWhatsappTemplate(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""


class ApiKeyIncludeFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""


class ApiKeyIncludeFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""


class ApiKeyIncludeFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""


class ApiKeyIncludeFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""

    

class ApiKeyArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class ApiKeyArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class ApiKeyArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class ApiKeyArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class ApiKeyArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    
    

class FindManyApiKeyArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class FindManyApiKeyArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class FindManyApiKeyArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class FindManyApiKeyArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class FindManyApiKeyArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    
    

class RateLimitIncludeFromWhatsappTemplate(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""


class RateLimitIncludeFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""


class RateLimitIncludeFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""


class RateLimitIncludeFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""


class RateLimitIncludeFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Relational arguments for WhatsappTemplate"""

    

class RateLimitArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class RateLimitArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class RateLimitArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class RateLimitArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class RateLimitArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    
    

class FindManyRateLimitArgsFromWhatsappTemplate(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class FindManyRateLimitArgsFromWhatsappTemplateRecursive1(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class FindManyRateLimitArgsFromWhatsappTemplateRecursive2(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class FindManyRateLimitArgsFromWhatsappTemplateRecursive3(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class FindManyRateLimitArgsFromWhatsappTemplateRecursive4(TypedDict, total=False):
    """Arguments for WhatsappTemplate"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    


FindManyWhatsappTemplateArgs = FindManyWhatsappTemplateArgsFromWhatsappTemplate
FindFirstWhatsappTemplateArgs = FindManyWhatsappTemplateArgsFromWhatsappTemplate


    

class WhatsappTemplateWhereInput(TypedDict, total=False):
    """WhatsappTemplate arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    language: Union[_str, 'types.StringFilter']
    status: Union[_str, 'types.StringFilter']
    category: Union[_str, 'types.StringFilter']
    components: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    whatsappNumberId: Union[_str, 'types.StringFilter']
    whatsappNumber: 'WhatsappNumberRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['WhatsappTemplateWhereInputRecursive1', List['WhatsappTemplateWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['WhatsappTemplateWhereInputRecursive1']
    OR: List['WhatsappTemplateWhereInputRecursive1']
    NOT: List['WhatsappTemplateWhereInputRecursive1']


class WhatsappTemplateWhereInputRecursive1(TypedDict, total=False):
    """WhatsappTemplate arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    language: Union[_str, 'types.StringFilter']
    status: Union[_str, 'types.StringFilter']
    category: Union[_str, 'types.StringFilter']
    components: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    whatsappNumberId: Union[_str, 'types.StringFilter']
    whatsappNumber: 'WhatsappNumberRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['WhatsappTemplateWhereInputRecursive2', List['WhatsappTemplateWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['WhatsappTemplateWhereInputRecursive2']
    OR: List['WhatsappTemplateWhereInputRecursive2']
    NOT: List['WhatsappTemplateWhereInputRecursive2']


class WhatsappTemplateWhereInputRecursive2(TypedDict, total=False):
    """WhatsappTemplate arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    language: Union[_str, 'types.StringFilter']
    status: Union[_str, 'types.StringFilter']
    category: Union[_str, 'types.StringFilter']
    components: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    whatsappNumberId: Union[_str, 'types.StringFilter']
    whatsappNumber: 'WhatsappNumberRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['WhatsappTemplateWhereInputRecursive3', List['WhatsappTemplateWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['WhatsappTemplateWhereInputRecursive3']
    OR: List['WhatsappTemplateWhereInputRecursive3']
    NOT: List['WhatsappTemplateWhereInputRecursive3']


class WhatsappTemplateWhereInputRecursive3(TypedDict, total=False):
    """WhatsappTemplate arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    language: Union[_str, 'types.StringFilter']
    status: Union[_str, 'types.StringFilter']
    category: Union[_str, 'types.StringFilter']
    components: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    whatsappNumberId: Union[_str, 'types.StringFilter']
    whatsappNumber: 'WhatsappNumberRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['WhatsappTemplateWhereInputRecursive4', List['WhatsappTemplateWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['WhatsappTemplateWhereInputRecursive4']
    OR: List['WhatsappTemplateWhereInputRecursive4']
    NOT: List['WhatsappTemplateWhereInputRecursive4']


class WhatsappTemplateWhereInputRecursive4(TypedDict, total=False):
    """WhatsappTemplate arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    language: Union[_str, 'types.StringFilter']
    status: Union[_str, 'types.StringFilter']
    category: Union[_str, 'types.StringFilter']
    components: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    whatsappNumberId: Union[_str, 'types.StringFilter']
    whatsappNumber: 'WhatsappNumberRelationFilter'
    messages: 'MessageListRelationFilter'



# aggregate WhatsappTemplate types


    

class WhatsappTemplateScalarWhereWithAggregatesInput(TypedDict, total=False):
    """WhatsappTemplate arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    language: Union[_str, 'types.StringWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    category: Union[_str, 'types.StringWithAggregatesFilter']
    components: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    whatsappNumberId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['WhatsappTemplateScalarWhereWithAggregatesInputRecursive1']
    OR: List['WhatsappTemplateScalarWhereWithAggregatesInputRecursive1']
    NOT: List['WhatsappTemplateScalarWhereWithAggregatesInputRecursive1']


class WhatsappTemplateScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """WhatsappTemplate arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    language: Union[_str, 'types.StringWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    category: Union[_str, 'types.StringWithAggregatesFilter']
    components: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    whatsappNumberId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['WhatsappTemplateScalarWhereWithAggregatesInputRecursive2']
    OR: List['WhatsappTemplateScalarWhereWithAggregatesInputRecursive2']
    NOT: List['WhatsappTemplateScalarWhereWithAggregatesInputRecursive2']


class WhatsappTemplateScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """WhatsappTemplate arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    language: Union[_str, 'types.StringWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    category: Union[_str, 'types.StringWithAggregatesFilter']
    components: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    whatsappNumberId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['WhatsappTemplateScalarWhereWithAggregatesInputRecursive3']
    OR: List['WhatsappTemplateScalarWhereWithAggregatesInputRecursive3']
    NOT: List['WhatsappTemplateScalarWhereWithAggregatesInputRecursive3']


class WhatsappTemplateScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """WhatsappTemplate arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    language: Union[_str, 'types.StringWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    category: Union[_str, 'types.StringWithAggregatesFilter']
    components: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    whatsappNumberId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['WhatsappTemplateScalarWhereWithAggregatesInputRecursive4']
    OR: List['WhatsappTemplateScalarWhereWithAggregatesInputRecursive4']
    NOT: List['WhatsappTemplateScalarWhereWithAggregatesInputRecursive4']


class WhatsappTemplateScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """WhatsappTemplate arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    language: Union[_str, 'types.StringWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    category: Union[_str, 'types.StringWithAggregatesFilter']
    components: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    whatsappNumberId: Union[_str, 'types.StringWithAggregatesFilter']



class WhatsappTemplateGroupByOutput(TypedDict, total=False):
    id: _str
    name: _str
    language: _str
    status: _str
    category: _str
    components: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    whatsappNumberId: _str
    _sum: 'WhatsappTemplateSumAggregateOutput'
    _avg: 'WhatsappTemplateAvgAggregateOutput'
    _min: 'WhatsappTemplateMinAggregateOutput'
    _max: 'WhatsappTemplateMaxAggregateOutput'
    _count: 'WhatsappTemplateCountAggregateOutput'


class WhatsappTemplateAvgAggregateOutput(TypedDict, total=False):
    """WhatsappTemplate output for aggregating averages"""


class WhatsappTemplateSumAggregateOutput(TypedDict, total=False):
    """WhatsappTemplate output for aggregating sums"""


class WhatsappTemplateScalarAggregateOutput(TypedDict, total=False):
    """WhatsappTemplate output including scalar fields"""
    id: _str
    name: _str
    language: _str
    status: _str
    category: _str
    components: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    whatsappNumberId: _str


WhatsappTemplateMinAggregateOutput = WhatsappTemplateScalarAggregateOutput
WhatsappTemplateMaxAggregateOutput = WhatsappTemplateScalarAggregateOutput


class WhatsappTemplateMaxAggregateInput(TypedDict, total=False):
    """WhatsappTemplate input for aggregating by max"""
    id: bool
    name: bool
    language: bool
    status: bool
    category: bool
    components: bool
    createdAt: bool
    updatedAt: bool
    whatsappNumberId: bool


class WhatsappTemplateMinAggregateInput(TypedDict, total=False):
    """WhatsappTemplate input for aggregating by min"""
    id: bool
    name: bool
    language: bool
    status: bool
    category: bool
    components: bool
    createdAt: bool
    updatedAt: bool
    whatsappNumberId: bool


class WhatsappTemplateNumberAggregateInput(TypedDict, total=False):
    """WhatsappTemplate input for aggregating numbers"""


WhatsappTemplateAvgAggregateInput = WhatsappTemplateNumberAggregateInput
WhatsappTemplateSumAggregateInput = WhatsappTemplateNumberAggregateInput


WhatsappTemplateCountAggregateInput = TypedDict(
    'WhatsappTemplateCountAggregateInput',
    {
        'id': bool,
        'name': bool,
        'language': bool,
        'status': bool,
        'category': bool,
        'components': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'whatsappNumberId': bool,
        '_all': bool,
    },
    total=False,
)

WhatsappTemplateCountAggregateOutput = TypedDict(
    'WhatsappTemplateCountAggregateOutput',
    {
        'id': int,
        'name': int,
        'language': int,
        'status': int,
        'category': int,
        'components': int,
        'createdAt': int,
        'updatedAt': int,
        'whatsappNumberId': int,
        '_all': int,
    },
    total=False,
)


WhatsappTemplateKeys = Literal[
    'id',
    'name',
    'language',
    'status',
    'category',
    'components',
    'createdAt',
    'updatedAt',
    'whatsappNumberId',
    'whatsappNumber',
    'messages',
]
WhatsappTemplateScalarFieldKeys = Literal[
    'id',
    'name',
    'language',
    'status',
    'category',
    'components',
    'createdAt',
    'updatedAt',
    'whatsappNumberId',
]
WhatsappTemplateScalarFieldKeysT = TypeVar('WhatsappTemplateScalarFieldKeysT', bound=WhatsappTemplateScalarFieldKeys)

WhatsappTemplateRelationalFieldKeys = Literal[
        'whatsappNumber',
        'messages',
    ]

# Lead types

class LeadOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Lead create method"""
    id: _str
    firstName: Optional[_str]
    lastName: Optional[_str]
    email: Optional[_str]
    phoneNumber: Optional[_str]
    facebookUserId: Optional[_str]
    status: 'enums.LeadStatus'
    consentGiven: _bool
    consentTimestamp: Optional[datetime.datetime]
    consentType: Optional['enums.ConsentType']
    lastInteraction: Optional[datetime.datetime]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    userId: _str
    user: 'UserCreateNestedWithoutRelationsInput'
    facebookPageId: Optional[_str]
    facebookPage: 'FacebookPageCreateNestedWithoutRelationsInput'
    tags: 'LeadTagCreateManyNestedWithoutRelationsInput'
    messages: 'MessageCreateManyNestedWithoutRelationsInput'


class LeadCreateInput(LeadOptionalCreateInput):
    """Required arguments to the Lead create method"""
    source: 'enums.LeadSource'


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class LeadOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Lead create method, without relations"""
    id: _str
    firstName: Optional[_str]
    lastName: Optional[_str]
    email: Optional[_str]
    phoneNumber: Optional[_str]
    facebookUserId: Optional[_str]
    status: 'enums.LeadStatus'
    consentGiven: _bool
    consentTimestamp: Optional[datetime.datetime]
    consentType: Optional['enums.ConsentType']
    lastInteraction: Optional[datetime.datetime]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    userId: _str
    facebookPageId: Optional[_str]


class LeadCreateWithoutRelationsInput(LeadOptionalCreateWithoutRelationsInput):
    """Required arguments to the Lead create method, without relations"""
    source: 'enums.LeadSource'

class LeadConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'LeadCreateWithoutRelationsInput'
    where: 'LeadWhereUniqueInput'

class LeadCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'LeadCreateWithoutRelationsInput'
    connect: 'LeadWhereUniqueInput'
    connect_or_create: 'LeadConnectOrCreateWithoutRelationsInput'


class LeadCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['LeadCreateWithoutRelationsInput', List['LeadCreateWithoutRelationsInput']]
    connect: Union['LeadWhereUniqueInput', List['LeadWhereUniqueInput']]
    connect_or_create: Union['LeadConnectOrCreateWithoutRelationsInput', List['LeadConnectOrCreateWithoutRelationsInput']]

_LeadWhereUnique_id_Input = TypedDict(
    '_LeadWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

LeadWhereUniqueInput = _LeadWhereUnique_id_Input


class LeadUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    firstName: Optional[_str]
    lastName: Optional[_str]
    email: Optional[_str]
    phoneNumber: Optional[_str]
    facebookUserId: Optional[_str]
    source: 'enums.LeadSource'
    status: 'enums.LeadStatus'
    consentGiven: _bool
    consentTimestamp: Optional[datetime.datetime]
    consentType: Optional['enums.ConsentType']
    lastInteraction: Optional[datetime.datetime]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    user: 'UserUpdateOneWithoutRelationsInput'
    facebookPage: 'FacebookPageUpdateOneWithoutRelationsInput'
    tags: 'LeadTagUpdateManyWithoutRelationsInput'
    messages: 'MessageUpdateManyWithoutRelationsInput'


class LeadUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    firstName: Optional[_str]
    lastName: Optional[_str]
    email: Optional[_str]
    phoneNumber: Optional[_str]
    facebookUserId: Optional[_str]
    source: 'enums.LeadSource'
    status: 'enums.LeadStatus'
    consentGiven: _bool
    consentTimestamp: Optional[datetime.datetime]
    consentType: Optional['enums.ConsentType']
    lastInteraction: Optional[datetime.datetime]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class LeadUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['LeadCreateWithoutRelationsInput']
    connect: List['LeadWhereUniqueInput']
    connect_or_create: List['LeadConnectOrCreateWithoutRelationsInput']
    set: List['LeadWhereUniqueInput']
    disconnect: List['LeadWhereUniqueInput']
    delete: List['LeadWhereUniqueInput']

    # TODO
    # update: List['LeadUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['LeadUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['LeadScalarWhereInput']
    # upsert: List['LeadUpserteWithWhereUniqueWithoutRelationsInput']


class LeadUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'LeadCreateWithoutRelationsInput'
    connect: 'LeadWhereUniqueInput'
    connect_or_create: 'LeadConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'LeadUpdateInput'
    # upsert: 'LeadUpsertWithoutRelationsInput'


class LeadUpsertInput(TypedDict):
    create: 'LeadCreateInput'
    update: 'LeadUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Lead_id_OrderByInput = TypedDict(
    '_Lead_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Lead_firstName_OrderByInput = TypedDict(
    '_Lead_firstName_OrderByInput',
    {
        'firstName': 'SortOrder',
    },
    total=True
)

_Lead_lastName_OrderByInput = TypedDict(
    '_Lead_lastName_OrderByInput',
    {
        'lastName': 'SortOrder',
    },
    total=True
)

_Lead_email_OrderByInput = TypedDict(
    '_Lead_email_OrderByInput',
    {
        'email': 'SortOrder',
    },
    total=True
)

_Lead_phoneNumber_OrderByInput = TypedDict(
    '_Lead_phoneNumber_OrderByInput',
    {
        'phoneNumber': 'SortOrder',
    },
    total=True
)

_Lead_facebookUserId_OrderByInput = TypedDict(
    '_Lead_facebookUserId_OrderByInput',
    {
        'facebookUserId': 'SortOrder',
    },
    total=True
)

_Lead_source_OrderByInput = TypedDict(
    '_Lead_source_OrderByInput',
    {
        'source': 'SortOrder',
    },
    total=True
)

_Lead_status_OrderByInput = TypedDict(
    '_Lead_status_OrderByInput',
    {
        'status': 'SortOrder',
    },
    total=True
)

_Lead_consentGiven_OrderByInput = TypedDict(
    '_Lead_consentGiven_OrderByInput',
    {
        'consentGiven': 'SortOrder',
    },
    total=True
)

_Lead_consentTimestamp_OrderByInput = TypedDict(
    '_Lead_consentTimestamp_OrderByInput',
    {
        'consentTimestamp': 'SortOrder',
    },
    total=True
)

_Lead_consentType_OrderByInput = TypedDict(
    '_Lead_consentType_OrderByInput',
    {
        'consentType': 'SortOrder',
    },
    total=True
)

_Lead_lastInteraction_OrderByInput = TypedDict(
    '_Lead_lastInteraction_OrderByInput',
    {
        'lastInteraction': 'SortOrder',
    },
    total=True
)

_Lead_createdAt_OrderByInput = TypedDict(
    '_Lead_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Lead_updatedAt_OrderByInput = TypedDict(
    '_Lead_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Lead_userId_OrderByInput = TypedDict(
    '_Lead_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_Lead_facebookPageId_OrderByInput = TypedDict(
    '_Lead_facebookPageId_OrderByInput',
    {
        'facebookPageId': 'SortOrder',
    },
    total=True
)

_Lead_RelevanceInner = TypedDict(
    '_Lead_RelevanceInner',
    {
        'fields': 'List[LeadScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Lead_RelevanceOrderByInput = TypedDict(
    '_Lead_RelevanceOrderByInput',
    {
        '_relevance': '_Lead_RelevanceInner',
    },
    total=True
)

LeadOrderByInput = Union[
    '_Lead_id_OrderByInput',
    '_Lead_firstName_OrderByInput',
    '_Lead_lastName_OrderByInput',
    '_Lead_email_OrderByInput',
    '_Lead_phoneNumber_OrderByInput',
    '_Lead_facebookUserId_OrderByInput',
    '_Lead_source_OrderByInput',
    '_Lead_status_OrderByInput',
    '_Lead_consentGiven_OrderByInput',
    '_Lead_consentTimestamp_OrderByInput',
    '_Lead_consentType_OrderByInput',
    '_Lead_lastInteraction_OrderByInput',
    '_Lead_createdAt_OrderByInput',
    '_Lead_updatedAt_OrderByInput',
    '_Lead_userId_OrderByInput',
    '_Lead_facebookPageId_OrderByInput',
    '_Lead_RelevanceOrderByInput',
]



# recursive Lead types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

LeadRelationFilter = TypedDict(
    'LeadRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class LeadListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class LeadInclude(TypedDict, total=False):
    """Lead relational arguments"""
    user: Union[bool, 'UserArgsFromLead']
    facebookPage: Union[bool, 'FacebookPageArgsFromLead']
    tags: Union[bool, 'FindManyLeadTagArgsFromLead']
    messages: Union[bool, 'FindManyMessageArgsFromLead']


    

class UserIncludeFromLead(TypedDict, total=False):
    """Relational arguments for Lead"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromLeadRecursive1']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromLeadRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromLeadRecursive1']
    campaigns: Union[bool, 'FindManyCampaignArgsFromLeadRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromLeadRecursive1']


class UserIncludeFromLeadRecursive1(TypedDict, total=False):
    """Relational arguments for Lead"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromLeadRecursive2']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromLeadRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromLeadRecursive2']
    campaigns: Union[bool, 'FindManyCampaignArgsFromLeadRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromLeadRecursive2']


class UserIncludeFromLeadRecursive2(TypedDict, total=False):
    """Relational arguments for Lead"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromLeadRecursive3']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromLeadRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromLeadRecursive3']
    campaigns: Union[bool, 'FindManyCampaignArgsFromLeadRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromLeadRecursive3']


class UserIncludeFromLeadRecursive3(TypedDict, total=False):
    """Relational arguments for Lead"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromLeadRecursive4']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromLeadRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromLeadRecursive4']
    campaigns: Union[bool, 'FindManyCampaignArgsFromLeadRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromLeadRecursive4']


class UserIncludeFromLeadRecursive4(TypedDict, total=False):
    """Relational arguments for Lead"""

    

class UserArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    
    

class FindManyUserArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class FacebookPageIncludeFromLead(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive1']
    posts: Union[bool, 'FindManyFacebookPostArgsFromLeadRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromLeadRecursive1']


class FacebookPageIncludeFromLeadRecursive1(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive2']
    posts: Union[bool, 'FindManyFacebookPostArgsFromLeadRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromLeadRecursive2']


class FacebookPageIncludeFromLeadRecursive2(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive3']
    posts: Union[bool, 'FindManyFacebookPostArgsFromLeadRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromLeadRecursive3']


class FacebookPageIncludeFromLeadRecursive3(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive4']
    posts: Union[bool, 'FindManyFacebookPostArgsFromLeadRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromLeadRecursive4']


class FacebookPageIncludeFromLeadRecursive4(TypedDict, total=False):
    """Relational arguments for Lead"""

    

class FacebookPageArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FacebookPageArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FacebookPageArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FacebookPageArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FacebookPageArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    
    

class FindManyFacebookPageArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FindManyFacebookPageArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FindManyFacebookPageArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FindManyFacebookPageArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FindManyFacebookPageArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    
    

class FacebookPostIncludeFromLead(TypedDict, total=False):
    """Relational arguments for Lead"""
    facebookPage: Union[bool, 'FacebookPageArgsFromLeadRecursive1']


class FacebookPostIncludeFromLeadRecursive1(TypedDict, total=False):
    """Relational arguments for Lead"""
    facebookPage: Union[bool, 'FacebookPageArgsFromLeadRecursive2']


class FacebookPostIncludeFromLeadRecursive2(TypedDict, total=False):
    """Relational arguments for Lead"""
    facebookPage: Union[bool, 'FacebookPageArgsFromLeadRecursive3']


class FacebookPostIncludeFromLeadRecursive3(TypedDict, total=False):
    """Relational arguments for Lead"""
    facebookPage: Union[bool, 'FacebookPageArgsFromLeadRecursive4']


class FacebookPostIncludeFromLeadRecursive4(TypedDict, total=False):
    """Relational arguments for Lead"""

    

class FacebookPostArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FacebookPostArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FacebookPostArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FacebookPostArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FacebookPostArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    
    

class FindManyFacebookPostArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FindManyFacebookPostArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FindManyFacebookPostArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FindManyFacebookPostArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FindManyFacebookPostArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    
    

class WhatsappNumberIncludeFromLead(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive1']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromLeadRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromLeadRecursive1']


class WhatsappNumberIncludeFromLeadRecursive1(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive2']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromLeadRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromLeadRecursive2']


class WhatsappNumberIncludeFromLeadRecursive2(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive3']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromLeadRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromLeadRecursive3']


class WhatsappNumberIncludeFromLeadRecursive3(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive4']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromLeadRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromLeadRecursive4']


class WhatsappNumberIncludeFromLeadRecursive4(TypedDict, total=False):
    """Relational arguments for Lead"""

    

class WhatsappNumberArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class WhatsappNumberArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class WhatsappNumberArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class WhatsappNumberArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class WhatsappNumberArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    
    

class FindManyWhatsappNumberArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class FindManyWhatsappNumberArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class FindManyWhatsappNumberArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class FindManyWhatsappNumberArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class FindManyWhatsappNumberArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    
    

class WhatsappTemplateIncludeFromLead(TypedDict, total=False):
    """Relational arguments for Lead"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromLeadRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromLeadRecursive1']


class WhatsappTemplateIncludeFromLeadRecursive1(TypedDict, total=False):
    """Relational arguments for Lead"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromLeadRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromLeadRecursive2']


class WhatsappTemplateIncludeFromLeadRecursive2(TypedDict, total=False):
    """Relational arguments for Lead"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromLeadRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromLeadRecursive3']


class WhatsappTemplateIncludeFromLeadRecursive3(TypedDict, total=False):
    """Relational arguments for Lead"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromLeadRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromLeadRecursive4']


class WhatsappTemplateIncludeFromLeadRecursive4(TypedDict, total=False):
    """Relational arguments for Lead"""

    

class WhatsappTemplateArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class WhatsappTemplateArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class WhatsappTemplateArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class WhatsappTemplateArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class WhatsappTemplateArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    
    

class FindManyWhatsappTemplateArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class FindManyWhatsappTemplateArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class FindManyWhatsappTemplateArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class FindManyWhatsappTemplateArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class FindManyWhatsappTemplateArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    
    

class LeadIncludeFromLead(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive1']
    facebookPage: Union[bool, 'FacebookPageArgsFromLeadRecursive1']
    tags: Union[bool, 'FindManyLeadTagArgsFromLeadRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromLeadRecursive1']


class LeadIncludeFromLeadRecursive1(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive2']
    facebookPage: Union[bool, 'FacebookPageArgsFromLeadRecursive2']
    tags: Union[bool, 'FindManyLeadTagArgsFromLeadRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromLeadRecursive2']


class LeadIncludeFromLeadRecursive2(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive3']
    facebookPage: Union[bool, 'FacebookPageArgsFromLeadRecursive3']
    tags: Union[bool, 'FindManyLeadTagArgsFromLeadRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromLeadRecursive3']


class LeadIncludeFromLeadRecursive3(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive4']
    facebookPage: Union[bool, 'FacebookPageArgsFromLeadRecursive4']
    tags: Union[bool, 'FindManyLeadTagArgsFromLeadRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromLeadRecursive4']


class LeadIncludeFromLeadRecursive4(TypedDict, total=False):
    """Relational arguments for Lead"""

    

class LeadArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'LeadIncludeFromLeadRecursive1'


class LeadArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'LeadIncludeFromLeadRecursive2'


class LeadArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'LeadIncludeFromLeadRecursive3'


class LeadArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'LeadIncludeFromLeadRecursive4'


class LeadArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    
    

class FindManyLeadArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive1'


class FindManyLeadArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive2'


class FindManyLeadArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive3'


class FindManyLeadArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive4'


class FindManyLeadArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    
    

class TagIncludeFromLead(TypedDict, total=False):
    """Relational arguments for Lead"""
    leads: Union[bool, 'FindManyLeadTagArgsFromLeadRecursive1']


class TagIncludeFromLeadRecursive1(TypedDict, total=False):
    """Relational arguments for Lead"""
    leads: Union[bool, 'FindManyLeadTagArgsFromLeadRecursive2']


class TagIncludeFromLeadRecursive2(TypedDict, total=False):
    """Relational arguments for Lead"""
    leads: Union[bool, 'FindManyLeadTagArgsFromLeadRecursive3']


class TagIncludeFromLeadRecursive3(TypedDict, total=False):
    """Relational arguments for Lead"""
    leads: Union[bool, 'FindManyLeadTagArgsFromLeadRecursive4']


class TagIncludeFromLeadRecursive4(TypedDict, total=False):
    """Relational arguments for Lead"""

    

class TagArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'TagIncludeFromTagRecursive1'


class TagArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'TagIncludeFromTagRecursive2'


class TagArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'TagIncludeFromTagRecursive3'


class TagArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'TagIncludeFromTagRecursive4'


class TagArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    
    

class FindManyTagArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive1'


class FindManyTagArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive2'


class FindManyTagArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive3'


class FindManyTagArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive4'


class FindManyTagArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    
    

class LeadTagIncludeFromLead(TypedDict, total=False):
    """Relational arguments for Lead"""
    lead: Union[bool, 'LeadArgsFromLeadRecursive1']
    tag: Union[bool, 'TagArgsFromLeadRecursive1']


class LeadTagIncludeFromLeadRecursive1(TypedDict, total=False):
    """Relational arguments for Lead"""
    lead: Union[bool, 'LeadArgsFromLeadRecursive2']
    tag: Union[bool, 'TagArgsFromLeadRecursive2']


class LeadTagIncludeFromLeadRecursive2(TypedDict, total=False):
    """Relational arguments for Lead"""
    lead: Union[bool, 'LeadArgsFromLeadRecursive3']
    tag: Union[bool, 'TagArgsFromLeadRecursive3']


class LeadTagIncludeFromLeadRecursive3(TypedDict, total=False):
    """Relational arguments for Lead"""
    lead: Union[bool, 'LeadArgsFromLeadRecursive4']
    tag: Union[bool, 'TagArgsFromLeadRecursive4']


class LeadTagIncludeFromLeadRecursive4(TypedDict, total=False):
    """Relational arguments for Lead"""

    

class LeadTagArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class LeadTagArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class LeadTagArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class LeadTagArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class LeadTagArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    
    

class FindManyLeadTagArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class FindManyLeadTagArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class FindManyLeadTagArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class FindManyLeadTagArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class FindManyLeadTagArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    
    

class MessageIncludeFromLead(TypedDict, total=False):
    """Relational arguments for Lead"""
    lead: Union[bool, 'LeadArgsFromLeadRecursive1']
    campaign: Union[bool, 'CampaignArgsFromLeadRecursive1']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromLeadRecursive1']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromLeadRecursive1']


class MessageIncludeFromLeadRecursive1(TypedDict, total=False):
    """Relational arguments for Lead"""
    lead: Union[bool, 'LeadArgsFromLeadRecursive2']
    campaign: Union[bool, 'CampaignArgsFromLeadRecursive2']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromLeadRecursive2']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromLeadRecursive2']


class MessageIncludeFromLeadRecursive2(TypedDict, total=False):
    """Relational arguments for Lead"""
    lead: Union[bool, 'LeadArgsFromLeadRecursive3']
    campaign: Union[bool, 'CampaignArgsFromLeadRecursive3']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromLeadRecursive3']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromLeadRecursive3']


class MessageIncludeFromLeadRecursive3(TypedDict, total=False):
    """Relational arguments for Lead"""
    lead: Union[bool, 'LeadArgsFromLeadRecursive4']
    campaign: Union[bool, 'CampaignArgsFromLeadRecursive4']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromLeadRecursive4']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromLeadRecursive4']


class MessageIncludeFromLeadRecursive4(TypedDict, total=False):
    """Relational arguments for Lead"""

    

class MessageArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    
    

class FindManyMessageArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class CampaignIncludeFromLead(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromLeadRecursive1']


class CampaignIncludeFromLeadRecursive1(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromLeadRecursive2']


class CampaignIncludeFromLeadRecursive2(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromLeadRecursive3']


class CampaignIncludeFromLeadRecursive3(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromLeadRecursive4']


class CampaignIncludeFromLeadRecursive4(TypedDict, total=False):
    """Relational arguments for Lead"""

    

class CampaignArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'CampaignIncludeFromCampaignRecursive1'


class CampaignArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'CampaignIncludeFromCampaignRecursive2'


class CampaignArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'CampaignIncludeFromCampaignRecursive3'


class CampaignArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'CampaignIncludeFromCampaignRecursive4'


class CampaignArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    
    

class FindManyCampaignArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive1'


class FindManyCampaignArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive2'


class FindManyCampaignArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive3'


class FindManyCampaignArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive4'


class FindManyCampaignArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    
    

class AuditLogIncludeFromLead(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive1']


class AuditLogIncludeFromLeadRecursive1(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive2']


class AuditLogIncludeFromLeadRecursive2(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive3']


class AuditLogIncludeFromLeadRecursive3(TypedDict, total=False):
    """Relational arguments for Lead"""
    user: Union[bool, 'UserArgsFromLeadRecursive4']


class AuditLogIncludeFromLeadRecursive4(TypedDict, total=False):
    """Relational arguments for Lead"""

    

class AuditLogArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    
    

class FindManyAuditLogArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    
    

class ApiKeyIncludeFromLead(TypedDict, total=False):
    """Relational arguments for Lead"""


class ApiKeyIncludeFromLeadRecursive1(TypedDict, total=False):
    """Relational arguments for Lead"""


class ApiKeyIncludeFromLeadRecursive2(TypedDict, total=False):
    """Relational arguments for Lead"""


class ApiKeyIncludeFromLeadRecursive3(TypedDict, total=False):
    """Relational arguments for Lead"""


class ApiKeyIncludeFromLeadRecursive4(TypedDict, total=False):
    """Relational arguments for Lead"""

    

class ApiKeyArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class ApiKeyArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class ApiKeyArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class ApiKeyArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class ApiKeyArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    
    

class FindManyApiKeyArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class FindManyApiKeyArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class FindManyApiKeyArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class FindManyApiKeyArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class FindManyApiKeyArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    
    

class RateLimitIncludeFromLead(TypedDict, total=False):
    """Relational arguments for Lead"""


class RateLimitIncludeFromLeadRecursive1(TypedDict, total=False):
    """Relational arguments for Lead"""


class RateLimitIncludeFromLeadRecursive2(TypedDict, total=False):
    """Relational arguments for Lead"""


class RateLimitIncludeFromLeadRecursive3(TypedDict, total=False):
    """Relational arguments for Lead"""


class RateLimitIncludeFromLeadRecursive4(TypedDict, total=False):
    """Relational arguments for Lead"""

    

class RateLimitArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class RateLimitArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class RateLimitArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class RateLimitArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class RateLimitArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    
    

class FindManyRateLimitArgsFromLead(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class FindManyRateLimitArgsFromLeadRecursive1(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class FindManyRateLimitArgsFromLeadRecursive2(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class FindManyRateLimitArgsFromLeadRecursive3(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class FindManyRateLimitArgsFromLeadRecursive4(TypedDict, total=False):
    """Arguments for Lead"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    


FindManyLeadArgs = FindManyLeadArgsFromLead
FindFirstLeadArgs = FindManyLeadArgsFromLead


    

class LeadWhereInput(TypedDict, total=False):
    """Lead arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    firstName: Union[None, _str, 'types.StringFilter']
    lastName: Union[None, _str, 'types.StringFilter']
    email: Union[None, _str, 'types.StringFilter']
    phoneNumber: Union[None, _str, 'types.StringFilter']
    facebookUserId: Union[None, _str, 'types.StringFilter']
    source: 'enums.LeadSource'
    status: 'enums.LeadStatus'
    consentGiven: Union[_bool, 'types.BooleanFilter']
    consentTimestamp: Union[None, datetime.datetime, 'types.DateTimeFilter']
    consentType: 'enums.ConsentType'
    lastInteraction: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    facebookPageId: Union[None, _str, 'types.StringFilter']
    facebookPage: 'FacebookPageRelationFilter'
    tags: 'LeadTagListRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['LeadWhereInputRecursive1', List['LeadWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['LeadWhereInputRecursive1']
    OR: List['LeadWhereInputRecursive1']
    NOT: List['LeadWhereInputRecursive1']


class LeadWhereInputRecursive1(TypedDict, total=False):
    """Lead arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    firstName: Union[None, _str, 'types.StringFilter']
    lastName: Union[None, _str, 'types.StringFilter']
    email: Union[None, _str, 'types.StringFilter']
    phoneNumber: Union[None, _str, 'types.StringFilter']
    facebookUserId: Union[None, _str, 'types.StringFilter']
    source: 'enums.LeadSource'
    status: 'enums.LeadStatus'
    consentGiven: Union[_bool, 'types.BooleanFilter']
    consentTimestamp: Union[None, datetime.datetime, 'types.DateTimeFilter']
    consentType: 'enums.ConsentType'
    lastInteraction: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    facebookPageId: Union[None, _str, 'types.StringFilter']
    facebookPage: 'FacebookPageRelationFilter'
    tags: 'LeadTagListRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['LeadWhereInputRecursive2', List['LeadWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['LeadWhereInputRecursive2']
    OR: List['LeadWhereInputRecursive2']
    NOT: List['LeadWhereInputRecursive2']


class LeadWhereInputRecursive2(TypedDict, total=False):
    """Lead arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    firstName: Union[None, _str, 'types.StringFilter']
    lastName: Union[None, _str, 'types.StringFilter']
    email: Union[None, _str, 'types.StringFilter']
    phoneNumber: Union[None, _str, 'types.StringFilter']
    facebookUserId: Union[None, _str, 'types.StringFilter']
    source: 'enums.LeadSource'
    status: 'enums.LeadStatus'
    consentGiven: Union[_bool, 'types.BooleanFilter']
    consentTimestamp: Union[None, datetime.datetime, 'types.DateTimeFilter']
    consentType: 'enums.ConsentType'
    lastInteraction: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    facebookPageId: Union[None, _str, 'types.StringFilter']
    facebookPage: 'FacebookPageRelationFilter'
    tags: 'LeadTagListRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['LeadWhereInputRecursive3', List['LeadWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['LeadWhereInputRecursive3']
    OR: List['LeadWhereInputRecursive3']
    NOT: List['LeadWhereInputRecursive3']


class LeadWhereInputRecursive3(TypedDict, total=False):
    """Lead arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    firstName: Union[None, _str, 'types.StringFilter']
    lastName: Union[None, _str, 'types.StringFilter']
    email: Union[None, _str, 'types.StringFilter']
    phoneNumber: Union[None, _str, 'types.StringFilter']
    facebookUserId: Union[None, _str, 'types.StringFilter']
    source: 'enums.LeadSource'
    status: 'enums.LeadStatus'
    consentGiven: Union[_bool, 'types.BooleanFilter']
    consentTimestamp: Union[None, datetime.datetime, 'types.DateTimeFilter']
    consentType: 'enums.ConsentType'
    lastInteraction: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    facebookPageId: Union[None, _str, 'types.StringFilter']
    facebookPage: 'FacebookPageRelationFilter'
    tags: 'LeadTagListRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['LeadWhereInputRecursive4', List['LeadWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['LeadWhereInputRecursive4']
    OR: List['LeadWhereInputRecursive4']
    NOT: List['LeadWhereInputRecursive4']


class LeadWhereInputRecursive4(TypedDict, total=False):
    """Lead arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    firstName: Union[None, _str, 'types.StringFilter']
    lastName: Union[None, _str, 'types.StringFilter']
    email: Union[None, _str, 'types.StringFilter']
    phoneNumber: Union[None, _str, 'types.StringFilter']
    facebookUserId: Union[None, _str, 'types.StringFilter']
    source: 'enums.LeadSource'
    status: 'enums.LeadStatus'
    consentGiven: Union[_bool, 'types.BooleanFilter']
    consentTimestamp: Union[None, datetime.datetime, 'types.DateTimeFilter']
    consentType: 'enums.ConsentType'
    lastInteraction: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    facebookPageId: Union[None, _str, 'types.StringFilter']
    facebookPage: 'FacebookPageRelationFilter'
    tags: 'LeadTagListRelationFilter'
    messages: 'MessageListRelationFilter'



# aggregate Lead types


    

class LeadScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Lead arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    firstName: Union[_str, 'types.StringWithAggregatesFilter']
    lastName: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    phoneNumber: Union[_str, 'types.StringWithAggregatesFilter']
    facebookUserId: Union[_str, 'types.StringWithAggregatesFilter']
    source: 'enums.LeadSource'
    status: 'enums.LeadStatus'
    consentGiven: Union[_bool, 'types.BooleanWithAggregatesFilter']
    consentTimestamp: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    consentType: 'enums.ConsentType'
    lastInteraction: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    facebookPageId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['LeadScalarWhereWithAggregatesInputRecursive1']
    OR: List['LeadScalarWhereWithAggregatesInputRecursive1']
    NOT: List['LeadScalarWhereWithAggregatesInputRecursive1']


class LeadScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Lead arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    firstName: Union[_str, 'types.StringWithAggregatesFilter']
    lastName: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    phoneNumber: Union[_str, 'types.StringWithAggregatesFilter']
    facebookUserId: Union[_str, 'types.StringWithAggregatesFilter']
    source: 'enums.LeadSource'
    status: 'enums.LeadStatus'
    consentGiven: Union[_bool, 'types.BooleanWithAggregatesFilter']
    consentTimestamp: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    consentType: 'enums.ConsentType'
    lastInteraction: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    facebookPageId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['LeadScalarWhereWithAggregatesInputRecursive2']
    OR: List['LeadScalarWhereWithAggregatesInputRecursive2']
    NOT: List['LeadScalarWhereWithAggregatesInputRecursive2']


class LeadScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Lead arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    firstName: Union[_str, 'types.StringWithAggregatesFilter']
    lastName: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    phoneNumber: Union[_str, 'types.StringWithAggregatesFilter']
    facebookUserId: Union[_str, 'types.StringWithAggregatesFilter']
    source: 'enums.LeadSource'
    status: 'enums.LeadStatus'
    consentGiven: Union[_bool, 'types.BooleanWithAggregatesFilter']
    consentTimestamp: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    consentType: 'enums.ConsentType'
    lastInteraction: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    facebookPageId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['LeadScalarWhereWithAggregatesInputRecursive3']
    OR: List['LeadScalarWhereWithAggregatesInputRecursive3']
    NOT: List['LeadScalarWhereWithAggregatesInputRecursive3']


class LeadScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Lead arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    firstName: Union[_str, 'types.StringWithAggregatesFilter']
    lastName: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    phoneNumber: Union[_str, 'types.StringWithAggregatesFilter']
    facebookUserId: Union[_str, 'types.StringWithAggregatesFilter']
    source: 'enums.LeadSource'
    status: 'enums.LeadStatus'
    consentGiven: Union[_bool, 'types.BooleanWithAggregatesFilter']
    consentTimestamp: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    consentType: 'enums.ConsentType'
    lastInteraction: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    facebookPageId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['LeadScalarWhereWithAggregatesInputRecursive4']
    OR: List['LeadScalarWhereWithAggregatesInputRecursive4']
    NOT: List['LeadScalarWhereWithAggregatesInputRecursive4']


class LeadScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Lead arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    firstName: Union[_str, 'types.StringWithAggregatesFilter']
    lastName: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    phoneNumber: Union[_str, 'types.StringWithAggregatesFilter']
    facebookUserId: Union[_str, 'types.StringWithAggregatesFilter']
    source: 'enums.LeadSource'
    status: 'enums.LeadStatus'
    consentGiven: Union[_bool, 'types.BooleanWithAggregatesFilter']
    consentTimestamp: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    consentType: 'enums.ConsentType'
    lastInteraction: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    facebookPageId: Union[_str, 'types.StringWithAggregatesFilter']



class LeadGroupByOutput(TypedDict, total=False):
    id: _str
    firstName: _str
    lastName: _str
    email: _str
    phoneNumber: _str
    facebookUserId: _str
    source: 'enums.LeadSource'
    status: 'enums.LeadStatus'
    consentGiven: _bool
    consentTimestamp: datetime.datetime
    consentType: 'enums.ConsentType'
    lastInteraction: datetime.datetime
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    userId: _str
    facebookPageId: _str
    _sum: 'LeadSumAggregateOutput'
    _avg: 'LeadAvgAggregateOutput'
    _min: 'LeadMinAggregateOutput'
    _max: 'LeadMaxAggregateOutput'
    _count: 'LeadCountAggregateOutput'


class LeadAvgAggregateOutput(TypedDict, total=False):
    """Lead output for aggregating averages"""


class LeadSumAggregateOutput(TypedDict, total=False):
    """Lead output for aggregating sums"""


class LeadScalarAggregateOutput(TypedDict, total=False):
    """Lead output including scalar fields"""
    id: _str
    firstName: _str
    lastName: _str
    email: _str
    phoneNumber: _str
    facebookUserId: _str
    source: 'enums.LeadSource'
    status: 'enums.LeadStatus'
    consentGiven: _bool
    consentTimestamp: datetime.datetime
    consentType: 'enums.ConsentType'
    lastInteraction: datetime.datetime
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    userId: _str
    facebookPageId: _str


LeadMinAggregateOutput = LeadScalarAggregateOutput
LeadMaxAggregateOutput = LeadScalarAggregateOutput


class LeadMaxAggregateInput(TypedDict, total=False):
    """Lead input for aggregating by max"""
    id: bool
    firstName: bool
    lastName: bool
    email: bool
    phoneNumber: bool
    facebookUserId: bool
    source: bool
    status: bool
    consentGiven: bool
    consentTimestamp: bool
    consentType: bool
    lastInteraction: bool
    createdAt: bool
    updatedAt: bool
    userId: bool
    facebookPageId: bool


class LeadMinAggregateInput(TypedDict, total=False):
    """Lead input for aggregating by min"""
    id: bool
    firstName: bool
    lastName: bool
    email: bool
    phoneNumber: bool
    facebookUserId: bool
    source: bool
    status: bool
    consentGiven: bool
    consentTimestamp: bool
    consentType: bool
    lastInteraction: bool
    createdAt: bool
    updatedAt: bool
    userId: bool
    facebookPageId: bool


class LeadNumberAggregateInput(TypedDict, total=False):
    """Lead input for aggregating numbers"""


LeadAvgAggregateInput = LeadNumberAggregateInput
LeadSumAggregateInput = LeadNumberAggregateInput


LeadCountAggregateInput = TypedDict(
    'LeadCountAggregateInput',
    {
        'id': bool,
        'firstName': bool,
        'lastName': bool,
        'email': bool,
        'phoneNumber': bool,
        'facebookUserId': bool,
        'source': bool,
        'status': bool,
        'consentGiven': bool,
        'consentTimestamp': bool,
        'consentType': bool,
        'lastInteraction': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'userId': bool,
        'facebookPageId': bool,
        '_all': bool,
    },
    total=False,
)

LeadCountAggregateOutput = TypedDict(
    'LeadCountAggregateOutput',
    {
        'id': int,
        'firstName': int,
        'lastName': int,
        'email': int,
        'phoneNumber': int,
        'facebookUserId': int,
        'source': int,
        'status': int,
        'consentGiven': int,
        'consentTimestamp': int,
        'consentType': int,
        'lastInteraction': int,
        'createdAt': int,
        'updatedAt': int,
        'userId': int,
        'facebookPageId': int,
        '_all': int,
    },
    total=False,
)


LeadKeys = Literal[
    'id',
    'firstName',
    'lastName',
    'email',
    'phoneNumber',
    'facebookUserId',
    'source',
    'status',
    'consentGiven',
    'consentTimestamp',
    'consentType',
    'lastInteraction',
    'createdAt',
    'updatedAt',
    'userId',
    'user',
    'facebookPageId',
    'facebookPage',
    'tags',
    'messages',
]
LeadScalarFieldKeys = Literal[
    'id',
    'firstName',
    'lastName',
    'email',
    'phoneNumber',
    'facebookUserId',
    'source',
    'status',
    'consentGiven',
    'consentTimestamp',
    'consentType',
    'lastInteraction',
    'createdAt',
    'updatedAt',
    'userId',
    'facebookPageId',
]
LeadScalarFieldKeysT = TypeVar('LeadScalarFieldKeysT', bound=LeadScalarFieldKeys)

LeadRelationalFieldKeys = Literal[
        'user',
        'facebookPage',
        'tags',
        'messages',
    ]

# Tag types

class TagOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Tag create method"""
    id: _str
    color: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    leads: 'LeadTagCreateManyNestedWithoutRelationsInput'


class TagCreateInput(TagOptionalCreateInput):
    """Required arguments to the Tag create method"""
    name: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class TagOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Tag create method, without relations"""
    id: _str
    color: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class TagCreateWithoutRelationsInput(TagOptionalCreateWithoutRelationsInput):
    """Required arguments to the Tag create method, without relations"""
    name: _str

class TagConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'TagCreateWithoutRelationsInput'
    where: 'TagWhereUniqueInput'

class TagCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'TagCreateWithoutRelationsInput'
    connect: 'TagWhereUniqueInput'
    connect_or_create: 'TagConnectOrCreateWithoutRelationsInput'


class TagCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['TagCreateWithoutRelationsInput', List['TagCreateWithoutRelationsInput']]
    connect: Union['TagWhereUniqueInput', List['TagWhereUniqueInput']]
    connect_or_create: Union['TagConnectOrCreateWithoutRelationsInput', List['TagConnectOrCreateWithoutRelationsInput']]

_TagWhereUnique_id_Input = TypedDict(
    '_TagWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

_TagWhereUnique_name_Input = TypedDict(
    '_TagWhereUnique_name_Input',
    {
        'name': '_str',
    },
    total=True
)

TagWhereUniqueInput = Union[
    '_TagWhereUnique_id_Input',
    '_TagWhereUnique_name_Input',
]


class TagUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    name: _str
    color: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    leads: 'LeadTagUpdateManyWithoutRelationsInput'


class TagUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    name: _str
    color: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class TagUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['TagCreateWithoutRelationsInput']
    connect: List['TagWhereUniqueInput']
    connect_or_create: List['TagConnectOrCreateWithoutRelationsInput']
    set: List['TagWhereUniqueInput']
    disconnect: List['TagWhereUniqueInput']
    delete: List['TagWhereUniqueInput']

    # TODO
    # update: List['TagUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['TagUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['TagScalarWhereInput']
    # upsert: List['TagUpserteWithWhereUniqueWithoutRelationsInput']


class TagUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'TagCreateWithoutRelationsInput'
    connect: 'TagWhereUniqueInput'
    connect_or_create: 'TagConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'TagUpdateInput'
    # upsert: 'TagUpsertWithoutRelationsInput'


class TagUpsertInput(TypedDict):
    create: 'TagCreateInput'
    update: 'TagUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Tag_id_OrderByInput = TypedDict(
    '_Tag_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Tag_name_OrderByInput = TypedDict(
    '_Tag_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_Tag_color_OrderByInput = TypedDict(
    '_Tag_color_OrderByInput',
    {
        'color': 'SortOrder',
    },
    total=True
)

_Tag_createdAt_OrderByInput = TypedDict(
    '_Tag_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Tag_updatedAt_OrderByInput = TypedDict(
    '_Tag_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Tag_RelevanceInner = TypedDict(
    '_Tag_RelevanceInner',
    {
        'fields': 'List[TagScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Tag_RelevanceOrderByInput = TypedDict(
    '_Tag_RelevanceOrderByInput',
    {
        '_relevance': '_Tag_RelevanceInner',
    },
    total=True
)

TagOrderByInput = Union[
    '_Tag_id_OrderByInput',
    '_Tag_name_OrderByInput',
    '_Tag_color_OrderByInput',
    '_Tag_createdAt_OrderByInput',
    '_Tag_updatedAt_OrderByInput',
    '_Tag_RelevanceOrderByInput',
]



# recursive Tag types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

TagRelationFilter = TypedDict(
    'TagRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class TagListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class TagInclude(TypedDict, total=False):
    """Tag relational arguments"""
    leads: Union[bool, 'FindManyLeadTagArgsFromTag']


    

class UserIncludeFromTag(TypedDict, total=False):
    """Relational arguments for Tag"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromTagRecursive1']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromTagRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromTagRecursive1']
    campaigns: Union[bool, 'FindManyCampaignArgsFromTagRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromTagRecursive1']


class UserIncludeFromTagRecursive1(TypedDict, total=False):
    """Relational arguments for Tag"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromTagRecursive2']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromTagRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromTagRecursive2']
    campaigns: Union[bool, 'FindManyCampaignArgsFromTagRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromTagRecursive2']


class UserIncludeFromTagRecursive2(TypedDict, total=False):
    """Relational arguments for Tag"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromTagRecursive3']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromTagRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromTagRecursive3']
    campaigns: Union[bool, 'FindManyCampaignArgsFromTagRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromTagRecursive3']


class UserIncludeFromTagRecursive3(TypedDict, total=False):
    """Relational arguments for Tag"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromTagRecursive4']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromTagRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromTagRecursive4']
    campaigns: Union[bool, 'FindManyCampaignArgsFromTagRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromTagRecursive4']


class UserIncludeFromTagRecursive4(TypedDict, total=False):
    """Relational arguments for Tag"""

    

class UserArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    
    

class FindManyUserArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class FacebookPageIncludeFromTag(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive1']
    posts: Union[bool, 'FindManyFacebookPostArgsFromTagRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromTagRecursive1']


class FacebookPageIncludeFromTagRecursive1(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive2']
    posts: Union[bool, 'FindManyFacebookPostArgsFromTagRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromTagRecursive2']


class FacebookPageIncludeFromTagRecursive2(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive3']
    posts: Union[bool, 'FindManyFacebookPostArgsFromTagRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromTagRecursive3']


class FacebookPageIncludeFromTagRecursive3(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive4']
    posts: Union[bool, 'FindManyFacebookPostArgsFromTagRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromTagRecursive4']


class FacebookPageIncludeFromTagRecursive4(TypedDict, total=False):
    """Relational arguments for Tag"""

    

class FacebookPageArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FacebookPageArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FacebookPageArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FacebookPageArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FacebookPageArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    
    

class FindManyFacebookPageArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FindManyFacebookPageArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FindManyFacebookPageArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FindManyFacebookPageArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FindManyFacebookPageArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    
    

class FacebookPostIncludeFromTag(TypedDict, total=False):
    """Relational arguments for Tag"""
    facebookPage: Union[bool, 'FacebookPageArgsFromTagRecursive1']


class FacebookPostIncludeFromTagRecursive1(TypedDict, total=False):
    """Relational arguments for Tag"""
    facebookPage: Union[bool, 'FacebookPageArgsFromTagRecursive2']


class FacebookPostIncludeFromTagRecursive2(TypedDict, total=False):
    """Relational arguments for Tag"""
    facebookPage: Union[bool, 'FacebookPageArgsFromTagRecursive3']


class FacebookPostIncludeFromTagRecursive3(TypedDict, total=False):
    """Relational arguments for Tag"""
    facebookPage: Union[bool, 'FacebookPageArgsFromTagRecursive4']


class FacebookPostIncludeFromTagRecursive4(TypedDict, total=False):
    """Relational arguments for Tag"""

    

class FacebookPostArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FacebookPostArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FacebookPostArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FacebookPostArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FacebookPostArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    
    

class FindManyFacebookPostArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FindManyFacebookPostArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FindManyFacebookPostArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FindManyFacebookPostArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FindManyFacebookPostArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    
    

class WhatsappNumberIncludeFromTag(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive1']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromTagRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromTagRecursive1']


class WhatsappNumberIncludeFromTagRecursive1(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive2']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromTagRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromTagRecursive2']


class WhatsappNumberIncludeFromTagRecursive2(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive3']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromTagRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromTagRecursive3']


class WhatsappNumberIncludeFromTagRecursive3(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive4']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromTagRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromTagRecursive4']


class WhatsappNumberIncludeFromTagRecursive4(TypedDict, total=False):
    """Relational arguments for Tag"""

    

class WhatsappNumberArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class WhatsappNumberArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class WhatsappNumberArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class WhatsappNumberArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class WhatsappNumberArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    
    

class FindManyWhatsappNumberArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class FindManyWhatsappNumberArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class FindManyWhatsappNumberArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class FindManyWhatsappNumberArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class FindManyWhatsappNumberArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    
    

class WhatsappTemplateIncludeFromTag(TypedDict, total=False):
    """Relational arguments for Tag"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromTagRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromTagRecursive1']


class WhatsappTemplateIncludeFromTagRecursive1(TypedDict, total=False):
    """Relational arguments for Tag"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromTagRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromTagRecursive2']


class WhatsappTemplateIncludeFromTagRecursive2(TypedDict, total=False):
    """Relational arguments for Tag"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromTagRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromTagRecursive3']


class WhatsappTemplateIncludeFromTagRecursive3(TypedDict, total=False):
    """Relational arguments for Tag"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromTagRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromTagRecursive4']


class WhatsappTemplateIncludeFromTagRecursive4(TypedDict, total=False):
    """Relational arguments for Tag"""

    

class WhatsappTemplateArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class WhatsappTemplateArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class WhatsappTemplateArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class WhatsappTemplateArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class WhatsappTemplateArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    
    

class FindManyWhatsappTemplateArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class FindManyWhatsappTemplateArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class FindManyWhatsappTemplateArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class FindManyWhatsappTemplateArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class FindManyWhatsappTemplateArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    
    

class LeadIncludeFromTag(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive1']
    facebookPage: Union[bool, 'FacebookPageArgsFromTagRecursive1']
    tags: Union[bool, 'FindManyLeadTagArgsFromTagRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromTagRecursive1']


class LeadIncludeFromTagRecursive1(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive2']
    facebookPage: Union[bool, 'FacebookPageArgsFromTagRecursive2']
    tags: Union[bool, 'FindManyLeadTagArgsFromTagRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromTagRecursive2']


class LeadIncludeFromTagRecursive2(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive3']
    facebookPage: Union[bool, 'FacebookPageArgsFromTagRecursive3']
    tags: Union[bool, 'FindManyLeadTagArgsFromTagRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromTagRecursive3']


class LeadIncludeFromTagRecursive3(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive4']
    facebookPage: Union[bool, 'FacebookPageArgsFromTagRecursive4']
    tags: Union[bool, 'FindManyLeadTagArgsFromTagRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromTagRecursive4']


class LeadIncludeFromTagRecursive4(TypedDict, total=False):
    """Relational arguments for Tag"""

    

class LeadArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'LeadIncludeFromLeadRecursive1'


class LeadArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'LeadIncludeFromLeadRecursive2'


class LeadArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'LeadIncludeFromLeadRecursive3'


class LeadArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'LeadIncludeFromLeadRecursive4'


class LeadArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    
    

class FindManyLeadArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive1'


class FindManyLeadArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive2'


class FindManyLeadArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive3'


class FindManyLeadArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive4'


class FindManyLeadArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    
    

class TagIncludeFromTag(TypedDict, total=False):
    """Relational arguments for Tag"""
    leads: Union[bool, 'FindManyLeadTagArgsFromTagRecursive1']


class TagIncludeFromTagRecursive1(TypedDict, total=False):
    """Relational arguments for Tag"""
    leads: Union[bool, 'FindManyLeadTagArgsFromTagRecursive2']


class TagIncludeFromTagRecursive2(TypedDict, total=False):
    """Relational arguments for Tag"""
    leads: Union[bool, 'FindManyLeadTagArgsFromTagRecursive3']


class TagIncludeFromTagRecursive3(TypedDict, total=False):
    """Relational arguments for Tag"""
    leads: Union[bool, 'FindManyLeadTagArgsFromTagRecursive4']


class TagIncludeFromTagRecursive4(TypedDict, total=False):
    """Relational arguments for Tag"""

    

class TagArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'TagIncludeFromTagRecursive1'


class TagArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'TagIncludeFromTagRecursive2'


class TagArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'TagIncludeFromTagRecursive3'


class TagArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'TagIncludeFromTagRecursive4'


class TagArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    
    

class FindManyTagArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive1'


class FindManyTagArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive2'


class FindManyTagArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive3'


class FindManyTagArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive4'


class FindManyTagArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    
    

class LeadTagIncludeFromTag(TypedDict, total=False):
    """Relational arguments for Tag"""
    lead: Union[bool, 'LeadArgsFromTagRecursive1']
    tag: Union[bool, 'TagArgsFromTagRecursive1']


class LeadTagIncludeFromTagRecursive1(TypedDict, total=False):
    """Relational arguments for Tag"""
    lead: Union[bool, 'LeadArgsFromTagRecursive2']
    tag: Union[bool, 'TagArgsFromTagRecursive2']


class LeadTagIncludeFromTagRecursive2(TypedDict, total=False):
    """Relational arguments for Tag"""
    lead: Union[bool, 'LeadArgsFromTagRecursive3']
    tag: Union[bool, 'TagArgsFromTagRecursive3']


class LeadTagIncludeFromTagRecursive3(TypedDict, total=False):
    """Relational arguments for Tag"""
    lead: Union[bool, 'LeadArgsFromTagRecursive4']
    tag: Union[bool, 'TagArgsFromTagRecursive4']


class LeadTagIncludeFromTagRecursive4(TypedDict, total=False):
    """Relational arguments for Tag"""

    

class LeadTagArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class LeadTagArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class LeadTagArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class LeadTagArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class LeadTagArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    
    

class FindManyLeadTagArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class FindManyLeadTagArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class FindManyLeadTagArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class FindManyLeadTagArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class FindManyLeadTagArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    
    

class MessageIncludeFromTag(TypedDict, total=False):
    """Relational arguments for Tag"""
    lead: Union[bool, 'LeadArgsFromTagRecursive1']
    campaign: Union[bool, 'CampaignArgsFromTagRecursive1']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromTagRecursive1']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromTagRecursive1']


class MessageIncludeFromTagRecursive1(TypedDict, total=False):
    """Relational arguments for Tag"""
    lead: Union[bool, 'LeadArgsFromTagRecursive2']
    campaign: Union[bool, 'CampaignArgsFromTagRecursive2']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromTagRecursive2']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromTagRecursive2']


class MessageIncludeFromTagRecursive2(TypedDict, total=False):
    """Relational arguments for Tag"""
    lead: Union[bool, 'LeadArgsFromTagRecursive3']
    campaign: Union[bool, 'CampaignArgsFromTagRecursive3']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromTagRecursive3']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromTagRecursive3']


class MessageIncludeFromTagRecursive3(TypedDict, total=False):
    """Relational arguments for Tag"""
    lead: Union[bool, 'LeadArgsFromTagRecursive4']
    campaign: Union[bool, 'CampaignArgsFromTagRecursive4']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromTagRecursive4']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromTagRecursive4']


class MessageIncludeFromTagRecursive4(TypedDict, total=False):
    """Relational arguments for Tag"""

    

class MessageArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    
    

class FindManyMessageArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class CampaignIncludeFromTag(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromTagRecursive1']


class CampaignIncludeFromTagRecursive1(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromTagRecursive2']


class CampaignIncludeFromTagRecursive2(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromTagRecursive3']


class CampaignIncludeFromTagRecursive3(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromTagRecursive4']


class CampaignIncludeFromTagRecursive4(TypedDict, total=False):
    """Relational arguments for Tag"""

    

class CampaignArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'CampaignIncludeFromCampaignRecursive1'


class CampaignArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'CampaignIncludeFromCampaignRecursive2'


class CampaignArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'CampaignIncludeFromCampaignRecursive3'


class CampaignArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'CampaignIncludeFromCampaignRecursive4'


class CampaignArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    
    

class FindManyCampaignArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive1'


class FindManyCampaignArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive2'


class FindManyCampaignArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive3'


class FindManyCampaignArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive4'


class FindManyCampaignArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    
    

class AuditLogIncludeFromTag(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive1']


class AuditLogIncludeFromTagRecursive1(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive2']


class AuditLogIncludeFromTagRecursive2(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive3']


class AuditLogIncludeFromTagRecursive3(TypedDict, total=False):
    """Relational arguments for Tag"""
    user: Union[bool, 'UserArgsFromTagRecursive4']


class AuditLogIncludeFromTagRecursive4(TypedDict, total=False):
    """Relational arguments for Tag"""

    

class AuditLogArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    
    

class FindManyAuditLogArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    
    

class ApiKeyIncludeFromTag(TypedDict, total=False):
    """Relational arguments for Tag"""


class ApiKeyIncludeFromTagRecursive1(TypedDict, total=False):
    """Relational arguments for Tag"""


class ApiKeyIncludeFromTagRecursive2(TypedDict, total=False):
    """Relational arguments for Tag"""


class ApiKeyIncludeFromTagRecursive3(TypedDict, total=False):
    """Relational arguments for Tag"""


class ApiKeyIncludeFromTagRecursive4(TypedDict, total=False):
    """Relational arguments for Tag"""

    

class ApiKeyArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class ApiKeyArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class ApiKeyArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class ApiKeyArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class ApiKeyArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    
    

class FindManyApiKeyArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class FindManyApiKeyArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class FindManyApiKeyArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class FindManyApiKeyArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class FindManyApiKeyArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    
    

class RateLimitIncludeFromTag(TypedDict, total=False):
    """Relational arguments for Tag"""


class RateLimitIncludeFromTagRecursive1(TypedDict, total=False):
    """Relational arguments for Tag"""


class RateLimitIncludeFromTagRecursive2(TypedDict, total=False):
    """Relational arguments for Tag"""


class RateLimitIncludeFromTagRecursive3(TypedDict, total=False):
    """Relational arguments for Tag"""


class RateLimitIncludeFromTagRecursive4(TypedDict, total=False):
    """Relational arguments for Tag"""

    

class RateLimitArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class RateLimitArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class RateLimitArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class RateLimitArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class RateLimitArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    
    

class FindManyRateLimitArgsFromTag(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class FindManyRateLimitArgsFromTagRecursive1(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class FindManyRateLimitArgsFromTagRecursive2(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class FindManyRateLimitArgsFromTagRecursive3(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class FindManyRateLimitArgsFromTagRecursive4(TypedDict, total=False):
    """Arguments for Tag"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    


FindManyTagArgs = FindManyTagArgsFromTag
FindFirstTagArgs = FindManyTagArgsFromTag


    

class TagWhereInput(TypedDict, total=False):
    """Tag arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    color: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    leads: 'LeadTagListRelationFilter'

    # should be noted that AND and NOT should be Union['TagWhereInputRecursive1', List['TagWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['TagWhereInputRecursive1']
    OR: List['TagWhereInputRecursive1']
    NOT: List['TagWhereInputRecursive1']


class TagWhereInputRecursive1(TypedDict, total=False):
    """Tag arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    color: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    leads: 'LeadTagListRelationFilter'

    # should be noted that AND and NOT should be Union['TagWhereInputRecursive2', List['TagWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['TagWhereInputRecursive2']
    OR: List['TagWhereInputRecursive2']
    NOT: List['TagWhereInputRecursive2']


class TagWhereInputRecursive2(TypedDict, total=False):
    """Tag arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    color: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    leads: 'LeadTagListRelationFilter'

    # should be noted that AND and NOT should be Union['TagWhereInputRecursive3', List['TagWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['TagWhereInputRecursive3']
    OR: List['TagWhereInputRecursive3']
    NOT: List['TagWhereInputRecursive3']


class TagWhereInputRecursive3(TypedDict, total=False):
    """Tag arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    color: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    leads: 'LeadTagListRelationFilter'

    # should be noted that AND and NOT should be Union['TagWhereInputRecursive4', List['TagWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['TagWhereInputRecursive4']
    OR: List['TagWhereInputRecursive4']
    NOT: List['TagWhereInputRecursive4']


class TagWhereInputRecursive4(TypedDict, total=False):
    """Tag arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    color: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    leads: 'LeadTagListRelationFilter'



# aggregate Tag types


    

class TagScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Tag arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    color: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['TagScalarWhereWithAggregatesInputRecursive1']
    OR: List['TagScalarWhereWithAggregatesInputRecursive1']
    NOT: List['TagScalarWhereWithAggregatesInputRecursive1']


class TagScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Tag arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    color: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['TagScalarWhereWithAggregatesInputRecursive2']
    OR: List['TagScalarWhereWithAggregatesInputRecursive2']
    NOT: List['TagScalarWhereWithAggregatesInputRecursive2']


class TagScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Tag arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    color: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['TagScalarWhereWithAggregatesInputRecursive3']
    OR: List['TagScalarWhereWithAggregatesInputRecursive3']
    NOT: List['TagScalarWhereWithAggregatesInputRecursive3']


class TagScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Tag arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    color: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['TagScalarWhereWithAggregatesInputRecursive4']
    OR: List['TagScalarWhereWithAggregatesInputRecursive4']
    NOT: List['TagScalarWhereWithAggregatesInputRecursive4']


class TagScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Tag arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    color: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class TagGroupByOutput(TypedDict, total=False):
    id: _str
    name: _str
    color: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    _sum: 'TagSumAggregateOutput'
    _avg: 'TagAvgAggregateOutput'
    _min: 'TagMinAggregateOutput'
    _max: 'TagMaxAggregateOutput'
    _count: 'TagCountAggregateOutput'


class TagAvgAggregateOutput(TypedDict, total=False):
    """Tag output for aggregating averages"""


class TagSumAggregateOutput(TypedDict, total=False):
    """Tag output for aggregating sums"""


class TagScalarAggregateOutput(TypedDict, total=False):
    """Tag output including scalar fields"""
    id: _str
    name: _str
    color: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


TagMinAggregateOutput = TagScalarAggregateOutput
TagMaxAggregateOutput = TagScalarAggregateOutput


class TagMaxAggregateInput(TypedDict, total=False):
    """Tag input for aggregating by max"""
    id: bool
    name: bool
    color: bool
    createdAt: bool
    updatedAt: bool


class TagMinAggregateInput(TypedDict, total=False):
    """Tag input for aggregating by min"""
    id: bool
    name: bool
    color: bool
    createdAt: bool
    updatedAt: bool


class TagNumberAggregateInput(TypedDict, total=False):
    """Tag input for aggregating numbers"""


TagAvgAggregateInput = TagNumberAggregateInput
TagSumAggregateInput = TagNumberAggregateInput


TagCountAggregateInput = TypedDict(
    'TagCountAggregateInput',
    {
        'id': bool,
        'name': bool,
        'color': bool,
        'createdAt': bool,
        'updatedAt': bool,
        '_all': bool,
    },
    total=False,
)

TagCountAggregateOutput = TypedDict(
    'TagCountAggregateOutput',
    {
        'id': int,
        'name': int,
        'color': int,
        'createdAt': int,
        'updatedAt': int,
        '_all': int,
    },
    total=False,
)


TagKeys = Literal[
    'id',
    'name',
    'color',
    'createdAt',
    'updatedAt',
    'leads',
]
TagScalarFieldKeys = Literal[
    'id',
    'name',
    'color',
    'createdAt',
    'updatedAt',
]
TagScalarFieldKeysT = TypeVar('TagScalarFieldKeysT', bound=TagScalarFieldKeys)

TagRelationalFieldKeys = Literal[
        'leads',
    ]

# LeadTag types

class LeadTagOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the LeadTag create method"""
    leadId: _str
    tagId: _str
    createdAt: datetime.datetime
    lead: 'LeadCreateNestedWithoutRelationsInput'
    tag: 'TagCreateNestedWithoutRelationsInput'


class LeadTagCreateInput(LeadTagOptionalCreateInput):
    """Required arguments to the LeadTag create method"""


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class LeadTagOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the LeadTag create method, without relations"""
    leadId: _str
    tagId: _str
    createdAt: datetime.datetime


class LeadTagCreateWithoutRelationsInput(LeadTagOptionalCreateWithoutRelationsInput):
    """Required arguments to the LeadTag create method, without relations"""

class LeadTagConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'LeadTagCreateWithoutRelationsInput'
    where: 'LeadTagWhereUniqueInput'

class LeadTagCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'LeadTagCreateWithoutRelationsInput'
    connect: 'LeadTagWhereUniqueInput'
    connect_or_create: 'LeadTagConnectOrCreateWithoutRelationsInput'


class LeadTagCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['LeadTagCreateWithoutRelationsInput', List['LeadTagCreateWithoutRelationsInput']]
    connect: Union['LeadTagWhereUniqueInput', List['LeadTagWhereUniqueInput']]
    connect_or_create: Union['LeadTagConnectOrCreateWithoutRelationsInput', List['LeadTagConnectOrCreateWithoutRelationsInput']]

_LeadTagCompoundPrimaryKeyInner = TypedDict(
    '_LeadTagCompoundPrimaryKeyInner',
    {
        'leadId': '_str',
        'tagId': '_str',
    },
    total=True
)

_LeadTagCompoundPrimaryKey = TypedDict(
    '_LeadTagCompoundPrimaryKey',
    {
        'leadId_tagId': '_LeadTagCompoundPrimaryKeyInner',
    },
    total=True
)

LeadTagWhereUniqueInput = _LeadTagCompoundPrimaryKey


class LeadTagUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    createdAt: datetime.datetime
    lead: 'LeadUpdateOneWithoutRelationsInput'
    tag: 'TagUpdateOneWithoutRelationsInput'


class LeadTagUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    createdAt: datetime.datetime


class LeadTagUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['LeadTagCreateWithoutRelationsInput']
    connect: List['LeadTagWhereUniqueInput']
    connect_or_create: List['LeadTagConnectOrCreateWithoutRelationsInput']
    set: List['LeadTagWhereUniqueInput']
    disconnect: List['LeadTagWhereUniqueInput']
    delete: List['LeadTagWhereUniqueInput']

    # TODO
    # update: List['LeadTagUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['LeadTagUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['LeadTagScalarWhereInput']
    # upsert: List['LeadTagUpserteWithWhereUniqueWithoutRelationsInput']


class LeadTagUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'LeadTagCreateWithoutRelationsInput'
    connect: 'LeadTagWhereUniqueInput'
    connect_or_create: 'LeadTagConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'LeadTagUpdateInput'
    # upsert: 'LeadTagUpsertWithoutRelationsInput'


class LeadTagUpsertInput(TypedDict):
    create: 'LeadTagCreateInput'
    update: 'LeadTagUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_LeadTag_leadId_OrderByInput = TypedDict(
    '_LeadTag_leadId_OrderByInput',
    {
        'leadId': 'SortOrder',
    },
    total=True
)

_LeadTag_tagId_OrderByInput = TypedDict(
    '_LeadTag_tagId_OrderByInput',
    {
        'tagId': 'SortOrder',
    },
    total=True
)

_LeadTag_createdAt_OrderByInput = TypedDict(
    '_LeadTag_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_LeadTag_RelevanceInner = TypedDict(
    '_LeadTag_RelevanceInner',
    {
        'fields': 'List[LeadTagScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_LeadTag_RelevanceOrderByInput = TypedDict(
    '_LeadTag_RelevanceOrderByInput',
    {
        '_relevance': '_LeadTag_RelevanceInner',
    },
    total=True
)

LeadTagOrderByInput = Union[
    '_LeadTag_leadId_OrderByInput',
    '_LeadTag_tagId_OrderByInput',
    '_LeadTag_createdAt_OrderByInput',
    '_LeadTag_RelevanceOrderByInput',
]



# recursive LeadTag types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

LeadTagRelationFilter = TypedDict(
    'LeadTagRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class LeadTagListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class LeadTagInclude(TypedDict, total=False):
    """LeadTag relational arguments"""
    lead: Union[bool, 'LeadArgsFromLeadTag']
    tag: Union[bool, 'TagArgsFromLeadTag']


    

class UserIncludeFromLeadTag(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromLeadTagRecursive1']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromLeadTagRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromLeadTagRecursive1']
    campaigns: Union[bool, 'FindManyCampaignArgsFromLeadTagRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromLeadTagRecursive1']


class UserIncludeFromLeadTagRecursive1(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromLeadTagRecursive2']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromLeadTagRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromLeadTagRecursive2']
    campaigns: Union[bool, 'FindManyCampaignArgsFromLeadTagRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromLeadTagRecursive2']


class UserIncludeFromLeadTagRecursive2(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromLeadTagRecursive3']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromLeadTagRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromLeadTagRecursive3']
    campaigns: Union[bool, 'FindManyCampaignArgsFromLeadTagRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromLeadTagRecursive3']


class UserIncludeFromLeadTagRecursive3(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromLeadTagRecursive4']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromLeadTagRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromLeadTagRecursive4']
    campaigns: Union[bool, 'FindManyCampaignArgsFromLeadTagRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromLeadTagRecursive4']


class UserIncludeFromLeadTagRecursive4(TypedDict, total=False):
    """Relational arguments for LeadTag"""

    

class UserArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    
    

class FindManyUserArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class FacebookPageIncludeFromLeadTag(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive1']
    posts: Union[bool, 'FindManyFacebookPostArgsFromLeadTagRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromLeadTagRecursive1']


class FacebookPageIncludeFromLeadTagRecursive1(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive2']
    posts: Union[bool, 'FindManyFacebookPostArgsFromLeadTagRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromLeadTagRecursive2']


class FacebookPageIncludeFromLeadTagRecursive2(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive3']
    posts: Union[bool, 'FindManyFacebookPostArgsFromLeadTagRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromLeadTagRecursive3']


class FacebookPageIncludeFromLeadTagRecursive3(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive4']
    posts: Union[bool, 'FindManyFacebookPostArgsFromLeadTagRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromLeadTagRecursive4']


class FacebookPageIncludeFromLeadTagRecursive4(TypedDict, total=False):
    """Relational arguments for LeadTag"""

    

class FacebookPageArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FacebookPageArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FacebookPageArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FacebookPageArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FacebookPageArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    
    

class FindManyFacebookPageArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FindManyFacebookPageArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FindManyFacebookPageArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FindManyFacebookPageArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FindManyFacebookPageArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    
    

class FacebookPostIncludeFromLeadTag(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    facebookPage: Union[bool, 'FacebookPageArgsFromLeadTagRecursive1']


class FacebookPostIncludeFromLeadTagRecursive1(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    facebookPage: Union[bool, 'FacebookPageArgsFromLeadTagRecursive2']


class FacebookPostIncludeFromLeadTagRecursive2(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    facebookPage: Union[bool, 'FacebookPageArgsFromLeadTagRecursive3']


class FacebookPostIncludeFromLeadTagRecursive3(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    facebookPage: Union[bool, 'FacebookPageArgsFromLeadTagRecursive4']


class FacebookPostIncludeFromLeadTagRecursive4(TypedDict, total=False):
    """Relational arguments for LeadTag"""

    

class FacebookPostArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FacebookPostArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FacebookPostArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FacebookPostArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FacebookPostArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    
    

class FindManyFacebookPostArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FindManyFacebookPostArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FindManyFacebookPostArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FindManyFacebookPostArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FindManyFacebookPostArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    
    

class WhatsappNumberIncludeFromLeadTag(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive1']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromLeadTagRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromLeadTagRecursive1']


class WhatsappNumberIncludeFromLeadTagRecursive1(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive2']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromLeadTagRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromLeadTagRecursive2']


class WhatsappNumberIncludeFromLeadTagRecursive2(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive3']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromLeadTagRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromLeadTagRecursive3']


class WhatsappNumberIncludeFromLeadTagRecursive3(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive4']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromLeadTagRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromLeadTagRecursive4']


class WhatsappNumberIncludeFromLeadTagRecursive4(TypedDict, total=False):
    """Relational arguments for LeadTag"""

    

class WhatsappNumberArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class WhatsappNumberArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class WhatsappNumberArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class WhatsappNumberArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class WhatsappNumberArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    
    

class FindManyWhatsappNumberArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class FindManyWhatsappNumberArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class FindManyWhatsappNumberArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class FindManyWhatsappNumberArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class FindManyWhatsappNumberArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    
    

class WhatsappTemplateIncludeFromLeadTag(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromLeadTagRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromLeadTagRecursive1']


class WhatsappTemplateIncludeFromLeadTagRecursive1(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromLeadTagRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromLeadTagRecursive2']


class WhatsappTemplateIncludeFromLeadTagRecursive2(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromLeadTagRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromLeadTagRecursive3']


class WhatsappTemplateIncludeFromLeadTagRecursive3(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromLeadTagRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromLeadTagRecursive4']


class WhatsappTemplateIncludeFromLeadTagRecursive4(TypedDict, total=False):
    """Relational arguments for LeadTag"""

    

class WhatsappTemplateArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class WhatsappTemplateArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class WhatsappTemplateArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class WhatsappTemplateArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class WhatsappTemplateArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    
    

class FindManyWhatsappTemplateArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class FindManyWhatsappTemplateArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class FindManyWhatsappTemplateArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class FindManyWhatsappTemplateArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class FindManyWhatsappTemplateArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    
    

class LeadIncludeFromLeadTag(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive1']
    facebookPage: Union[bool, 'FacebookPageArgsFromLeadTagRecursive1']
    tags: Union[bool, 'FindManyLeadTagArgsFromLeadTagRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromLeadTagRecursive1']


class LeadIncludeFromLeadTagRecursive1(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive2']
    facebookPage: Union[bool, 'FacebookPageArgsFromLeadTagRecursive2']
    tags: Union[bool, 'FindManyLeadTagArgsFromLeadTagRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromLeadTagRecursive2']


class LeadIncludeFromLeadTagRecursive2(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive3']
    facebookPage: Union[bool, 'FacebookPageArgsFromLeadTagRecursive3']
    tags: Union[bool, 'FindManyLeadTagArgsFromLeadTagRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromLeadTagRecursive3']


class LeadIncludeFromLeadTagRecursive3(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive4']
    facebookPage: Union[bool, 'FacebookPageArgsFromLeadTagRecursive4']
    tags: Union[bool, 'FindManyLeadTagArgsFromLeadTagRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromLeadTagRecursive4']


class LeadIncludeFromLeadTagRecursive4(TypedDict, total=False):
    """Relational arguments for LeadTag"""

    

class LeadArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'LeadIncludeFromLeadRecursive1'


class LeadArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'LeadIncludeFromLeadRecursive2'


class LeadArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'LeadIncludeFromLeadRecursive3'


class LeadArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'LeadIncludeFromLeadRecursive4'


class LeadArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    
    

class FindManyLeadArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive1'


class FindManyLeadArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive2'


class FindManyLeadArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive3'


class FindManyLeadArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive4'


class FindManyLeadArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    
    

class TagIncludeFromLeadTag(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    leads: Union[bool, 'FindManyLeadTagArgsFromLeadTagRecursive1']


class TagIncludeFromLeadTagRecursive1(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    leads: Union[bool, 'FindManyLeadTagArgsFromLeadTagRecursive2']


class TagIncludeFromLeadTagRecursive2(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    leads: Union[bool, 'FindManyLeadTagArgsFromLeadTagRecursive3']


class TagIncludeFromLeadTagRecursive3(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    leads: Union[bool, 'FindManyLeadTagArgsFromLeadTagRecursive4']


class TagIncludeFromLeadTagRecursive4(TypedDict, total=False):
    """Relational arguments for LeadTag"""

    

class TagArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'TagIncludeFromTagRecursive1'


class TagArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'TagIncludeFromTagRecursive2'


class TagArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'TagIncludeFromTagRecursive3'


class TagArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'TagIncludeFromTagRecursive4'


class TagArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    
    

class FindManyTagArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive1'


class FindManyTagArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive2'


class FindManyTagArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive3'


class FindManyTagArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive4'


class FindManyTagArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    
    

class LeadTagIncludeFromLeadTag(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    lead: Union[bool, 'LeadArgsFromLeadTagRecursive1']
    tag: Union[bool, 'TagArgsFromLeadTagRecursive1']


class LeadTagIncludeFromLeadTagRecursive1(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    lead: Union[bool, 'LeadArgsFromLeadTagRecursive2']
    tag: Union[bool, 'TagArgsFromLeadTagRecursive2']


class LeadTagIncludeFromLeadTagRecursive2(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    lead: Union[bool, 'LeadArgsFromLeadTagRecursive3']
    tag: Union[bool, 'TagArgsFromLeadTagRecursive3']


class LeadTagIncludeFromLeadTagRecursive3(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    lead: Union[bool, 'LeadArgsFromLeadTagRecursive4']
    tag: Union[bool, 'TagArgsFromLeadTagRecursive4']


class LeadTagIncludeFromLeadTagRecursive4(TypedDict, total=False):
    """Relational arguments for LeadTag"""

    

class LeadTagArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class LeadTagArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class LeadTagArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class LeadTagArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class LeadTagArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    
    

class FindManyLeadTagArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class FindManyLeadTagArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class FindManyLeadTagArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class FindManyLeadTagArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class FindManyLeadTagArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    
    

class MessageIncludeFromLeadTag(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    lead: Union[bool, 'LeadArgsFromLeadTagRecursive1']
    campaign: Union[bool, 'CampaignArgsFromLeadTagRecursive1']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromLeadTagRecursive1']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromLeadTagRecursive1']


class MessageIncludeFromLeadTagRecursive1(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    lead: Union[bool, 'LeadArgsFromLeadTagRecursive2']
    campaign: Union[bool, 'CampaignArgsFromLeadTagRecursive2']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromLeadTagRecursive2']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromLeadTagRecursive2']


class MessageIncludeFromLeadTagRecursive2(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    lead: Union[bool, 'LeadArgsFromLeadTagRecursive3']
    campaign: Union[bool, 'CampaignArgsFromLeadTagRecursive3']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromLeadTagRecursive3']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromLeadTagRecursive3']


class MessageIncludeFromLeadTagRecursive3(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    lead: Union[bool, 'LeadArgsFromLeadTagRecursive4']
    campaign: Union[bool, 'CampaignArgsFromLeadTagRecursive4']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromLeadTagRecursive4']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromLeadTagRecursive4']


class MessageIncludeFromLeadTagRecursive4(TypedDict, total=False):
    """Relational arguments for LeadTag"""

    

class MessageArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    
    

class FindManyMessageArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class CampaignIncludeFromLeadTag(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromLeadTagRecursive1']


class CampaignIncludeFromLeadTagRecursive1(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromLeadTagRecursive2']


class CampaignIncludeFromLeadTagRecursive2(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromLeadTagRecursive3']


class CampaignIncludeFromLeadTagRecursive3(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromLeadTagRecursive4']


class CampaignIncludeFromLeadTagRecursive4(TypedDict, total=False):
    """Relational arguments for LeadTag"""

    

class CampaignArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'CampaignIncludeFromCampaignRecursive1'


class CampaignArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'CampaignIncludeFromCampaignRecursive2'


class CampaignArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'CampaignIncludeFromCampaignRecursive3'


class CampaignArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'CampaignIncludeFromCampaignRecursive4'


class CampaignArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    
    

class FindManyCampaignArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive1'


class FindManyCampaignArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive2'


class FindManyCampaignArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive3'


class FindManyCampaignArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive4'


class FindManyCampaignArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    
    

class AuditLogIncludeFromLeadTag(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive1']


class AuditLogIncludeFromLeadTagRecursive1(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive2']


class AuditLogIncludeFromLeadTagRecursive2(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive3']


class AuditLogIncludeFromLeadTagRecursive3(TypedDict, total=False):
    """Relational arguments for LeadTag"""
    user: Union[bool, 'UserArgsFromLeadTagRecursive4']


class AuditLogIncludeFromLeadTagRecursive4(TypedDict, total=False):
    """Relational arguments for LeadTag"""

    

class AuditLogArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    
    

class FindManyAuditLogArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    
    

class ApiKeyIncludeFromLeadTag(TypedDict, total=False):
    """Relational arguments for LeadTag"""


class ApiKeyIncludeFromLeadTagRecursive1(TypedDict, total=False):
    """Relational arguments for LeadTag"""


class ApiKeyIncludeFromLeadTagRecursive2(TypedDict, total=False):
    """Relational arguments for LeadTag"""


class ApiKeyIncludeFromLeadTagRecursive3(TypedDict, total=False):
    """Relational arguments for LeadTag"""


class ApiKeyIncludeFromLeadTagRecursive4(TypedDict, total=False):
    """Relational arguments for LeadTag"""

    

class ApiKeyArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class ApiKeyArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class ApiKeyArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class ApiKeyArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class ApiKeyArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    
    

class FindManyApiKeyArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class FindManyApiKeyArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class FindManyApiKeyArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class FindManyApiKeyArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class FindManyApiKeyArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    
    

class RateLimitIncludeFromLeadTag(TypedDict, total=False):
    """Relational arguments for LeadTag"""


class RateLimitIncludeFromLeadTagRecursive1(TypedDict, total=False):
    """Relational arguments for LeadTag"""


class RateLimitIncludeFromLeadTagRecursive2(TypedDict, total=False):
    """Relational arguments for LeadTag"""


class RateLimitIncludeFromLeadTagRecursive3(TypedDict, total=False):
    """Relational arguments for LeadTag"""


class RateLimitIncludeFromLeadTagRecursive4(TypedDict, total=False):
    """Relational arguments for LeadTag"""

    

class RateLimitArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class RateLimitArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class RateLimitArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class RateLimitArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class RateLimitArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    
    

class FindManyRateLimitArgsFromLeadTag(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class FindManyRateLimitArgsFromLeadTagRecursive1(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class FindManyRateLimitArgsFromLeadTagRecursive2(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class FindManyRateLimitArgsFromLeadTagRecursive3(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class FindManyRateLimitArgsFromLeadTagRecursive4(TypedDict, total=False):
    """Arguments for LeadTag"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    


FindManyLeadTagArgs = FindManyLeadTagArgsFromLeadTag
FindFirstLeadTagArgs = FindManyLeadTagArgsFromLeadTag


    

class LeadTagWhereInput(TypedDict, total=False):
    """LeadTag arguments for searching"""
    leadId: Union[_str, 'types.StringFilter']
    tagId: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    lead: 'LeadRelationFilter'
    tag: 'TagRelationFilter'

    # should be noted that AND and NOT should be Union['LeadTagWhereInputRecursive1', List['LeadTagWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['LeadTagWhereInputRecursive1']
    OR: List['LeadTagWhereInputRecursive1']
    NOT: List['LeadTagWhereInputRecursive1']


class LeadTagWhereInputRecursive1(TypedDict, total=False):
    """LeadTag arguments for searching"""
    leadId: Union[_str, 'types.StringFilter']
    tagId: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    lead: 'LeadRelationFilter'
    tag: 'TagRelationFilter'

    # should be noted that AND and NOT should be Union['LeadTagWhereInputRecursive2', List['LeadTagWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['LeadTagWhereInputRecursive2']
    OR: List['LeadTagWhereInputRecursive2']
    NOT: List['LeadTagWhereInputRecursive2']


class LeadTagWhereInputRecursive2(TypedDict, total=False):
    """LeadTag arguments for searching"""
    leadId: Union[_str, 'types.StringFilter']
    tagId: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    lead: 'LeadRelationFilter'
    tag: 'TagRelationFilter'

    # should be noted that AND and NOT should be Union['LeadTagWhereInputRecursive3', List['LeadTagWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['LeadTagWhereInputRecursive3']
    OR: List['LeadTagWhereInputRecursive3']
    NOT: List['LeadTagWhereInputRecursive3']


class LeadTagWhereInputRecursive3(TypedDict, total=False):
    """LeadTag arguments for searching"""
    leadId: Union[_str, 'types.StringFilter']
    tagId: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    lead: 'LeadRelationFilter'
    tag: 'TagRelationFilter'

    # should be noted that AND and NOT should be Union['LeadTagWhereInputRecursive4', List['LeadTagWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['LeadTagWhereInputRecursive4']
    OR: List['LeadTagWhereInputRecursive4']
    NOT: List['LeadTagWhereInputRecursive4']


class LeadTagWhereInputRecursive4(TypedDict, total=False):
    """LeadTag arguments for searching"""
    leadId: Union[_str, 'types.StringFilter']
    tagId: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    lead: 'LeadRelationFilter'
    tag: 'TagRelationFilter'



# aggregate LeadTag types


    

class LeadTagScalarWhereWithAggregatesInput(TypedDict, total=False):
    """LeadTag arguments for searching"""
    leadId: Union[_str, 'types.StringWithAggregatesFilter']
    tagId: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['LeadTagScalarWhereWithAggregatesInputRecursive1']
    OR: List['LeadTagScalarWhereWithAggregatesInputRecursive1']
    NOT: List['LeadTagScalarWhereWithAggregatesInputRecursive1']


class LeadTagScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """LeadTag arguments for searching"""
    leadId: Union[_str, 'types.StringWithAggregatesFilter']
    tagId: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['LeadTagScalarWhereWithAggregatesInputRecursive2']
    OR: List['LeadTagScalarWhereWithAggregatesInputRecursive2']
    NOT: List['LeadTagScalarWhereWithAggregatesInputRecursive2']


class LeadTagScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """LeadTag arguments for searching"""
    leadId: Union[_str, 'types.StringWithAggregatesFilter']
    tagId: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['LeadTagScalarWhereWithAggregatesInputRecursive3']
    OR: List['LeadTagScalarWhereWithAggregatesInputRecursive3']
    NOT: List['LeadTagScalarWhereWithAggregatesInputRecursive3']


class LeadTagScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """LeadTag arguments for searching"""
    leadId: Union[_str, 'types.StringWithAggregatesFilter']
    tagId: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['LeadTagScalarWhereWithAggregatesInputRecursive4']
    OR: List['LeadTagScalarWhereWithAggregatesInputRecursive4']
    NOT: List['LeadTagScalarWhereWithAggregatesInputRecursive4']


class LeadTagScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """LeadTag arguments for searching"""
    leadId: Union[_str, 'types.StringWithAggregatesFilter']
    tagId: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class LeadTagGroupByOutput(TypedDict, total=False):
    leadId: _str
    tagId: _str
    createdAt: datetime.datetime
    _sum: 'LeadTagSumAggregateOutput'
    _avg: 'LeadTagAvgAggregateOutput'
    _min: 'LeadTagMinAggregateOutput'
    _max: 'LeadTagMaxAggregateOutput'
    _count: 'LeadTagCountAggregateOutput'


class LeadTagAvgAggregateOutput(TypedDict, total=False):
    """LeadTag output for aggregating averages"""


class LeadTagSumAggregateOutput(TypedDict, total=False):
    """LeadTag output for aggregating sums"""


class LeadTagScalarAggregateOutput(TypedDict, total=False):
    """LeadTag output including scalar fields"""
    leadId: _str
    tagId: _str
    createdAt: datetime.datetime


LeadTagMinAggregateOutput = LeadTagScalarAggregateOutput
LeadTagMaxAggregateOutput = LeadTagScalarAggregateOutput


class LeadTagMaxAggregateInput(TypedDict, total=False):
    """LeadTag input for aggregating by max"""
    leadId: bool
    tagId: bool
    createdAt: bool


class LeadTagMinAggregateInput(TypedDict, total=False):
    """LeadTag input for aggregating by min"""
    leadId: bool
    tagId: bool
    createdAt: bool


class LeadTagNumberAggregateInput(TypedDict, total=False):
    """LeadTag input for aggregating numbers"""


LeadTagAvgAggregateInput = LeadTagNumberAggregateInput
LeadTagSumAggregateInput = LeadTagNumberAggregateInput


LeadTagCountAggregateInput = TypedDict(
    'LeadTagCountAggregateInput',
    {
        'leadId': bool,
        'tagId': bool,
        'createdAt': bool,
        '_all': bool,
    },
    total=False,
)

LeadTagCountAggregateOutput = TypedDict(
    'LeadTagCountAggregateOutput',
    {
        'leadId': int,
        'tagId': int,
        'createdAt': int,
        '_all': int,
    },
    total=False,
)


LeadTagKeys = Literal[
    'leadId',
    'tagId',
    'createdAt',
    'lead',
    'tag',
]
LeadTagScalarFieldKeys = Literal[
    'leadId',
    'tagId',
    'createdAt',
]
LeadTagScalarFieldKeysT = TypeVar('LeadTagScalarFieldKeysT', bound=LeadTagScalarFieldKeys)

LeadTagRelationalFieldKeys = Literal[
        'lead',
        'tag',
    ]

# Message types

class MessageOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Message create method"""
    id: _str
    status: 'enums.MessageStatus'
    sentAt: Optional[datetime.datetime]
    deliveredAt: Optional[datetime.datetime]
    readAt: Optional[datetime.datetime]
    errorMessage: Optional[_str]
    retryCount: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    leadId: Optional[_str]
    lead: 'LeadCreateNestedWithoutRelationsInput'
    campaignId: Optional[_str]
    campaign: 'CampaignCreateNestedWithoutRelationsInput'
    whatsappNumberId: Optional[_str]
    whatsappNumber: 'WhatsappNumberCreateNestedWithoutRelationsInput'
    whatsappTemplateId: Optional[_str]
    whatsappTemplate: 'WhatsappTemplateCreateNestedWithoutRelationsInput'


class MessageCreateInput(MessageOptionalCreateInput):
    """Required arguments to the Message create method"""
    type: 'enums.MessageType'
    platform: 'enums.MessagePlatform'
    recipient: _str
    content: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class MessageOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Message create method, without relations"""
    id: _str
    status: 'enums.MessageStatus'
    sentAt: Optional[datetime.datetime]
    deliveredAt: Optional[datetime.datetime]
    readAt: Optional[datetime.datetime]
    errorMessage: Optional[_str]
    retryCount: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    leadId: Optional[_str]
    campaignId: Optional[_str]
    whatsappNumberId: Optional[_str]
    whatsappTemplateId: Optional[_str]


class MessageCreateWithoutRelationsInput(MessageOptionalCreateWithoutRelationsInput):
    """Required arguments to the Message create method, without relations"""
    type: 'enums.MessageType'
    platform: 'enums.MessagePlatform'
    recipient: _str
    content: _str

class MessageConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'MessageCreateWithoutRelationsInput'
    where: 'MessageWhereUniqueInput'

class MessageCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'MessageCreateWithoutRelationsInput'
    connect: 'MessageWhereUniqueInput'
    connect_or_create: 'MessageConnectOrCreateWithoutRelationsInput'


class MessageCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['MessageCreateWithoutRelationsInput', List['MessageCreateWithoutRelationsInput']]
    connect: Union['MessageWhereUniqueInput', List['MessageWhereUniqueInput']]
    connect_or_create: Union['MessageConnectOrCreateWithoutRelationsInput', List['MessageConnectOrCreateWithoutRelationsInput']]

_MessageWhereUnique_id_Input = TypedDict(
    '_MessageWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

MessageWhereUniqueInput = _MessageWhereUnique_id_Input


class MessageUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    type: 'enums.MessageType'
    platform: 'enums.MessagePlatform'
    recipient: _str
    content: _str
    status: 'enums.MessageStatus'
    sentAt: Optional[datetime.datetime]
    deliveredAt: Optional[datetime.datetime]
    readAt: Optional[datetime.datetime]
    errorMessage: Optional[_str]
    retryCount: Union[AtomicIntInput, _int]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    lead: 'LeadUpdateOneWithoutRelationsInput'
    campaign: 'CampaignUpdateOneWithoutRelationsInput'
    whatsappNumber: 'WhatsappNumberUpdateOneWithoutRelationsInput'
    whatsappTemplate: 'WhatsappTemplateUpdateOneWithoutRelationsInput'


class MessageUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    type: 'enums.MessageType'
    platform: 'enums.MessagePlatform'
    recipient: _str
    content: _str
    status: 'enums.MessageStatus'
    sentAt: Optional[datetime.datetime]
    deliveredAt: Optional[datetime.datetime]
    readAt: Optional[datetime.datetime]
    errorMessage: Optional[_str]
    retryCount: Union[AtomicIntInput, _int]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class MessageUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['MessageCreateWithoutRelationsInput']
    connect: List['MessageWhereUniqueInput']
    connect_or_create: List['MessageConnectOrCreateWithoutRelationsInput']
    set: List['MessageWhereUniqueInput']
    disconnect: List['MessageWhereUniqueInput']
    delete: List['MessageWhereUniqueInput']

    # TODO
    # update: List['MessageUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['MessageUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['MessageScalarWhereInput']
    # upsert: List['MessageUpserteWithWhereUniqueWithoutRelationsInput']


class MessageUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'MessageCreateWithoutRelationsInput'
    connect: 'MessageWhereUniqueInput'
    connect_or_create: 'MessageConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'MessageUpdateInput'
    # upsert: 'MessageUpsertWithoutRelationsInput'


class MessageUpsertInput(TypedDict):
    create: 'MessageCreateInput'
    update: 'MessageUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Message_id_OrderByInput = TypedDict(
    '_Message_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Message_type_OrderByInput = TypedDict(
    '_Message_type_OrderByInput',
    {
        'type': 'SortOrder',
    },
    total=True
)

_Message_platform_OrderByInput = TypedDict(
    '_Message_platform_OrderByInput',
    {
        'platform': 'SortOrder',
    },
    total=True
)

_Message_recipient_OrderByInput = TypedDict(
    '_Message_recipient_OrderByInput',
    {
        'recipient': 'SortOrder',
    },
    total=True
)

_Message_content_OrderByInput = TypedDict(
    '_Message_content_OrderByInput',
    {
        'content': 'SortOrder',
    },
    total=True
)

_Message_status_OrderByInput = TypedDict(
    '_Message_status_OrderByInput',
    {
        'status': 'SortOrder',
    },
    total=True
)

_Message_sentAt_OrderByInput = TypedDict(
    '_Message_sentAt_OrderByInput',
    {
        'sentAt': 'SortOrder',
    },
    total=True
)

_Message_deliveredAt_OrderByInput = TypedDict(
    '_Message_deliveredAt_OrderByInput',
    {
        'deliveredAt': 'SortOrder',
    },
    total=True
)

_Message_readAt_OrderByInput = TypedDict(
    '_Message_readAt_OrderByInput',
    {
        'readAt': 'SortOrder',
    },
    total=True
)

_Message_errorMessage_OrderByInput = TypedDict(
    '_Message_errorMessage_OrderByInput',
    {
        'errorMessage': 'SortOrder',
    },
    total=True
)

_Message_retryCount_OrderByInput = TypedDict(
    '_Message_retryCount_OrderByInput',
    {
        'retryCount': 'SortOrder',
    },
    total=True
)

_Message_createdAt_OrderByInput = TypedDict(
    '_Message_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Message_updatedAt_OrderByInput = TypedDict(
    '_Message_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Message_leadId_OrderByInput = TypedDict(
    '_Message_leadId_OrderByInput',
    {
        'leadId': 'SortOrder',
    },
    total=True
)

_Message_campaignId_OrderByInput = TypedDict(
    '_Message_campaignId_OrderByInput',
    {
        'campaignId': 'SortOrder',
    },
    total=True
)

_Message_whatsappNumberId_OrderByInput = TypedDict(
    '_Message_whatsappNumberId_OrderByInput',
    {
        'whatsappNumberId': 'SortOrder',
    },
    total=True
)

_Message_whatsappTemplateId_OrderByInput = TypedDict(
    '_Message_whatsappTemplateId_OrderByInput',
    {
        'whatsappTemplateId': 'SortOrder',
    },
    total=True
)

_Message_RelevanceInner = TypedDict(
    '_Message_RelevanceInner',
    {
        'fields': 'List[MessageScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Message_RelevanceOrderByInput = TypedDict(
    '_Message_RelevanceOrderByInput',
    {
        '_relevance': '_Message_RelevanceInner',
    },
    total=True
)

MessageOrderByInput = Union[
    '_Message_id_OrderByInput',
    '_Message_type_OrderByInput',
    '_Message_platform_OrderByInput',
    '_Message_recipient_OrderByInput',
    '_Message_content_OrderByInput',
    '_Message_status_OrderByInput',
    '_Message_sentAt_OrderByInput',
    '_Message_deliveredAt_OrderByInput',
    '_Message_readAt_OrderByInput',
    '_Message_errorMessage_OrderByInput',
    '_Message_retryCount_OrderByInput',
    '_Message_createdAt_OrderByInput',
    '_Message_updatedAt_OrderByInput',
    '_Message_leadId_OrderByInput',
    '_Message_campaignId_OrderByInput',
    '_Message_whatsappNumberId_OrderByInput',
    '_Message_whatsappTemplateId_OrderByInput',
    '_Message_RelevanceOrderByInput',
]



# recursive Message types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

MessageRelationFilter = TypedDict(
    'MessageRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class MessageListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class MessageInclude(TypedDict, total=False):
    """Message relational arguments"""
    lead: Union[bool, 'LeadArgsFromMessage']
    campaign: Union[bool, 'CampaignArgsFromMessage']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromMessage']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromMessage']


    

class UserIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromMessageRecursive1']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromMessageRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromMessageRecursive1']
    campaigns: Union[bool, 'FindManyCampaignArgsFromMessageRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromMessageRecursive1']


class UserIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromMessageRecursive2']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromMessageRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromMessageRecursive2']
    campaigns: Union[bool, 'FindManyCampaignArgsFromMessageRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromMessageRecursive2']


class UserIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromMessageRecursive3']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromMessageRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromMessageRecursive3']
    campaigns: Union[bool, 'FindManyCampaignArgsFromMessageRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromMessageRecursive3']


class UserIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromMessageRecursive4']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromMessageRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromMessageRecursive4']
    campaigns: Union[bool, 'FindManyCampaignArgsFromMessageRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromMessageRecursive4']


class UserIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class UserArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyUserArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class FacebookPageIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive1']
    posts: Union[bool, 'FindManyFacebookPostArgsFromMessageRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromMessageRecursive1']


class FacebookPageIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive2']
    posts: Union[bool, 'FindManyFacebookPostArgsFromMessageRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromMessageRecursive2']


class FacebookPageIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive3']
    posts: Union[bool, 'FindManyFacebookPostArgsFromMessageRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromMessageRecursive3']


class FacebookPageIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive4']
    posts: Union[bool, 'FindManyFacebookPostArgsFromMessageRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromMessageRecursive4']


class FacebookPageIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class FacebookPageArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FacebookPageArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FacebookPageArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FacebookPageArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FacebookPageArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyFacebookPageArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FindManyFacebookPageArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FindManyFacebookPageArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FindManyFacebookPageArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FindManyFacebookPageArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    
    

class FacebookPostIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    facebookPage: Union[bool, 'FacebookPageArgsFromMessageRecursive1']


class FacebookPostIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    facebookPage: Union[bool, 'FacebookPageArgsFromMessageRecursive2']


class FacebookPostIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    facebookPage: Union[bool, 'FacebookPageArgsFromMessageRecursive3']


class FacebookPostIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    facebookPage: Union[bool, 'FacebookPageArgsFromMessageRecursive4']


class FacebookPostIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class FacebookPostArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FacebookPostArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FacebookPostArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FacebookPostArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FacebookPostArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyFacebookPostArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FindManyFacebookPostArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FindManyFacebookPostArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FindManyFacebookPostArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FindManyFacebookPostArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    
    

class WhatsappNumberIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive1']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromMessageRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive1']


class WhatsappNumberIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive2']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromMessageRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive2']


class WhatsappNumberIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive3']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromMessageRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive3']


class WhatsappNumberIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive4']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromMessageRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive4']


class WhatsappNumberIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class WhatsappNumberArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class WhatsappNumberArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class WhatsappNumberArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class WhatsappNumberArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class WhatsappNumberArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyWhatsappNumberArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class FindManyWhatsappNumberArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class FindManyWhatsappNumberArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class FindManyWhatsappNumberArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class FindManyWhatsappNumberArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    
    

class WhatsappTemplateIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromMessageRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive1']


class WhatsappTemplateIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromMessageRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive2']


class WhatsappTemplateIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromMessageRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive3']


class WhatsappTemplateIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromMessageRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive4']


class WhatsappTemplateIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class WhatsappTemplateArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class WhatsappTemplateArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class WhatsappTemplateArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class WhatsappTemplateArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class WhatsappTemplateArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyWhatsappTemplateArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class FindManyWhatsappTemplateArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class FindManyWhatsappTemplateArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class FindManyWhatsappTemplateArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class FindManyWhatsappTemplateArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    
    

class LeadIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive1']
    facebookPage: Union[bool, 'FacebookPageArgsFromMessageRecursive1']
    tags: Union[bool, 'FindManyLeadTagArgsFromMessageRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive1']


class LeadIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive2']
    facebookPage: Union[bool, 'FacebookPageArgsFromMessageRecursive2']
    tags: Union[bool, 'FindManyLeadTagArgsFromMessageRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive2']


class LeadIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive3']
    facebookPage: Union[bool, 'FacebookPageArgsFromMessageRecursive3']
    tags: Union[bool, 'FindManyLeadTagArgsFromMessageRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive3']


class LeadIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive4']
    facebookPage: Union[bool, 'FacebookPageArgsFromMessageRecursive4']
    tags: Union[bool, 'FindManyLeadTagArgsFromMessageRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive4']


class LeadIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class LeadArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'LeadIncludeFromLeadRecursive1'


class LeadArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'LeadIncludeFromLeadRecursive2'


class LeadArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'LeadIncludeFromLeadRecursive3'


class LeadArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'LeadIncludeFromLeadRecursive4'


class LeadArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyLeadArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive1'


class FindManyLeadArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive2'


class FindManyLeadArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive3'


class FindManyLeadArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive4'


class FindManyLeadArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    
    

class TagIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    leads: Union[bool, 'FindManyLeadTagArgsFromMessageRecursive1']


class TagIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    leads: Union[bool, 'FindManyLeadTagArgsFromMessageRecursive2']


class TagIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    leads: Union[bool, 'FindManyLeadTagArgsFromMessageRecursive3']


class TagIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    leads: Union[bool, 'FindManyLeadTagArgsFromMessageRecursive4']


class TagIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class TagArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'TagIncludeFromTagRecursive1'


class TagArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'TagIncludeFromTagRecursive2'


class TagArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'TagIncludeFromTagRecursive3'


class TagArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'TagIncludeFromTagRecursive4'


class TagArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyTagArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive1'


class FindManyTagArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive2'


class FindManyTagArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive3'


class FindManyTagArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive4'


class FindManyTagArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    
    

class LeadTagIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    lead: Union[bool, 'LeadArgsFromMessageRecursive1']
    tag: Union[bool, 'TagArgsFromMessageRecursive1']


class LeadTagIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    lead: Union[bool, 'LeadArgsFromMessageRecursive2']
    tag: Union[bool, 'TagArgsFromMessageRecursive2']


class LeadTagIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    lead: Union[bool, 'LeadArgsFromMessageRecursive3']
    tag: Union[bool, 'TagArgsFromMessageRecursive3']


class LeadTagIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    lead: Union[bool, 'LeadArgsFromMessageRecursive4']
    tag: Union[bool, 'TagArgsFromMessageRecursive4']


class LeadTagIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class LeadTagArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class LeadTagArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class LeadTagArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class LeadTagArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class LeadTagArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyLeadTagArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class FindManyLeadTagArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class FindManyLeadTagArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class FindManyLeadTagArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class FindManyLeadTagArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    
    

class MessageIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    lead: Union[bool, 'LeadArgsFromMessageRecursive1']
    campaign: Union[bool, 'CampaignArgsFromMessageRecursive1']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromMessageRecursive1']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromMessageRecursive1']


class MessageIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    lead: Union[bool, 'LeadArgsFromMessageRecursive2']
    campaign: Union[bool, 'CampaignArgsFromMessageRecursive2']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromMessageRecursive2']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromMessageRecursive2']


class MessageIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    lead: Union[bool, 'LeadArgsFromMessageRecursive3']
    campaign: Union[bool, 'CampaignArgsFromMessageRecursive3']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromMessageRecursive3']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromMessageRecursive3']


class MessageIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    lead: Union[bool, 'LeadArgsFromMessageRecursive4']
    campaign: Union[bool, 'CampaignArgsFromMessageRecursive4']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromMessageRecursive4']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromMessageRecursive4']


class MessageIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class MessageArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyMessageArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class CampaignIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive1']


class CampaignIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive2']


class CampaignIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive3']


class CampaignIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive4']


class CampaignIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class CampaignArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'CampaignIncludeFromCampaignRecursive1'


class CampaignArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'CampaignIncludeFromCampaignRecursive2'


class CampaignArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'CampaignIncludeFromCampaignRecursive3'


class CampaignArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'CampaignIncludeFromCampaignRecursive4'


class CampaignArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyCampaignArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive1'


class FindManyCampaignArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive2'


class FindManyCampaignArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive3'


class FindManyCampaignArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive4'


class FindManyCampaignArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    
    

class AuditLogIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive1']


class AuditLogIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive2']


class AuditLogIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive3']


class AuditLogIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    user: Union[bool, 'UserArgsFromMessageRecursive4']


class AuditLogIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class AuditLogArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyAuditLogArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    
    

class ApiKeyIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""


class ApiKeyIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""


class ApiKeyIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""


class ApiKeyIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""


class ApiKeyIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class ApiKeyArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class ApiKeyArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class ApiKeyArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class ApiKeyArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class ApiKeyArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyApiKeyArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class FindManyApiKeyArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class FindManyApiKeyArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class FindManyApiKeyArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class FindManyApiKeyArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    
    

class RateLimitIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""


class RateLimitIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""


class RateLimitIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""


class RateLimitIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""


class RateLimitIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class RateLimitArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class RateLimitArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class RateLimitArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class RateLimitArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class RateLimitArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyRateLimitArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class FindManyRateLimitArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class FindManyRateLimitArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class FindManyRateLimitArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class FindManyRateLimitArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    


FindManyMessageArgs = FindManyMessageArgsFromMessage
FindFirstMessageArgs = FindManyMessageArgsFromMessage


    

class MessageWhereInput(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    type: 'enums.MessageType'
    platform: 'enums.MessagePlatform'
    recipient: Union[_str, 'types.StringFilter']
    content: Union[_str, 'types.StringFilter']
    status: 'enums.MessageStatus'
    sentAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    deliveredAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    readAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    errorMessage: Union[None, _str, 'types.StringFilter']
    retryCount: Union[_int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    leadId: Union[None, _str, 'types.StringFilter']
    lead: 'LeadRelationFilter'
    campaignId: Union[None, _str, 'types.StringFilter']
    campaign: 'CampaignRelationFilter'
    whatsappNumberId: Union[None, _str, 'types.StringFilter']
    whatsappNumber: 'WhatsappNumberRelationFilter'
    whatsappTemplateId: Union[None, _str, 'types.StringFilter']
    whatsappTemplate: 'WhatsappTemplateRelationFilter'

    # should be noted that AND and NOT should be Union['MessageWhereInputRecursive1', List['MessageWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['MessageWhereInputRecursive1']
    OR: List['MessageWhereInputRecursive1']
    NOT: List['MessageWhereInputRecursive1']


class MessageWhereInputRecursive1(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    type: 'enums.MessageType'
    platform: 'enums.MessagePlatform'
    recipient: Union[_str, 'types.StringFilter']
    content: Union[_str, 'types.StringFilter']
    status: 'enums.MessageStatus'
    sentAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    deliveredAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    readAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    errorMessage: Union[None, _str, 'types.StringFilter']
    retryCount: Union[_int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    leadId: Union[None, _str, 'types.StringFilter']
    lead: 'LeadRelationFilter'
    campaignId: Union[None, _str, 'types.StringFilter']
    campaign: 'CampaignRelationFilter'
    whatsappNumberId: Union[None, _str, 'types.StringFilter']
    whatsappNumber: 'WhatsappNumberRelationFilter'
    whatsappTemplateId: Union[None, _str, 'types.StringFilter']
    whatsappTemplate: 'WhatsappTemplateRelationFilter'

    # should be noted that AND and NOT should be Union['MessageWhereInputRecursive2', List['MessageWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['MessageWhereInputRecursive2']
    OR: List['MessageWhereInputRecursive2']
    NOT: List['MessageWhereInputRecursive2']


class MessageWhereInputRecursive2(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    type: 'enums.MessageType'
    platform: 'enums.MessagePlatform'
    recipient: Union[_str, 'types.StringFilter']
    content: Union[_str, 'types.StringFilter']
    status: 'enums.MessageStatus'
    sentAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    deliveredAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    readAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    errorMessage: Union[None, _str, 'types.StringFilter']
    retryCount: Union[_int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    leadId: Union[None, _str, 'types.StringFilter']
    lead: 'LeadRelationFilter'
    campaignId: Union[None, _str, 'types.StringFilter']
    campaign: 'CampaignRelationFilter'
    whatsappNumberId: Union[None, _str, 'types.StringFilter']
    whatsappNumber: 'WhatsappNumberRelationFilter'
    whatsappTemplateId: Union[None, _str, 'types.StringFilter']
    whatsappTemplate: 'WhatsappTemplateRelationFilter'

    # should be noted that AND and NOT should be Union['MessageWhereInputRecursive3', List['MessageWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['MessageWhereInputRecursive3']
    OR: List['MessageWhereInputRecursive3']
    NOT: List['MessageWhereInputRecursive3']


class MessageWhereInputRecursive3(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    type: 'enums.MessageType'
    platform: 'enums.MessagePlatform'
    recipient: Union[_str, 'types.StringFilter']
    content: Union[_str, 'types.StringFilter']
    status: 'enums.MessageStatus'
    sentAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    deliveredAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    readAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    errorMessage: Union[None, _str, 'types.StringFilter']
    retryCount: Union[_int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    leadId: Union[None, _str, 'types.StringFilter']
    lead: 'LeadRelationFilter'
    campaignId: Union[None, _str, 'types.StringFilter']
    campaign: 'CampaignRelationFilter'
    whatsappNumberId: Union[None, _str, 'types.StringFilter']
    whatsappNumber: 'WhatsappNumberRelationFilter'
    whatsappTemplateId: Union[None, _str, 'types.StringFilter']
    whatsappTemplate: 'WhatsappTemplateRelationFilter'

    # should be noted that AND and NOT should be Union['MessageWhereInputRecursive4', List['MessageWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['MessageWhereInputRecursive4']
    OR: List['MessageWhereInputRecursive4']
    NOT: List['MessageWhereInputRecursive4']


class MessageWhereInputRecursive4(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    type: 'enums.MessageType'
    platform: 'enums.MessagePlatform'
    recipient: Union[_str, 'types.StringFilter']
    content: Union[_str, 'types.StringFilter']
    status: 'enums.MessageStatus'
    sentAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    deliveredAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    readAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    errorMessage: Union[None, _str, 'types.StringFilter']
    retryCount: Union[_int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    leadId: Union[None, _str, 'types.StringFilter']
    lead: 'LeadRelationFilter'
    campaignId: Union[None, _str, 'types.StringFilter']
    campaign: 'CampaignRelationFilter'
    whatsappNumberId: Union[None, _str, 'types.StringFilter']
    whatsappNumber: 'WhatsappNumberRelationFilter'
    whatsappTemplateId: Union[None, _str, 'types.StringFilter']
    whatsappTemplate: 'WhatsappTemplateRelationFilter'



# aggregate Message types


    

class MessageScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.MessageType'
    platform: 'enums.MessagePlatform'
    recipient: Union[_str, 'types.StringWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.MessageStatus'
    sentAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deliveredAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    readAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    errorMessage: Union[_str, 'types.StringWithAggregatesFilter']
    retryCount: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    leadId: Union[_str, 'types.StringWithAggregatesFilter']
    campaignId: Union[_str, 'types.StringWithAggregatesFilter']
    whatsappNumberId: Union[_str, 'types.StringWithAggregatesFilter']
    whatsappTemplateId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['MessageScalarWhereWithAggregatesInputRecursive1']
    OR: List['MessageScalarWhereWithAggregatesInputRecursive1']
    NOT: List['MessageScalarWhereWithAggregatesInputRecursive1']


class MessageScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.MessageType'
    platform: 'enums.MessagePlatform'
    recipient: Union[_str, 'types.StringWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.MessageStatus'
    sentAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deliveredAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    readAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    errorMessage: Union[_str, 'types.StringWithAggregatesFilter']
    retryCount: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    leadId: Union[_str, 'types.StringWithAggregatesFilter']
    campaignId: Union[_str, 'types.StringWithAggregatesFilter']
    whatsappNumberId: Union[_str, 'types.StringWithAggregatesFilter']
    whatsappTemplateId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['MessageScalarWhereWithAggregatesInputRecursive2']
    OR: List['MessageScalarWhereWithAggregatesInputRecursive2']
    NOT: List['MessageScalarWhereWithAggregatesInputRecursive2']


class MessageScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.MessageType'
    platform: 'enums.MessagePlatform'
    recipient: Union[_str, 'types.StringWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.MessageStatus'
    sentAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deliveredAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    readAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    errorMessage: Union[_str, 'types.StringWithAggregatesFilter']
    retryCount: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    leadId: Union[_str, 'types.StringWithAggregatesFilter']
    campaignId: Union[_str, 'types.StringWithAggregatesFilter']
    whatsappNumberId: Union[_str, 'types.StringWithAggregatesFilter']
    whatsappTemplateId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['MessageScalarWhereWithAggregatesInputRecursive3']
    OR: List['MessageScalarWhereWithAggregatesInputRecursive3']
    NOT: List['MessageScalarWhereWithAggregatesInputRecursive3']


class MessageScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.MessageType'
    platform: 'enums.MessagePlatform'
    recipient: Union[_str, 'types.StringWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.MessageStatus'
    sentAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deliveredAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    readAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    errorMessage: Union[_str, 'types.StringWithAggregatesFilter']
    retryCount: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    leadId: Union[_str, 'types.StringWithAggregatesFilter']
    campaignId: Union[_str, 'types.StringWithAggregatesFilter']
    whatsappNumberId: Union[_str, 'types.StringWithAggregatesFilter']
    whatsappTemplateId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['MessageScalarWhereWithAggregatesInputRecursive4']
    OR: List['MessageScalarWhereWithAggregatesInputRecursive4']
    NOT: List['MessageScalarWhereWithAggregatesInputRecursive4']


class MessageScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.MessageType'
    platform: 'enums.MessagePlatform'
    recipient: Union[_str, 'types.StringWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.MessageStatus'
    sentAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deliveredAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    readAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    errorMessage: Union[_str, 'types.StringWithAggregatesFilter']
    retryCount: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    leadId: Union[_str, 'types.StringWithAggregatesFilter']
    campaignId: Union[_str, 'types.StringWithAggregatesFilter']
    whatsappNumberId: Union[_str, 'types.StringWithAggregatesFilter']
    whatsappTemplateId: Union[_str, 'types.StringWithAggregatesFilter']



class MessageGroupByOutput(TypedDict, total=False):
    id: _str
    type: 'enums.MessageType'
    platform: 'enums.MessagePlatform'
    recipient: _str
    content: _str
    status: 'enums.MessageStatus'
    sentAt: datetime.datetime
    deliveredAt: datetime.datetime
    readAt: datetime.datetime
    errorMessage: _str
    retryCount: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    leadId: _str
    campaignId: _str
    whatsappNumberId: _str
    whatsappTemplateId: _str
    _sum: 'MessageSumAggregateOutput'
    _avg: 'MessageAvgAggregateOutput'
    _min: 'MessageMinAggregateOutput'
    _max: 'MessageMaxAggregateOutput'
    _count: 'MessageCountAggregateOutput'


class MessageAvgAggregateOutput(TypedDict, total=False):
    """Message output for aggregating averages"""
    retryCount: float


class MessageSumAggregateOutput(TypedDict, total=False):
    """Message output for aggregating sums"""
    retryCount: _int


class MessageScalarAggregateOutput(TypedDict, total=False):
    """Message output including scalar fields"""
    id: _str
    type: 'enums.MessageType'
    platform: 'enums.MessagePlatform'
    recipient: _str
    content: _str
    status: 'enums.MessageStatus'
    sentAt: datetime.datetime
    deliveredAt: datetime.datetime
    readAt: datetime.datetime
    errorMessage: _str
    retryCount: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    leadId: _str
    campaignId: _str
    whatsappNumberId: _str
    whatsappTemplateId: _str


MessageMinAggregateOutput = MessageScalarAggregateOutput
MessageMaxAggregateOutput = MessageScalarAggregateOutput


class MessageMaxAggregateInput(TypedDict, total=False):
    """Message input for aggregating by max"""
    id: bool
    type: bool
    platform: bool
    recipient: bool
    content: bool
    status: bool
    sentAt: bool
    deliveredAt: bool
    readAt: bool
    errorMessage: bool
    retryCount: bool
    createdAt: bool
    updatedAt: bool
    leadId: bool
    campaignId: bool
    whatsappNumberId: bool
    whatsappTemplateId: bool


class MessageMinAggregateInput(TypedDict, total=False):
    """Message input for aggregating by min"""
    id: bool
    type: bool
    platform: bool
    recipient: bool
    content: bool
    status: bool
    sentAt: bool
    deliveredAt: bool
    readAt: bool
    errorMessage: bool
    retryCount: bool
    createdAt: bool
    updatedAt: bool
    leadId: bool
    campaignId: bool
    whatsappNumberId: bool
    whatsappTemplateId: bool


class MessageNumberAggregateInput(TypedDict, total=False):
    """Message input for aggregating numbers"""
    retryCount: bool


MessageAvgAggregateInput = MessageNumberAggregateInput
MessageSumAggregateInput = MessageNumberAggregateInput


MessageCountAggregateInput = TypedDict(
    'MessageCountAggregateInput',
    {
        'id': bool,
        'type': bool,
        'platform': bool,
        'recipient': bool,
        'content': bool,
        'status': bool,
        'sentAt': bool,
        'deliveredAt': bool,
        'readAt': bool,
        'errorMessage': bool,
        'retryCount': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'leadId': bool,
        'campaignId': bool,
        'whatsappNumberId': bool,
        'whatsappTemplateId': bool,
        '_all': bool,
    },
    total=False,
)

MessageCountAggregateOutput = TypedDict(
    'MessageCountAggregateOutput',
    {
        'id': int,
        'type': int,
        'platform': int,
        'recipient': int,
        'content': int,
        'status': int,
        'sentAt': int,
        'deliveredAt': int,
        'readAt': int,
        'errorMessage': int,
        'retryCount': int,
        'createdAt': int,
        'updatedAt': int,
        'leadId': int,
        'campaignId': int,
        'whatsappNumberId': int,
        'whatsappTemplateId': int,
        '_all': int,
    },
    total=False,
)


MessageKeys = Literal[
    'id',
    'type',
    'platform',
    'recipient',
    'content',
    'status',
    'sentAt',
    'deliveredAt',
    'readAt',
    'errorMessage',
    'retryCount',
    'createdAt',
    'updatedAt',
    'leadId',
    'lead',
    'campaignId',
    'campaign',
    'whatsappNumberId',
    'whatsappNumber',
    'whatsappTemplateId',
    'whatsappTemplate',
]
MessageScalarFieldKeys = Literal[
    'id',
    'type',
    'platform',
    'recipient',
    'content',
    'status',
    'sentAt',
    'deliveredAt',
    'readAt',
    'errorMessage',
    'retryCount',
    'createdAt',
    'updatedAt',
    'leadId',
    'campaignId',
    'whatsappNumberId',
    'whatsappTemplateId',
]
MessageScalarFieldKeysT = TypeVar('MessageScalarFieldKeysT', bound=MessageScalarFieldKeys)

MessageRelationalFieldKeys = Literal[
        'lead',
        'campaign',
        'whatsappNumber',
        'whatsappTemplate',
    ]

# Campaign types

class CampaignOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Campaign create method"""
    id: _str
    description: Optional[_str]
    status: 'enums.CampaignStatus'
    scheduledAt: Optional[datetime.datetime]
    startedAt: Optional[datetime.datetime]
    completedAt: Optional[datetime.datetime]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    userId: _str
    user: 'UserCreateNestedWithoutRelationsInput'
    messages: 'MessageCreateManyNestedWithoutRelationsInput'


class CampaignCreateInput(CampaignOptionalCreateInput):
    """Required arguments to the Campaign create method"""
    name: _str
    type: 'enums.CampaignType'
    targetAudience: 'fields.Json'
    messageTemplate: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class CampaignOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Campaign create method, without relations"""
    id: _str
    description: Optional[_str]
    status: 'enums.CampaignStatus'
    scheduledAt: Optional[datetime.datetime]
    startedAt: Optional[datetime.datetime]
    completedAt: Optional[datetime.datetime]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    userId: _str


class CampaignCreateWithoutRelationsInput(CampaignOptionalCreateWithoutRelationsInput):
    """Required arguments to the Campaign create method, without relations"""
    name: _str
    type: 'enums.CampaignType'
    targetAudience: 'fields.Json'
    messageTemplate: _str

class CampaignConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'CampaignCreateWithoutRelationsInput'
    where: 'CampaignWhereUniqueInput'

class CampaignCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'CampaignCreateWithoutRelationsInput'
    connect: 'CampaignWhereUniqueInput'
    connect_or_create: 'CampaignConnectOrCreateWithoutRelationsInput'


class CampaignCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['CampaignCreateWithoutRelationsInput', List['CampaignCreateWithoutRelationsInput']]
    connect: Union['CampaignWhereUniqueInput', List['CampaignWhereUniqueInput']]
    connect_or_create: Union['CampaignConnectOrCreateWithoutRelationsInput', List['CampaignConnectOrCreateWithoutRelationsInput']]

_CampaignWhereUnique_id_Input = TypedDict(
    '_CampaignWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

CampaignWhereUniqueInput = _CampaignWhereUnique_id_Input


class CampaignUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    name: _str
    description: Optional[_str]
    type: 'enums.CampaignType'
    status: 'enums.CampaignStatus'
    scheduledAt: Optional[datetime.datetime]
    startedAt: Optional[datetime.datetime]
    completedAt: Optional[datetime.datetime]
    targetAudience: 'fields.Json'
    messageTemplate: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    user: 'UserUpdateOneWithoutRelationsInput'
    messages: 'MessageUpdateManyWithoutRelationsInput'


class CampaignUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    name: _str
    description: Optional[_str]
    type: 'enums.CampaignType'
    status: 'enums.CampaignStatus'
    scheduledAt: Optional[datetime.datetime]
    startedAt: Optional[datetime.datetime]
    completedAt: Optional[datetime.datetime]
    targetAudience: 'fields.Json'
    messageTemplate: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class CampaignUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['CampaignCreateWithoutRelationsInput']
    connect: List['CampaignWhereUniqueInput']
    connect_or_create: List['CampaignConnectOrCreateWithoutRelationsInput']
    set: List['CampaignWhereUniqueInput']
    disconnect: List['CampaignWhereUniqueInput']
    delete: List['CampaignWhereUniqueInput']

    # TODO
    # update: List['CampaignUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['CampaignUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['CampaignScalarWhereInput']
    # upsert: List['CampaignUpserteWithWhereUniqueWithoutRelationsInput']


class CampaignUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'CampaignCreateWithoutRelationsInput'
    connect: 'CampaignWhereUniqueInput'
    connect_or_create: 'CampaignConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'CampaignUpdateInput'
    # upsert: 'CampaignUpsertWithoutRelationsInput'


class CampaignUpsertInput(TypedDict):
    create: 'CampaignCreateInput'
    update: 'CampaignUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Campaign_id_OrderByInput = TypedDict(
    '_Campaign_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Campaign_name_OrderByInput = TypedDict(
    '_Campaign_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_Campaign_description_OrderByInput = TypedDict(
    '_Campaign_description_OrderByInput',
    {
        'description': 'SortOrder',
    },
    total=True
)

_Campaign_type_OrderByInput = TypedDict(
    '_Campaign_type_OrderByInput',
    {
        'type': 'SortOrder',
    },
    total=True
)

_Campaign_status_OrderByInput = TypedDict(
    '_Campaign_status_OrderByInput',
    {
        'status': 'SortOrder',
    },
    total=True
)

_Campaign_scheduledAt_OrderByInput = TypedDict(
    '_Campaign_scheduledAt_OrderByInput',
    {
        'scheduledAt': 'SortOrder',
    },
    total=True
)

_Campaign_startedAt_OrderByInput = TypedDict(
    '_Campaign_startedAt_OrderByInput',
    {
        'startedAt': 'SortOrder',
    },
    total=True
)

_Campaign_completedAt_OrderByInput = TypedDict(
    '_Campaign_completedAt_OrderByInput',
    {
        'completedAt': 'SortOrder',
    },
    total=True
)

_Campaign_targetAudience_OrderByInput = TypedDict(
    '_Campaign_targetAudience_OrderByInput',
    {
        'targetAudience': 'SortOrder',
    },
    total=True
)

_Campaign_messageTemplate_OrderByInput = TypedDict(
    '_Campaign_messageTemplate_OrderByInput',
    {
        'messageTemplate': 'SortOrder',
    },
    total=True
)

_Campaign_createdAt_OrderByInput = TypedDict(
    '_Campaign_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Campaign_updatedAt_OrderByInput = TypedDict(
    '_Campaign_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Campaign_userId_OrderByInput = TypedDict(
    '_Campaign_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_Campaign_RelevanceInner = TypedDict(
    '_Campaign_RelevanceInner',
    {
        'fields': 'List[CampaignScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Campaign_RelevanceOrderByInput = TypedDict(
    '_Campaign_RelevanceOrderByInput',
    {
        '_relevance': '_Campaign_RelevanceInner',
    },
    total=True
)

CampaignOrderByInput = Union[
    '_Campaign_id_OrderByInput',
    '_Campaign_name_OrderByInput',
    '_Campaign_description_OrderByInput',
    '_Campaign_type_OrderByInput',
    '_Campaign_status_OrderByInput',
    '_Campaign_scheduledAt_OrderByInput',
    '_Campaign_startedAt_OrderByInput',
    '_Campaign_completedAt_OrderByInput',
    '_Campaign_targetAudience_OrderByInput',
    '_Campaign_messageTemplate_OrderByInput',
    '_Campaign_createdAt_OrderByInput',
    '_Campaign_updatedAt_OrderByInput',
    '_Campaign_userId_OrderByInput',
    '_Campaign_RelevanceOrderByInput',
]



# recursive Campaign types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

CampaignRelationFilter = TypedDict(
    'CampaignRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class CampaignListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class CampaignInclude(TypedDict, total=False):
    """Campaign relational arguments"""
    user: Union[bool, 'UserArgsFromCampaign']
    messages: Union[bool, 'FindManyMessageArgsFromCampaign']


    

class UserIncludeFromCampaign(TypedDict, total=False):
    """Relational arguments for Campaign"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromCampaignRecursive1']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromCampaignRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromCampaignRecursive1']
    campaigns: Union[bool, 'FindManyCampaignArgsFromCampaignRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromCampaignRecursive1']


class UserIncludeFromCampaignRecursive1(TypedDict, total=False):
    """Relational arguments for Campaign"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromCampaignRecursive2']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromCampaignRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromCampaignRecursive2']
    campaigns: Union[bool, 'FindManyCampaignArgsFromCampaignRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromCampaignRecursive2']


class UserIncludeFromCampaignRecursive2(TypedDict, total=False):
    """Relational arguments for Campaign"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromCampaignRecursive3']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromCampaignRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromCampaignRecursive3']
    campaigns: Union[bool, 'FindManyCampaignArgsFromCampaignRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromCampaignRecursive3']


class UserIncludeFromCampaignRecursive3(TypedDict, total=False):
    """Relational arguments for Campaign"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromCampaignRecursive4']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromCampaignRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromCampaignRecursive4']
    campaigns: Union[bool, 'FindManyCampaignArgsFromCampaignRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromCampaignRecursive4']


class UserIncludeFromCampaignRecursive4(TypedDict, total=False):
    """Relational arguments for Campaign"""

    

class UserArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    
    

class FindManyUserArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class FacebookPageIncludeFromCampaign(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive1']
    posts: Union[bool, 'FindManyFacebookPostArgsFromCampaignRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromCampaignRecursive1']


class FacebookPageIncludeFromCampaignRecursive1(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive2']
    posts: Union[bool, 'FindManyFacebookPostArgsFromCampaignRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromCampaignRecursive2']


class FacebookPageIncludeFromCampaignRecursive2(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive3']
    posts: Union[bool, 'FindManyFacebookPostArgsFromCampaignRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromCampaignRecursive3']


class FacebookPageIncludeFromCampaignRecursive3(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive4']
    posts: Union[bool, 'FindManyFacebookPostArgsFromCampaignRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromCampaignRecursive4']


class FacebookPageIncludeFromCampaignRecursive4(TypedDict, total=False):
    """Relational arguments for Campaign"""

    

class FacebookPageArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FacebookPageArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FacebookPageArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FacebookPageArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FacebookPageArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    
    

class FindManyFacebookPageArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FindManyFacebookPageArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FindManyFacebookPageArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FindManyFacebookPageArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FindManyFacebookPageArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    
    

class FacebookPostIncludeFromCampaign(TypedDict, total=False):
    """Relational arguments for Campaign"""
    facebookPage: Union[bool, 'FacebookPageArgsFromCampaignRecursive1']


class FacebookPostIncludeFromCampaignRecursive1(TypedDict, total=False):
    """Relational arguments for Campaign"""
    facebookPage: Union[bool, 'FacebookPageArgsFromCampaignRecursive2']


class FacebookPostIncludeFromCampaignRecursive2(TypedDict, total=False):
    """Relational arguments for Campaign"""
    facebookPage: Union[bool, 'FacebookPageArgsFromCampaignRecursive3']


class FacebookPostIncludeFromCampaignRecursive3(TypedDict, total=False):
    """Relational arguments for Campaign"""
    facebookPage: Union[bool, 'FacebookPageArgsFromCampaignRecursive4']


class FacebookPostIncludeFromCampaignRecursive4(TypedDict, total=False):
    """Relational arguments for Campaign"""

    

class FacebookPostArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FacebookPostArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FacebookPostArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FacebookPostArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FacebookPostArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    
    

class FindManyFacebookPostArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FindManyFacebookPostArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FindManyFacebookPostArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FindManyFacebookPostArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FindManyFacebookPostArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    
    

class WhatsappNumberIncludeFromCampaign(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive1']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromCampaignRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromCampaignRecursive1']


class WhatsappNumberIncludeFromCampaignRecursive1(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive2']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromCampaignRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromCampaignRecursive2']


class WhatsappNumberIncludeFromCampaignRecursive2(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive3']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromCampaignRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromCampaignRecursive3']


class WhatsappNumberIncludeFromCampaignRecursive3(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive4']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromCampaignRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromCampaignRecursive4']


class WhatsappNumberIncludeFromCampaignRecursive4(TypedDict, total=False):
    """Relational arguments for Campaign"""

    

class WhatsappNumberArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class WhatsappNumberArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class WhatsappNumberArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class WhatsappNumberArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class WhatsappNumberArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    
    

class FindManyWhatsappNumberArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class FindManyWhatsappNumberArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class FindManyWhatsappNumberArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class FindManyWhatsappNumberArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class FindManyWhatsappNumberArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    
    

class WhatsappTemplateIncludeFromCampaign(TypedDict, total=False):
    """Relational arguments for Campaign"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromCampaignRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromCampaignRecursive1']


class WhatsappTemplateIncludeFromCampaignRecursive1(TypedDict, total=False):
    """Relational arguments for Campaign"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromCampaignRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromCampaignRecursive2']


class WhatsappTemplateIncludeFromCampaignRecursive2(TypedDict, total=False):
    """Relational arguments for Campaign"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromCampaignRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromCampaignRecursive3']


class WhatsappTemplateIncludeFromCampaignRecursive3(TypedDict, total=False):
    """Relational arguments for Campaign"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromCampaignRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromCampaignRecursive4']


class WhatsappTemplateIncludeFromCampaignRecursive4(TypedDict, total=False):
    """Relational arguments for Campaign"""

    

class WhatsappTemplateArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class WhatsappTemplateArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class WhatsappTemplateArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class WhatsappTemplateArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class WhatsappTemplateArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    
    

class FindManyWhatsappTemplateArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class FindManyWhatsappTemplateArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class FindManyWhatsappTemplateArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class FindManyWhatsappTemplateArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class FindManyWhatsappTemplateArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    
    

class LeadIncludeFromCampaign(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive1']
    facebookPage: Union[bool, 'FacebookPageArgsFromCampaignRecursive1']
    tags: Union[bool, 'FindManyLeadTagArgsFromCampaignRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromCampaignRecursive1']


class LeadIncludeFromCampaignRecursive1(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive2']
    facebookPage: Union[bool, 'FacebookPageArgsFromCampaignRecursive2']
    tags: Union[bool, 'FindManyLeadTagArgsFromCampaignRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromCampaignRecursive2']


class LeadIncludeFromCampaignRecursive2(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive3']
    facebookPage: Union[bool, 'FacebookPageArgsFromCampaignRecursive3']
    tags: Union[bool, 'FindManyLeadTagArgsFromCampaignRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromCampaignRecursive3']


class LeadIncludeFromCampaignRecursive3(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive4']
    facebookPage: Union[bool, 'FacebookPageArgsFromCampaignRecursive4']
    tags: Union[bool, 'FindManyLeadTagArgsFromCampaignRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromCampaignRecursive4']


class LeadIncludeFromCampaignRecursive4(TypedDict, total=False):
    """Relational arguments for Campaign"""

    

class LeadArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'LeadIncludeFromLeadRecursive1'


class LeadArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'LeadIncludeFromLeadRecursive2'


class LeadArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'LeadIncludeFromLeadRecursive3'


class LeadArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'LeadIncludeFromLeadRecursive4'


class LeadArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    
    

class FindManyLeadArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive1'


class FindManyLeadArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive2'


class FindManyLeadArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive3'


class FindManyLeadArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive4'


class FindManyLeadArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    
    

class TagIncludeFromCampaign(TypedDict, total=False):
    """Relational arguments for Campaign"""
    leads: Union[bool, 'FindManyLeadTagArgsFromCampaignRecursive1']


class TagIncludeFromCampaignRecursive1(TypedDict, total=False):
    """Relational arguments for Campaign"""
    leads: Union[bool, 'FindManyLeadTagArgsFromCampaignRecursive2']


class TagIncludeFromCampaignRecursive2(TypedDict, total=False):
    """Relational arguments for Campaign"""
    leads: Union[bool, 'FindManyLeadTagArgsFromCampaignRecursive3']


class TagIncludeFromCampaignRecursive3(TypedDict, total=False):
    """Relational arguments for Campaign"""
    leads: Union[bool, 'FindManyLeadTagArgsFromCampaignRecursive4']


class TagIncludeFromCampaignRecursive4(TypedDict, total=False):
    """Relational arguments for Campaign"""

    

class TagArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'TagIncludeFromTagRecursive1'


class TagArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'TagIncludeFromTagRecursive2'


class TagArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'TagIncludeFromTagRecursive3'


class TagArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'TagIncludeFromTagRecursive4'


class TagArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    
    

class FindManyTagArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive1'


class FindManyTagArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive2'


class FindManyTagArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive3'


class FindManyTagArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive4'


class FindManyTagArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    
    

class LeadTagIncludeFromCampaign(TypedDict, total=False):
    """Relational arguments for Campaign"""
    lead: Union[bool, 'LeadArgsFromCampaignRecursive1']
    tag: Union[bool, 'TagArgsFromCampaignRecursive1']


class LeadTagIncludeFromCampaignRecursive1(TypedDict, total=False):
    """Relational arguments for Campaign"""
    lead: Union[bool, 'LeadArgsFromCampaignRecursive2']
    tag: Union[bool, 'TagArgsFromCampaignRecursive2']


class LeadTagIncludeFromCampaignRecursive2(TypedDict, total=False):
    """Relational arguments for Campaign"""
    lead: Union[bool, 'LeadArgsFromCampaignRecursive3']
    tag: Union[bool, 'TagArgsFromCampaignRecursive3']


class LeadTagIncludeFromCampaignRecursive3(TypedDict, total=False):
    """Relational arguments for Campaign"""
    lead: Union[bool, 'LeadArgsFromCampaignRecursive4']
    tag: Union[bool, 'TagArgsFromCampaignRecursive4']


class LeadTagIncludeFromCampaignRecursive4(TypedDict, total=False):
    """Relational arguments for Campaign"""

    

class LeadTagArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class LeadTagArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class LeadTagArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class LeadTagArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class LeadTagArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    
    

class FindManyLeadTagArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class FindManyLeadTagArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class FindManyLeadTagArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class FindManyLeadTagArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class FindManyLeadTagArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    
    

class MessageIncludeFromCampaign(TypedDict, total=False):
    """Relational arguments for Campaign"""
    lead: Union[bool, 'LeadArgsFromCampaignRecursive1']
    campaign: Union[bool, 'CampaignArgsFromCampaignRecursive1']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromCampaignRecursive1']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromCampaignRecursive1']


class MessageIncludeFromCampaignRecursive1(TypedDict, total=False):
    """Relational arguments for Campaign"""
    lead: Union[bool, 'LeadArgsFromCampaignRecursive2']
    campaign: Union[bool, 'CampaignArgsFromCampaignRecursive2']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromCampaignRecursive2']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromCampaignRecursive2']


class MessageIncludeFromCampaignRecursive2(TypedDict, total=False):
    """Relational arguments for Campaign"""
    lead: Union[bool, 'LeadArgsFromCampaignRecursive3']
    campaign: Union[bool, 'CampaignArgsFromCampaignRecursive3']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromCampaignRecursive3']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromCampaignRecursive3']


class MessageIncludeFromCampaignRecursive3(TypedDict, total=False):
    """Relational arguments for Campaign"""
    lead: Union[bool, 'LeadArgsFromCampaignRecursive4']
    campaign: Union[bool, 'CampaignArgsFromCampaignRecursive4']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromCampaignRecursive4']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromCampaignRecursive4']


class MessageIncludeFromCampaignRecursive4(TypedDict, total=False):
    """Relational arguments for Campaign"""

    

class MessageArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    
    

class FindManyMessageArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class CampaignIncludeFromCampaign(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromCampaignRecursive1']


class CampaignIncludeFromCampaignRecursive1(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromCampaignRecursive2']


class CampaignIncludeFromCampaignRecursive2(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromCampaignRecursive3']


class CampaignIncludeFromCampaignRecursive3(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromCampaignRecursive4']


class CampaignIncludeFromCampaignRecursive4(TypedDict, total=False):
    """Relational arguments for Campaign"""

    

class CampaignArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'CampaignIncludeFromCampaignRecursive1'


class CampaignArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'CampaignIncludeFromCampaignRecursive2'


class CampaignArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'CampaignIncludeFromCampaignRecursive3'


class CampaignArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'CampaignIncludeFromCampaignRecursive4'


class CampaignArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    
    

class FindManyCampaignArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive1'


class FindManyCampaignArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive2'


class FindManyCampaignArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive3'


class FindManyCampaignArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive4'


class FindManyCampaignArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    
    

class AuditLogIncludeFromCampaign(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive1']


class AuditLogIncludeFromCampaignRecursive1(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive2']


class AuditLogIncludeFromCampaignRecursive2(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive3']


class AuditLogIncludeFromCampaignRecursive3(TypedDict, total=False):
    """Relational arguments for Campaign"""
    user: Union[bool, 'UserArgsFromCampaignRecursive4']


class AuditLogIncludeFromCampaignRecursive4(TypedDict, total=False):
    """Relational arguments for Campaign"""

    

class AuditLogArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    
    

class FindManyAuditLogArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    
    

class ApiKeyIncludeFromCampaign(TypedDict, total=False):
    """Relational arguments for Campaign"""


class ApiKeyIncludeFromCampaignRecursive1(TypedDict, total=False):
    """Relational arguments for Campaign"""


class ApiKeyIncludeFromCampaignRecursive2(TypedDict, total=False):
    """Relational arguments for Campaign"""


class ApiKeyIncludeFromCampaignRecursive3(TypedDict, total=False):
    """Relational arguments for Campaign"""


class ApiKeyIncludeFromCampaignRecursive4(TypedDict, total=False):
    """Relational arguments for Campaign"""

    

class ApiKeyArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class ApiKeyArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class ApiKeyArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class ApiKeyArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class ApiKeyArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    
    

class FindManyApiKeyArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class FindManyApiKeyArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class FindManyApiKeyArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class FindManyApiKeyArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class FindManyApiKeyArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    
    

class RateLimitIncludeFromCampaign(TypedDict, total=False):
    """Relational arguments for Campaign"""


class RateLimitIncludeFromCampaignRecursive1(TypedDict, total=False):
    """Relational arguments for Campaign"""


class RateLimitIncludeFromCampaignRecursive2(TypedDict, total=False):
    """Relational arguments for Campaign"""


class RateLimitIncludeFromCampaignRecursive3(TypedDict, total=False):
    """Relational arguments for Campaign"""


class RateLimitIncludeFromCampaignRecursive4(TypedDict, total=False):
    """Relational arguments for Campaign"""

    

class RateLimitArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class RateLimitArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class RateLimitArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class RateLimitArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class RateLimitArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    
    

class FindManyRateLimitArgsFromCampaign(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class FindManyRateLimitArgsFromCampaignRecursive1(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class FindManyRateLimitArgsFromCampaignRecursive2(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class FindManyRateLimitArgsFromCampaignRecursive3(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class FindManyRateLimitArgsFromCampaignRecursive4(TypedDict, total=False):
    """Arguments for Campaign"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    


FindManyCampaignArgs = FindManyCampaignArgsFromCampaign
FindFirstCampaignArgs = FindManyCampaignArgsFromCampaign


    

class CampaignWhereInput(TypedDict, total=False):
    """Campaign arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    type: 'enums.CampaignType'
    status: 'enums.CampaignStatus'
    scheduledAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    startedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    targetAudience: Union['fields.Json', 'types.JsonFilter']
    messageTemplate: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['CampaignWhereInputRecursive1', List['CampaignWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['CampaignWhereInputRecursive1']
    OR: List['CampaignWhereInputRecursive1']
    NOT: List['CampaignWhereInputRecursive1']


class CampaignWhereInputRecursive1(TypedDict, total=False):
    """Campaign arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    type: 'enums.CampaignType'
    status: 'enums.CampaignStatus'
    scheduledAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    startedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    targetAudience: Union['fields.Json', 'types.JsonFilter']
    messageTemplate: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['CampaignWhereInputRecursive2', List['CampaignWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['CampaignWhereInputRecursive2']
    OR: List['CampaignWhereInputRecursive2']
    NOT: List['CampaignWhereInputRecursive2']


class CampaignWhereInputRecursive2(TypedDict, total=False):
    """Campaign arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    type: 'enums.CampaignType'
    status: 'enums.CampaignStatus'
    scheduledAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    startedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    targetAudience: Union['fields.Json', 'types.JsonFilter']
    messageTemplate: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['CampaignWhereInputRecursive3', List['CampaignWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['CampaignWhereInputRecursive3']
    OR: List['CampaignWhereInputRecursive3']
    NOT: List['CampaignWhereInputRecursive3']


class CampaignWhereInputRecursive3(TypedDict, total=False):
    """Campaign arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    type: 'enums.CampaignType'
    status: 'enums.CampaignStatus'
    scheduledAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    startedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    targetAudience: Union['fields.Json', 'types.JsonFilter']
    messageTemplate: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['CampaignWhereInputRecursive4', List['CampaignWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['CampaignWhereInputRecursive4']
    OR: List['CampaignWhereInputRecursive4']
    NOT: List['CampaignWhereInputRecursive4']


class CampaignWhereInputRecursive4(TypedDict, total=False):
    """Campaign arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    type: 'enums.CampaignType'
    status: 'enums.CampaignStatus'
    scheduledAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    startedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    targetAudience: Union['fields.Json', 'types.JsonFilter']
    messageTemplate: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    messages: 'MessageListRelationFilter'



# aggregate Campaign types


    

class CampaignScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Campaign arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.CampaignType'
    status: 'enums.CampaignStatus'
    scheduledAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    targetAudience: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    messageTemplate: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['CampaignScalarWhereWithAggregatesInputRecursive1']
    OR: List['CampaignScalarWhereWithAggregatesInputRecursive1']
    NOT: List['CampaignScalarWhereWithAggregatesInputRecursive1']


class CampaignScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Campaign arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.CampaignType'
    status: 'enums.CampaignStatus'
    scheduledAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    targetAudience: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    messageTemplate: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['CampaignScalarWhereWithAggregatesInputRecursive2']
    OR: List['CampaignScalarWhereWithAggregatesInputRecursive2']
    NOT: List['CampaignScalarWhereWithAggregatesInputRecursive2']


class CampaignScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Campaign arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.CampaignType'
    status: 'enums.CampaignStatus'
    scheduledAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    targetAudience: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    messageTemplate: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['CampaignScalarWhereWithAggregatesInputRecursive3']
    OR: List['CampaignScalarWhereWithAggregatesInputRecursive3']
    NOT: List['CampaignScalarWhereWithAggregatesInputRecursive3']


class CampaignScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Campaign arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.CampaignType'
    status: 'enums.CampaignStatus'
    scheduledAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    targetAudience: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    messageTemplate: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['CampaignScalarWhereWithAggregatesInputRecursive4']
    OR: List['CampaignScalarWhereWithAggregatesInputRecursive4']
    NOT: List['CampaignScalarWhereWithAggregatesInputRecursive4']


class CampaignScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Campaign arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.CampaignType'
    status: 'enums.CampaignStatus'
    scheduledAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    targetAudience: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    messageTemplate: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']



class CampaignGroupByOutput(TypedDict, total=False):
    id: _str
    name: _str
    description: _str
    type: 'enums.CampaignType'
    status: 'enums.CampaignStatus'
    scheduledAt: datetime.datetime
    startedAt: datetime.datetime
    completedAt: datetime.datetime
    targetAudience: 'fields.Json'
    messageTemplate: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    userId: _str
    _sum: 'CampaignSumAggregateOutput'
    _avg: 'CampaignAvgAggregateOutput'
    _min: 'CampaignMinAggregateOutput'
    _max: 'CampaignMaxAggregateOutput'
    _count: 'CampaignCountAggregateOutput'


class CampaignAvgAggregateOutput(TypedDict, total=False):
    """Campaign output for aggregating averages"""


class CampaignSumAggregateOutput(TypedDict, total=False):
    """Campaign output for aggregating sums"""


class CampaignScalarAggregateOutput(TypedDict, total=False):
    """Campaign output including scalar fields"""
    id: _str
    name: _str
    description: _str
    type: 'enums.CampaignType'
    status: 'enums.CampaignStatus'
    scheduledAt: datetime.datetime
    startedAt: datetime.datetime
    completedAt: datetime.datetime
    targetAudience: 'fields.Json'
    messageTemplate: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    userId: _str


CampaignMinAggregateOutput = CampaignScalarAggregateOutput
CampaignMaxAggregateOutput = CampaignScalarAggregateOutput


class CampaignMaxAggregateInput(TypedDict, total=False):
    """Campaign input for aggregating by max"""
    id: bool
    name: bool
    description: bool
    type: bool
    status: bool
    scheduledAt: bool
    startedAt: bool
    completedAt: bool
    targetAudience: bool
    messageTemplate: bool
    createdAt: bool
    updatedAt: bool
    userId: bool


class CampaignMinAggregateInput(TypedDict, total=False):
    """Campaign input for aggregating by min"""
    id: bool
    name: bool
    description: bool
    type: bool
    status: bool
    scheduledAt: bool
    startedAt: bool
    completedAt: bool
    targetAudience: bool
    messageTemplate: bool
    createdAt: bool
    updatedAt: bool
    userId: bool


class CampaignNumberAggregateInput(TypedDict, total=False):
    """Campaign input for aggregating numbers"""


CampaignAvgAggregateInput = CampaignNumberAggregateInput
CampaignSumAggregateInput = CampaignNumberAggregateInput


CampaignCountAggregateInput = TypedDict(
    'CampaignCountAggregateInput',
    {
        'id': bool,
        'name': bool,
        'description': bool,
        'type': bool,
        'status': bool,
        'scheduledAt': bool,
        'startedAt': bool,
        'completedAt': bool,
        'targetAudience': bool,
        'messageTemplate': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'userId': bool,
        '_all': bool,
    },
    total=False,
)

CampaignCountAggregateOutput = TypedDict(
    'CampaignCountAggregateOutput',
    {
        'id': int,
        'name': int,
        'description': int,
        'type': int,
        'status': int,
        'scheduledAt': int,
        'startedAt': int,
        'completedAt': int,
        'targetAudience': int,
        'messageTemplate': int,
        'createdAt': int,
        'updatedAt': int,
        'userId': int,
        '_all': int,
    },
    total=False,
)


CampaignKeys = Literal[
    'id',
    'name',
    'description',
    'type',
    'status',
    'scheduledAt',
    'startedAt',
    'completedAt',
    'targetAudience',
    'messageTemplate',
    'createdAt',
    'updatedAt',
    'userId',
    'user',
    'messages',
]
CampaignScalarFieldKeys = Literal[
    'id',
    'name',
    'description',
    'type',
    'status',
    'scheduledAt',
    'startedAt',
    'completedAt',
    'targetAudience',
    'messageTemplate',
    'createdAt',
    'updatedAt',
    'userId',
]
CampaignScalarFieldKeysT = TypeVar('CampaignScalarFieldKeysT', bound=CampaignScalarFieldKeys)

CampaignRelationalFieldKeys = Literal[
        'user',
        'messages',
    ]

# AuditLog types

class AuditLogOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the AuditLog create method"""
    id: _str
    resourceId: Optional[_str]
    details: Optional['fields.Json']
    ipAddress: Optional[_str]
    userAgent: Optional[_str]
    createdAt: datetime.datetime
    userId: Optional[_str]
    user: 'UserCreateNestedWithoutRelationsInput'


class AuditLogCreateInput(AuditLogOptionalCreateInput):
    """Required arguments to the AuditLog create method"""
    action: _str
    resource: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class AuditLogOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the AuditLog create method, without relations"""
    id: _str
    resourceId: Optional[_str]
    details: Optional['fields.Json']
    ipAddress: Optional[_str]
    userAgent: Optional[_str]
    createdAt: datetime.datetime
    userId: Optional[_str]


class AuditLogCreateWithoutRelationsInput(AuditLogOptionalCreateWithoutRelationsInput):
    """Required arguments to the AuditLog create method, without relations"""
    action: _str
    resource: _str

class AuditLogConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'AuditLogCreateWithoutRelationsInput'
    where: 'AuditLogWhereUniqueInput'

class AuditLogCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'AuditLogCreateWithoutRelationsInput'
    connect: 'AuditLogWhereUniqueInput'
    connect_or_create: 'AuditLogConnectOrCreateWithoutRelationsInput'


class AuditLogCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['AuditLogCreateWithoutRelationsInput', List['AuditLogCreateWithoutRelationsInput']]
    connect: Union['AuditLogWhereUniqueInput', List['AuditLogWhereUniqueInput']]
    connect_or_create: Union['AuditLogConnectOrCreateWithoutRelationsInput', List['AuditLogConnectOrCreateWithoutRelationsInput']]

_AuditLogWhereUnique_id_Input = TypedDict(
    '_AuditLogWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

AuditLogWhereUniqueInput = _AuditLogWhereUnique_id_Input


class AuditLogUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    action: _str
    resource: _str
    resourceId: Optional[_str]
    details: Optional['fields.Json']
    ipAddress: Optional[_str]
    userAgent: Optional[_str]
    createdAt: datetime.datetime
    user: 'UserUpdateOneWithoutRelationsInput'


class AuditLogUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    action: _str
    resource: _str
    resourceId: Optional[_str]
    details: Optional['fields.Json']
    ipAddress: Optional[_str]
    userAgent: Optional[_str]
    createdAt: datetime.datetime


class AuditLogUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['AuditLogCreateWithoutRelationsInput']
    connect: List['AuditLogWhereUniqueInput']
    connect_or_create: List['AuditLogConnectOrCreateWithoutRelationsInput']
    set: List['AuditLogWhereUniqueInput']
    disconnect: List['AuditLogWhereUniqueInput']
    delete: List['AuditLogWhereUniqueInput']

    # TODO
    # update: List['AuditLogUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['AuditLogUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['AuditLogScalarWhereInput']
    # upsert: List['AuditLogUpserteWithWhereUniqueWithoutRelationsInput']


class AuditLogUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'AuditLogCreateWithoutRelationsInput'
    connect: 'AuditLogWhereUniqueInput'
    connect_or_create: 'AuditLogConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'AuditLogUpdateInput'
    # upsert: 'AuditLogUpsertWithoutRelationsInput'


class AuditLogUpsertInput(TypedDict):
    create: 'AuditLogCreateInput'
    update: 'AuditLogUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_AuditLog_id_OrderByInput = TypedDict(
    '_AuditLog_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_AuditLog_action_OrderByInput = TypedDict(
    '_AuditLog_action_OrderByInput',
    {
        'action': 'SortOrder',
    },
    total=True
)

_AuditLog_resource_OrderByInput = TypedDict(
    '_AuditLog_resource_OrderByInput',
    {
        'resource': 'SortOrder',
    },
    total=True
)

_AuditLog_resourceId_OrderByInput = TypedDict(
    '_AuditLog_resourceId_OrderByInput',
    {
        'resourceId': 'SortOrder',
    },
    total=True
)

_AuditLog_details_OrderByInput = TypedDict(
    '_AuditLog_details_OrderByInput',
    {
        'details': 'SortOrder',
    },
    total=True
)

_AuditLog_ipAddress_OrderByInput = TypedDict(
    '_AuditLog_ipAddress_OrderByInput',
    {
        'ipAddress': 'SortOrder',
    },
    total=True
)

_AuditLog_userAgent_OrderByInput = TypedDict(
    '_AuditLog_userAgent_OrderByInput',
    {
        'userAgent': 'SortOrder',
    },
    total=True
)

_AuditLog_createdAt_OrderByInput = TypedDict(
    '_AuditLog_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_AuditLog_userId_OrderByInput = TypedDict(
    '_AuditLog_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_AuditLog_RelevanceInner = TypedDict(
    '_AuditLog_RelevanceInner',
    {
        'fields': 'List[AuditLogScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_AuditLog_RelevanceOrderByInput = TypedDict(
    '_AuditLog_RelevanceOrderByInput',
    {
        '_relevance': '_AuditLog_RelevanceInner',
    },
    total=True
)

AuditLogOrderByInput = Union[
    '_AuditLog_id_OrderByInput',
    '_AuditLog_action_OrderByInput',
    '_AuditLog_resource_OrderByInput',
    '_AuditLog_resourceId_OrderByInput',
    '_AuditLog_details_OrderByInput',
    '_AuditLog_ipAddress_OrderByInput',
    '_AuditLog_userAgent_OrderByInput',
    '_AuditLog_createdAt_OrderByInput',
    '_AuditLog_userId_OrderByInput',
    '_AuditLog_RelevanceOrderByInput',
]



# recursive AuditLog types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

AuditLogRelationFilter = TypedDict(
    'AuditLogRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class AuditLogListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class AuditLogInclude(TypedDict, total=False):
    """AuditLog relational arguments"""
    user: Union[bool, 'UserArgsFromAuditLog']


    

class UserIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromAuditLogRecursive1']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromAuditLogRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromAuditLogRecursive1']
    campaigns: Union[bool, 'FindManyCampaignArgsFromAuditLogRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromAuditLogRecursive1']


class UserIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromAuditLogRecursive2']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromAuditLogRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromAuditLogRecursive2']
    campaigns: Union[bool, 'FindManyCampaignArgsFromAuditLogRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromAuditLogRecursive2']


class UserIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromAuditLogRecursive3']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromAuditLogRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromAuditLogRecursive3']
    campaigns: Union[bool, 'FindManyCampaignArgsFromAuditLogRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromAuditLogRecursive3']


class UserIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromAuditLogRecursive4']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromAuditLogRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromAuditLogRecursive4']
    campaigns: Union[bool, 'FindManyCampaignArgsFromAuditLogRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromAuditLogRecursive4']


class UserIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class UserArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyUserArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class FacebookPageIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive1']
    posts: Union[bool, 'FindManyFacebookPostArgsFromAuditLogRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromAuditLogRecursive1']


class FacebookPageIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive2']
    posts: Union[bool, 'FindManyFacebookPostArgsFromAuditLogRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromAuditLogRecursive2']


class FacebookPageIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive3']
    posts: Union[bool, 'FindManyFacebookPostArgsFromAuditLogRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromAuditLogRecursive3']


class FacebookPageIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive4']
    posts: Union[bool, 'FindManyFacebookPostArgsFromAuditLogRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromAuditLogRecursive4']


class FacebookPageIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class FacebookPageArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FacebookPageArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FacebookPageArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FacebookPageArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FacebookPageArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyFacebookPageArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FindManyFacebookPageArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FindManyFacebookPageArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FindManyFacebookPageArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FindManyFacebookPageArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    
    

class FacebookPostIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    facebookPage: Union[bool, 'FacebookPageArgsFromAuditLogRecursive1']


class FacebookPostIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    facebookPage: Union[bool, 'FacebookPageArgsFromAuditLogRecursive2']


class FacebookPostIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    facebookPage: Union[bool, 'FacebookPageArgsFromAuditLogRecursive3']


class FacebookPostIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    facebookPage: Union[bool, 'FacebookPageArgsFromAuditLogRecursive4']


class FacebookPostIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class FacebookPostArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FacebookPostArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FacebookPostArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FacebookPostArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FacebookPostArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyFacebookPostArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FindManyFacebookPostArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FindManyFacebookPostArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FindManyFacebookPostArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FindManyFacebookPostArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    
    

class WhatsappNumberIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive1']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromAuditLogRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromAuditLogRecursive1']


class WhatsappNumberIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive2']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromAuditLogRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromAuditLogRecursive2']


class WhatsappNumberIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive3']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromAuditLogRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromAuditLogRecursive3']


class WhatsappNumberIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive4']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromAuditLogRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromAuditLogRecursive4']


class WhatsappNumberIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class WhatsappNumberArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class WhatsappNumberArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class WhatsappNumberArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class WhatsappNumberArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class WhatsappNumberArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyWhatsappNumberArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class FindManyWhatsappNumberArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class FindManyWhatsappNumberArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class FindManyWhatsappNumberArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class FindManyWhatsappNumberArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    
    

class WhatsappTemplateIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromAuditLogRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromAuditLogRecursive1']


class WhatsappTemplateIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromAuditLogRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromAuditLogRecursive2']


class WhatsappTemplateIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromAuditLogRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromAuditLogRecursive3']


class WhatsappTemplateIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromAuditLogRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromAuditLogRecursive4']


class WhatsappTemplateIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class WhatsappTemplateArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class WhatsappTemplateArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class WhatsappTemplateArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class WhatsappTemplateArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class WhatsappTemplateArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyWhatsappTemplateArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class FindManyWhatsappTemplateArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class FindManyWhatsappTemplateArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class FindManyWhatsappTemplateArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class FindManyWhatsappTemplateArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    
    

class LeadIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive1']
    facebookPage: Union[bool, 'FacebookPageArgsFromAuditLogRecursive1']
    tags: Union[bool, 'FindManyLeadTagArgsFromAuditLogRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromAuditLogRecursive1']


class LeadIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive2']
    facebookPage: Union[bool, 'FacebookPageArgsFromAuditLogRecursive2']
    tags: Union[bool, 'FindManyLeadTagArgsFromAuditLogRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromAuditLogRecursive2']


class LeadIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive3']
    facebookPage: Union[bool, 'FacebookPageArgsFromAuditLogRecursive3']
    tags: Union[bool, 'FindManyLeadTagArgsFromAuditLogRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromAuditLogRecursive3']


class LeadIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive4']
    facebookPage: Union[bool, 'FacebookPageArgsFromAuditLogRecursive4']
    tags: Union[bool, 'FindManyLeadTagArgsFromAuditLogRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromAuditLogRecursive4']


class LeadIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class LeadArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'LeadIncludeFromLeadRecursive1'


class LeadArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'LeadIncludeFromLeadRecursive2'


class LeadArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'LeadIncludeFromLeadRecursive3'


class LeadArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'LeadIncludeFromLeadRecursive4'


class LeadArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyLeadArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive1'


class FindManyLeadArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive2'


class FindManyLeadArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive3'


class FindManyLeadArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive4'


class FindManyLeadArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    
    

class TagIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    leads: Union[bool, 'FindManyLeadTagArgsFromAuditLogRecursive1']


class TagIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    leads: Union[bool, 'FindManyLeadTagArgsFromAuditLogRecursive2']


class TagIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    leads: Union[bool, 'FindManyLeadTagArgsFromAuditLogRecursive3']


class TagIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    leads: Union[bool, 'FindManyLeadTagArgsFromAuditLogRecursive4']


class TagIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class TagArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'TagIncludeFromTagRecursive1'


class TagArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'TagIncludeFromTagRecursive2'


class TagArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'TagIncludeFromTagRecursive3'


class TagArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'TagIncludeFromTagRecursive4'


class TagArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyTagArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive1'


class FindManyTagArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive2'


class FindManyTagArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive3'


class FindManyTagArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive4'


class FindManyTagArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    
    

class LeadTagIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    lead: Union[bool, 'LeadArgsFromAuditLogRecursive1']
    tag: Union[bool, 'TagArgsFromAuditLogRecursive1']


class LeadTagIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    lead: Union[bool, 'LeadArgsFromAuditLogRecursive2']
    tag: Union[bool, 'TagArgsFromAuditLogRecursive2']


class LeadTagIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    lead: Union[bool, 'LeadArgsFromAuditLogRecursive3']
    tag: Union[bool, 'TagArgsFromAuditLogRecursive3']


class LeadTagIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    lead: Union[bool, 'LeadArgsFromAuditLogRecursive4']
    tag: Union[bool, 'TagArgsFromAuditLogRecursive4']


class LeadTagIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class LeadTagArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class LeadTagArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class LeadTagArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class LeadTagArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class LeadTagArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyLeadTagArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class FindManyLeadTagArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class FindManyLeadTagArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class FindManyLeadTagArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class FindManyLeadTagArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    
    

class MessageIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    lead: Union[bool, 'LeadArgsFromAuditLogRecursive1']
    campaign: Union[bool, 'CampaignArgsFromAuditLogRecursive1']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromAuditLogRecursive1']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromAuditLogRecursive1']


class MessageIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    lead: Union[bool, 'LeadArgsFromAuditLogRecursive2']
    campaign: Union[bool, 'CampaignArgsFromAuditLogRecursive2']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromAuditLogRecursive2']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromAuditLogRecursive2']


class MessageIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    lead: Union[bool, 'LeadArgsFromAuditLogRecursive3']
    campaign: Union[bool, 'CampaignArgsFromAuditLogRecursive3']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromAuditLogRecursive3']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromAuditLogRecursive3']


class MessageIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    lead: Union[bool, 'LeadArgsFromAuditLogRecursive4']
    campaign: Union[bool, 'CampaignArgsFromAuditLogRecursive4']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromAuditLogRecursive4']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromAuditLogRecursive4']


class MessageIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class MessageArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyMessageArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class CampaignIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromAuditLogRecursive1']


class CampaignIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromAuditLogRecursive2']


class CampaignIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromAuditLogRecursive3']


class CampaignIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromAuditLogRecursive4']


class CampaignIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class CampaignArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'CampaignIncludeFromCampaignRecursive1'


class CampaignArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'CampaignIncludeFromCampaignRecursive2'


class CampaignArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'CampaignIncludeFromCampaignRecursive3'


class CampaignArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'CampaignIncludeFromCampaignRecursive4'


class CampaignArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyCampaignArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive1'


class FindManyCampaignArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive2'


class FindManyCampaignArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive3'


class FindManyCampaignArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive4'


class FindManyCampaignArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    
    

class AuditLogIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive1']


class AuditLogIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive2']


class AuditLogIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive3']


class AuditLogIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive4']


class AuditLogIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class AuditLogArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyAuditLogArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    
    

class ApiKeyIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""


class ApiKeyIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""


class ApiKeyIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""


class ApiKeyIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""


class ApiKeyIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class ApiKeyArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class ApiKeyArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class ApiKeyArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class ApiKeyArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class ApiKeyArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyApiKeyArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class FindManyApiKeyArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class FindManyApiKeyArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class FindManyApiKeyArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class FindManyApiKeyArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    
    

class RateLimitIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""


class RateLimitIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""


class RateLimitIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""


class RateLimitIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""


class RateLimitIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class RateLimitArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class RateLimitArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class RateLimitArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class RateLimitArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class RateLimitArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyRateLimitArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class FindManyRateLimitArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class FindManyRateLimitArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class FindManyRateLimitArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class FindManyRateLimitArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    


FindManyAuditLogArgs = FindManyAuditLogArgsFromAuditLog
FindFirstAuditLogArgs = FindManyAuditLogArgsFromAuditLog


    

class AuditLogWhereInput(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    action: Union[_str, 'types.StringFilter']
    resource: Union[_str, 'types.StringFilter']
    resourceId: Union[None, _str, 'types.StringFilter']
    details: Union[None, 'fields.Json', 'types.JsonFilter']
    ipAddress: Union[None, _str, 'types.StringFilter']
    userAgent: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[None, _str, 'types.StringFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AuditLogWhereInputRecursive1', List['AuditLogWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['AuditLogWhereInputRecursive1']
    OR: List['AuditLogWhereInputRecursive1']
    NOT: List['AuditLogWhereInputRecursive1']


class AuditLogWhereInputRecursive1(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    action: Union[_str, 'types.StringFilter']
    resource: Union[_str, 'types.StringFilter']
    resourceId: Union[None, _str, 'types.StringFilter']
    details: Union[None, 'fields.Json', 'types.JsonFilter']
    ipAddress: Union[None, _str, 'types.StringFilter']
    userAgent: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[None, _str, 'types.StringFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AuditLogWhereInputRecursive2', List['AuditLogWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['AuditLogWhereInputRecursive2']
    OR: List['AuditLogWhereInputRecursive2']
    NOT: List['AuditLogWhereInputRecursive2']


class AuditLogWhereInputRecursive2(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    action: Union[_str, 'types.StringFilter']
    resource: Union[_str, 'types.StringFilter']
    resourceId: Union[None, _str, 'types.StringFilter']
    details: Union[None, 'fields.Json', 'types.JsonFilter']
    ipAddress: Union[None, _str, 'types.StringFilter']
    userAgent: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[None, _str, 'types.StringFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AuditLogWhereInputRecursive3', List['AuditLogWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['AuditLogWhereInputRecursive3']
    OR: List['AuditLogWhereInputRecursive3']
    NOT: List['AuditLogWhereInputRecursive3']


class AuditLogWhereInputRecursive3(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    action: Union[_str, 'types.StringFilter']
    resource: Union[_str, 'types.StringFilter']
    resourceId: Union[None, _str, 'types.StringFilter']
    details: Union[None, 'fields.Json', 'types.JsonFilter']
    ipAddress: Union[None, _str, 'types.StringFilter']
    userAgent: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[None, _str, 'types.StringFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AuditLogWhereInputRecursive4', List['AuditLogWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['AuditLogWhereInputRecursive4']
    OR: List['AuditLogWhereInputRecursive4']
    NOT: List['AuditLogWhereInputRecursive4']


class AuditLogWhereInputRecursive4(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    action: Union[_str, 'types.StringFilter']
    resource: Union[_str, 'types.StringFilter']
    resourceId: Union[None, _str, 'types.StringFilter']
    details: Union[None, 'fields.Json', 'types.JsonFilter']
    ipAddress: Union[None, _str, 'types.StringFilter']
    userAgent: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    userId: Union[None, _str, 'types.StringFilter']
    user: 'UserRelationFilter'



# aggregate AuditLog types


    

class AuditLogScalarWhereWithAggregatesInput(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    action: Union[_str, 'types.StringWithAggregatesFilter']
    resource: Union[_str, 'types.StringWithAggregatesFilter']
    resourceId: Union[_str, 'types.StringWithAggregatesFilter']
    details: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    ipAddress: Union[_str, 'types.StringWithAggregatesFilter']
    userAgent: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['AuditLogScalarWhereWithAggregatesInputRecursive1']
    OR: List['AuditLogScalarWhereWithAggregatesInputRecursive1']
    NOT: List['AuditLogScalarWhereWithAggregatesInputRecursive1']


class AuditLogScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    action: Union[_str, 'types.StringWithAggregatesFilter']
    resource: Union[_str, 'types.StringWithAggregatesFilter']
    resourceId: Union[_str, 'types.StringWithAggregatesFilter']
    details: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    ipAddress: Union[_str, 'types.StringWithAggregatesFilter']
    userAgent: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['AuditLogScalarWhereWithAggregatesInputRecursive2']
    OR: List['AuditLogScalarWhereWithAggregatesInputRecursive2']
    NOT: List['AuditLogScalarWhereWithAggregatesInputRecursive2']


class AuditLogScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    action: Union[_str, 'types.StringWithAggregatesFilter']
    resource: Union[_str, 'types.StringWithAggregatesFilter']
    resourceId: Union[_str, 'types.StringWithAggregatesFilter']
    details: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    ipAddress: Union[_str, 'types.StringWithAggregatesFilter']
    userAgent: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['AuditLogScalarWhereWithAggregatesInputRecursive3']
    OR: List['AuditLogScalarWhereWithAggregatesInputRecursive3']
    NOT: List['AuditLogScalarWhereWithAggregatesInputRecursive3']


class AuditLogScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    action: Union[_str, 'types.StringWithAggregatesFilter']
    resource: Union[_str, 'types.StringWithAggregatesFilter']
    resourceId: Union[_str, 'types.StringWithAggregatesFilter']
    details: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    ipAddress: Union[_str, 'types.StringWithAggregatesFilter']
    userAgent: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['AuditLogScalarWhereWithAggregatesInputRecursive4']
    OR: List['AuditLogScalarWhereWithAggregatesInputRecursive4']
    NOT: List['AuditLogScalarWhereWithAggregatesInputRecursive4']


class AuditLogScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    action: Union[_str, 'types.StringWithAggregatesFilter']
    resource: Union[_str, 'types.StringWithAggregatesFilter']
    resourceId: Union[_str, 'types.StringWithAggregatesFilter']
    details: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    ipAddress: Union[_str, 'types.StringWithAggregatesFilter']
    userAgent: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']



class AuditLogGroupByOutput(TypedDict, total=False):
    id: _str
    action: _str
    resource: _str
    resourceId: _str
    details: 'fields.Json'
    ipAddress: _str
    userAgent: _str
    createdAt: datetime.datetime
    userId: _str
    _sum: 'AuditLogSumAggregateOutput'
    _avg: 'AuditLogAvgAggregateOutput'
    _min: 'AuditLogMinAggregateOutput'
    _max: 'AuditLogMaxAggregateOutput'
    _count: 'AuditLogCountAggregateOutput'


class AuditLogAvgAggregateOutput(TypedDict, total=False):
    """AuditLog output for aggregating averages"""


class AuditLogSumAggregateOutput(TypedDict, total=False):
    """AuditLog output for aggregating sums"""


class AuditLogScalarAggregateOutput(TypedDict, total=False):
    """AuditLog output including scalar fields"""
    id: _str
    action: _str
    resource: _str
    resourceId: _str
    details: 'fields.Json'
    ipAddress: _str
    userAgent: _str
    createdAt: datetime.datetime
    userId: _str


AuditLogMinAggregateOutput = AuditLogScalarAggregateOutput
AuditLogMaxAggregateOutput = AuditLogScalarAggregateOutput


class AuditLogMaxAggregateInput(TypedDict, total=False):
    """AuditLog input for aggregating by max"""
    id: bool
    action: bool
    resource: bool
    resourceId: bool
    details: bool
    ipAddress: bool
    userAgent: bool
    createdAt: bool
    userId: bool


class AuditLogMinAggregateInput(TypedDict, total=False):
    """AuditLog input for aggregating by min"""
    id: bool
    action: bool
    resource: bool
    resourceId: bool
    details: bool
    ipAddress: bool
    userAgent: bool
    createdAt: bool
    userId: bool


class AuditLogNumberAggregateInput(TypedDict, total=False):
    """AuditLog input for aggregating numbers"""


AuditLogAvgAggregateInput = AuditLogNumberAggregateInput
AuditLogSumAggregateInput = AuditLogNumberAggregateInput


AuditLogCountAggregateInput = TypedDict(
    'AuditLogCountAggregateInput',
    {
        'id': bool,
        'action': bool,
        'resource': bool,
        'resourceId': bool,
        'details': bool,
        'ipAddress': bool,
        'userAgent': bool,
        'createdAt': bool,
        'userId': bool,
        '_all': bool,
    },
    total=False,
)

AuditLogCountAggregateOutput = TypedDict(
    'AuditLogCountAggregateOutput',
    {
        'id': int,
        'action': int,
        'resource': int,
        'resourceId': int,
        'details': int,
        'ipAddress': int,
        'userAgent': int,
        'createdAt': int,
        'userId': int,
        '_all': int,
    },
    total=False,
)


AuditLogKeys = Literal[
    'id',
    'action',
    'resource',
    'resourceId',
    'details',
    'ipAddress',
    'userAgent',
    'createdAt',
    'userId',
    'user',
]
AuditLogScalarFieldKeys = Literal[
    'id',
    'action',
    'resource',
    'resourceId',
    'details',
    'ipAddress',
    'userAgent',
    'createdAt',
    'userId',
]
AuditLogScalarFieldKeysT = TypeVar('AuditLogScalarFieldKeysT', bound=AuditLogScalarFieldKeys)

AuditLogRelationalFieldKeys = Literal[
        'user',
    ]

# ApiKey types

class ApiKeyOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the ApiKey create method"""
    id: _str
    isActive: _bool
    lastUsedAt: Optional[datetime.datetime]
    expiresAt: Optional[datetime.datetime]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class ApiKeyCreateInput(ApiKeyOptionalCreateInput):
    """Required arguments to the ApiKey create method"""
    name: _str
    keyHash: _str
    permissions: 'fields.Json'


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class ApiKeyOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the ApiKey create method, without relations"""
    id: _str
    isActive: _bool
    lastUsedAt: Optional[datetime.datetime]
    expiresAt: Optional[datetime.datetime]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class ApiKeyCreateWithoutRelationsInput(ApiKeyOptionalCreateWithoutRelationsInput):
    """Required arguments to the ApiKey create method, without relations"""
    name: _str
    keyHash: _str
    permissions: 'fields.Json'

class ApiKeyConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'ApiKeyCreateWithoutRelationsInput'
    where: 'ApiKeyWhereUniqueInput'

class ApiKeyCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'ApiKeyCreateWithoutRelationsInput'
    connect: 'ApiKeyWhereUniqueInput'
    connect_or_create: 'ApiKeyConnectOrCreateWithoutRelationsInput'


class ApiKeyCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['ApiKeyCreateWithoutRelationsInput', List['ApiKeyCreateWithoutRelationsInput']]
    connect: Union['ApiKeyWhereUniqueInput', List['ApiKeyWhereUniqueInput']]
    connect_or_create: Union['ApiKeyConnectOrCreateWithoutRelationsInput', List['ApiKeyConnectOrCreateWithoutRelationsInput']]

_ApiKeyWhereUnique_id_Input = TypedDict(
    '_ApiKeyWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

_ApiKeyWhereUnique_keyHash_Input = TypedDict(
    '_ApiKeyWhereUnique_keyHash_Input',
    {
        'keyHash': '_str',
    },
    total=True
)

ApiKeyWhereUniqueInput = Union[
    '_ApiKeyWhereUnique_id_Input',
    '_ApiKeyWhereUnique_keyHash_Input',
]


class ApiKeyUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    name: _str
    keyHash: _str
    permissions: 'fields.Json'
    isActive: _bool
    lastUsedAt: Optional[datetime.datetime]
    expiresAt: Optional[datetime.datetime]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class ApiKeyUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    name: _str
    keyHash: _str
    permissions: 'fields.Json'
    isActive: _bool
    lastUsedAt: Optional[datetime.datetime]
    expiresAt: Optional[datetime.datetime]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class ApiKeyUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['ApiKeyCreateWithoutRelationsInput']
    connect: List['ApiKeyWhereUniqueInput']
    connect_or_create: List['ApiKeyConnectOrCreateWithoutRelationsInput']
    set: List['ApiKeyWhereUniqueInput']
    disconnect: List['ApiKeyWhereUniqueInput']
    delete: List['ApiKeyWhereUniqueInput']

    # TODO
    # update: List['ApiKeyUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['ApiKeyUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['ApiKeyScalarWhereInput']
    # upsert: List['ApiKeyUpserteWithWhereUniqueWithoutRelationsInput']


class ApiKeyUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'ApiKeyCreateWithoutRelationsInput'
    connect: 'ApiKeyWhereUniqueInput'
    connect_or_create: 'ApiKeyConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'ApiKeyUpdateInput'
    # upsert: 'ApiKeyUpsertWithoutRelationsInput'


class ApiKeyUpsertInput(TypedDict):
    create: 'ApiKeyCreateInput'
    update: 'ApiKeyUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_ApiKey_id_OrderByInput = TypedDict(
    '_ApiKey_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_ApiKey_name_OrderByInput = TypedDict(
    '_ApiKey_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_ApiKey_keyHash_OrderByInput = TypedDict(
    '_ApiKey_keyHash_OrderByInput',
    {
        'keyHash': 'SortOrder',
    },
    total=True
)

_ApiKey_permissions_OrderByInput = TypedDict(
    '_ApiKey_permissions_OrderByInput',
    {
        'permissions': 'SortOrder',
    },
    total=True
)

_ApiKey_isActive_OrderByInput = TypedDict(
    '_ApiKey_isActive_OrderByInput',
    {
        'isActive': 'SortOrder',
    },
    total=True
)

_ApiKey_lastUsedAt_OrderByInput = TypedDict(
    '_ApiKey_lastUsedAt_OrderByInput',
    {
        'lastUsedAt': 'SortOrder',
    },
    total=True
)

_ApiKey_expiresAt_OrderByInput = TypedDict(
    '_ApiKey_expiresAt_OrderByInput',
    {
        'expiresAt': 'SortOrder',
    },
    total=True
)

_ApiKey_createdAt_OrderByInput = TypedDict(
    '_ApiKey_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_ApiKey_updatedAt_OrderByInput = TypedDict(
    '_ApiKey_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_ApiKey_RelevanceInner = TypedDict(
    '_ApiKey_RelevanceInner',
    {
        'fields': 'List[ApiKeyScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_ApiKey_RelevanceOrderByInput = TypedDict(
    '_ApiKey_RelevanceOrderByInput',
    {
        '_relevance': '_ApiKey_RelevanceInner',
    },
    total=True
)

ApiKeyOrderByInput = Union[
    '_ApiKey_id_OrderByInput',
    '_ApiKey_name_OrderByInput',
    '_ApiKey_keyHash_OrderByInput',
    '_ApiKey_permissions_OrderByInput',
    '_ApiKey_isActive_OrderByInput',
    '_ApiKey_lastUsedAt_OrderByInput',
    '_ApiKey_expiresAt_OrderByInput',
    '_ApiKey_createdAt_OrderByInput',
    '_ApiKey_updatedAt_OrderByInput',
    '_ApiKey_RelevanceOrderByInput',
]



# recursive ApiKey types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

ApiKeyRelationFilter = TypedDict(
    'ApiKeyRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class ApiKeyListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class ApiKeyInclude(TypedDict, total=False):
    """ApiKey relational arguments"""


    

class UserIncludeFromApiKey(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromApiKeyRecursive1']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromApiKeyRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromApiKeyRecursive1']
    campaigns: Union[bool, 'FindManyCampaignArgsFromApiKeyRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromApiKeyRecursive1']


class UserIncludeFromApiKeyRecursive1(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromApiKeyRecursive2']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromApiKeyRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromApiKeyRecursive2']
    campaigns: Union[bool, 'FindManyCampaignArgsFromApiKeyRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromApiKeyRecursive2']


class UserIncludeFromApiKeyRecursive2(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromApiKeyRecursive3']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromApiKeyRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromApiKeyRecursive3']
    campaigns: Union[bool, 'FindManyCampaignArgsFromApiKeyRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromApiKeyRecursive3']


class UserIncludeFromApiKeyRecursive3(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromApiKeyRecursive4']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromApiKeyRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromApiKeyRecursive4']
    campaigns: Union[bool, 'FindManyCampaignArgsFromApiKeyRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromApiKeyRecursive4']


class UserIncludeFromApiKeyRecursive4(TypedDict, total=False):
    """Relational arguments for ApiKey"""

    

class UserArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    
    

class FindManyUserArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class FacebookPageIncludeFromApiKey(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive1']
    posts: Union[bool, 'FindManyFacebookPostArgsFromApiKeyRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromApiKeyRecursive1']


class FacebookPageIncludeFromApiKeyRecursive1(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive2']
    posts: Union[bool, 'FindManyFacebookPostArgsFromApiKeyRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromApiKeyRecursive2']


class FacebookPageIncludeFromApiKeyRecursive2(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive3']
    posts: Union[bool, 'FindManyFacebookPostArgsFromApiKeyRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromApiKeyRecursive3']


class FacebookPageIncludeFromApiKeyRecursive3(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive4']
    posts: Union[bool, 'FindManyFacebookPostArgsFromApiKeyRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromApiKeyRecursive4']


class FacebookPageIncludeFromApiKeyRecursive4(TypedDict, total=False):
    """Relational arguments for ApiKey"""

    

class FacebookPageArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FacebookPageArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FacebookPageArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FacebookPageArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FacebookPageArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    
    

class FindManyFacebookPageArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FindManyFacebookPageArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FindManyFacebookPageArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FindManyFacebookPageArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FindManyFacebookPageArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    
    

class FacebookPostIncludeFromApiKey(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    facebookPage: Union[bool, 'FacebookPageArgsFromApiKeyRecursive1']


class FacebookPostIncludeFromApiKeyRecursive1(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    facebookPage: Union[bool, 'FacebookPageArgsFromApiKeyRecursive2']


class FacebookPostIncludeFromApiKeyRecursive2(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    facebookPage: Union[bool, 'FacebookPageArgsFromApiKeyRecursive3']


class FacebookPostIncludeFromApiKeyRecursive3(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    facebookPage: Union[bool, 'FacebookPageArgsFromApiKeyRecursive4']


class FacebookPostIncludeFromApiKeyRecursive4(TypedDict, total=False):
    """Relational arguments for ApiKey"""

    

class FacebookPostArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FacebookPostArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FacebookPostArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FacebookPostArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FacebookPostArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    
    

class FindManyFacebookPostArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FindManyFacebookPostArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FindManyFacebookPostArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FindManyFacebookPostArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FindManyFacebookPostArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    
    

class WhatsappNumberIncludeFromApiKey(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive1']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromApiKeyRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromApiKeyRecursive1']


class WhatsappNumberIncludeFromApiKeyRecursive1(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive2']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromApiKeyRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromApiKeyRecursive2']


class WhatsappNumberIncludeFromApiKeyRecursive2(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive3']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromApiKeyRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromApiKeyRecursive3']


class WhatsappNumberIncludeFromApiKeyRecursive3(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive4']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromApiKeyRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromApiKeyRecursive4']


class WhatsappNumberIncludeFromApiKeyRecursive4(TypedDict, total=False):
    """Relational arguments for ApiKey"""

    

class WhatsappNumberArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class WhatsappNumberArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class WhatsappNumberArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class WhatsappNumberArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class WhatsappNumberArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    
    

class FindManyWhatsappNumberArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class FindManyWhatsappNumberArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class FindManyWhatsappNumberArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class FindManyWhatsappNumberArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class FindManyWhatsappNumberArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    
    

class WhatsappTemplateIncludeFromApiKey(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromApiKeyRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromApiKeyRecursive1']


class WhatsappTemplateIncludeFromApiKeyRecursive1(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromApiKeyRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromApiKeyRecursive2']


class WhatsappTemplateIncludeFromApiKeyRecursive2(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromApiKeyRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromApiKeyRecursive3']


class WhatsappTemplateIncludeFromApiKeyRecursive3(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromApiKeyRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromApiKeyRecursive4']


class WhatsappTemplateIncludeFromApiKeyRecursive4(TypedDict, total=False):
    """Relational arguments for ApiKey"""

    

class WhatsappTemplateArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class WhatsappTemplateArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class WhatsappTemplateArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class WhatsappTemplateArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class WhatsappTemplateArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    
    

class FindManyWhatsappTemplateArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class FindManyWhatsappTemplateArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class FindManyWhatsappTemplateArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class FindManyWhatsappTemplateArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class FindManyWhatsappTemplateArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    
    

class LeadIncludeFromApiKey(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive1']
    facebookPage: Union[bool, 'FacebookPageArgsFromApiKeyRecursive1']
    tags: Union[bool, 'FindManyLeadTagArgsFromApiKeyRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromApiKeyRecursive1']


class LeadIncludeFromApiKeyRecursive1(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive2']
    facebookPage: Union[bool, 'FacebookPageArgsFromApiKeyRecursive2']
    tags: Union[bool, 'FindManyLeadTagArgsFromApiKeyRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromApiKeyRecursive2']


class LeadIncludeFromApiKeyRecursive2(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive3']
    facebookPage: Union[bool, 'FacebookPageArgsFromApiKeyRecursive3']
    tags: Union[bool, 'FindManyLeadTagArgsFromApiKeyRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromApiKeyRecursive3']


class LeadIncludeFromApiKeyRecursive3(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive4']
    facebookPage: Union[bool, 'FacebookPageArgsFromApiKeyRecursive4']
    tags: Union[bool, 'FindManyLeadTagArgsFromApiKeyRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromApiKeyRecursive4']


class LeadIncludeFromApiKeyRecursive4(TypedDict, total=False):
    """Relational arguments for ApiKey"""

    

class LeadArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'LeadIncludeFromLeadRecursive1'


class LeadArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'LeadIncludeFromLeadRecursive2'


class LeadArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'LeadIncludeFromLeadRecursive3'


class LeadArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'LeadIncludeFromLeadRecursive4'


class LeadArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    
    

class FindManyLeadArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive1'


class FindManyLeadArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive2'


class FindManyLeadArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive3'


class FindManyLeadArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive4'


class FindManyLeadArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    
    

class TagIncludeFromApiKey(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    leads: Union[bool, 'FindManyLeadTagArgsFromApiKeyRecursive1']


class TagIncludeFromApiKeyRecursive1(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    leads: Union[bool, 'FindManyLeadTagArgsFromApiKeyRecursive2']


class TagIncludeFromApiKeyRecursive2(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    leads: Union[bool, 'FindManyLeadTagArgsFromApiKeyRecursive3']


class TagIncludeFromApiKeyRecursive3(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    leads: Union[bool, 'FindManyLeadTagArgsFromApiKeyRecursive4']


class TagIncludeFromApiKeyRecursive4(TypedDict, total=False):
    """Relational arguments for ApiKey"""

    

class TagArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'TagIncludeFromTagRecursive1'


class TagArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'TagIncludeFromTagRecursive2'


class TagArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'TagIncludeFromTagRecursive3'


class TagArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'TagIncludeFromTagRecursive4'


class TagArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    
    

class FindManyTagArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive1'


class FindManyTagArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive2'


class FindManyTagArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive3'


class FindManyTagArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive4'


class FindManyTagArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    
    

class LeadTagIncludeFromApiKey(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    lead: Union[bool, 'LeadArgsFromApiKeyRecursive1']
    tag: Union[bool, 'TagArgsFromApiKeyRecursive1']


class LeadTagIncludeFromApiKeyRecursive1(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    lead: Union[bool, 'LeadArgsFromApiKeyRecursive2']
    tag: Union[bool, 'TagArgsFromApiKeyRecursive2']


class LeadTagIncludeFromApiKeyRecursive2(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    lead: Union[bool, 'LeadArgsFromApiKeyRecursive3']
    tag: Union[bool, 'TagArgsFromApiKeyRecursive3']


class LeadTagIncludeFromApiKeyRecursive3(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    lead: Union[bool, 'LeadArgsFromApiKeyRecursive4']
    tag: Union[bool, 'TagArgsFromApiKeyRecursive4']


class LeadTagIncludeFromApiKeyRecursive4(TypedDict, total=False):
    """Relational arguments for ApiKey"""

    

class LeadTagArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class LeadTagArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class LeadTagArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class LeadTagArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class LeadTagArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    
    

class FindManyLeadTagArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class FindManyLeadTagArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class FindManyLeadTagArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class FindManyLeadTagArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class FindManyLeadTagArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    
    

class MessageIncludeFromApiKey(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    lead: Union[bool, 'LeadArgsFromApiKeyRecursive1']
    campaign: Union[bool, 'CampaignArgsFromApiKeyRecursive1']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromApiKeyRecursive1']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromApiKeyRecursive1']


class MessageIncludeFromApiKeyRecursive1(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    lead: Union[bool, 'LeadArgsFromApiKeyRecursive2']
    campaign: Union[bool, 'CampaignArgsFromApiKeyRecursive2']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromApiKeyRecursive2']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromApiKeyRecursive2']


class MessageIncludeFromApiKeyRecursive2(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    lead: Union[bool, 'LeadArgsFromApiKeyRecursive3']
    campaign: Union[bool, 'CampaignArgsFromApiKeyRecursive3']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromApiKeyRecursive3']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromApiKeyRecursive3']


class MessageIncludeFromApiKeyRecursive3(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    lead: Union[bool, 'LeadArgsFromApiKeyRecursive4']
    campaign: Union[bool, 'CampaignArgsFromApiKeyRecursive4']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromApiKeyRecursive4']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromApiKeyRecursive4']


class MessageIncludeFromApiKeyRecursive4(TypedDict, total=False):
    """Relational arguments for ApiKey"""

    

class MessageArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    
    

class FindManyMessageArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class CampaignIncludeFromApiKey(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromApiKeyRecursive1']


class CampaignIncludeFromApiKeyRecursive1(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromApiKeyRecursive2']


class CampaignIncludeFromApiKeyRecursive2(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromApiKeyRecursive3']


class CampaignIncludeFromApiKeyRecursive3(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromApiKeyRecursive4']


class CampaignIncludeFromApiKeyRecursive4(TypedDict, total=False):
    """Relational arguments for ApiKey"""

    

class CampaignArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'CampaignIncludeFromCampaignRecursive1'


class CampaignArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'CampaignIncludeFromCampaignRecursive2'


class CampaignArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'CampaignIncludeFromCampaignRecursive3'


class CampaignArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'CampaignIncludeFromCampaignRecursive4'


class CampaignArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    
    

class FindManyCampaignArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive1'


class FindManyCampaignArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive2'


class FindManyCampaignArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive3'


class FindManyCampaignArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive4'


class FindManyCampaignArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    
    

class AuditLogIncludeFromApiKey(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive1']


class AuditLogIncludeFromApiKeyRecursive1(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive2']


class AuditLogIncludeFromApiKeyRecursive2(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive3']


class AuditLogIncludeFromApiKeyRecursive3(TypedDict, total=False):
    """Relational arguments for ApiKey"""
    user: Union[bool, 'UserArgsFromApiKeyRecursive4']


class AuditLogIncludeFromApiKeyRecursive4(TypedDict, total=False):
    """Relational arguments for ApiKey"""

    

class AuditLogArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    
    

class FindManyAuditLogArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    
    

class ApiKeyIncludeFromApiKey(TypedDict, total=False):
    """Relational arguments for ApiKey"""


class ApiKeyIncludeFromApiKeyRecursive1(TypedDict, total=False):
    """Relational arguments for ApiKey"""


class ApiKeyIncludeFromApiKeyRecursive2(TypedDict, total=False):
    """Relational arguments for ApiKey"""


class ApiKeyIncludeFromApiKeyRecursive3(TypedDict, total=False):
    """Relational arguments for ApiKey"""


class ApiKeyIncludeFromApiKeyRecursive4(TypedDict, total=False):
    """Relational arguments for ApiKey"""

    

class ApiKeyArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class ApiKeyArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class ApiKeyArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class ApiKeyArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class ApiKeyArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    
    

class FindManyApiKeyArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class FindManyApiKeyArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class FindManyApiKeyArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class FindManyApiKeyArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class FindManyApiKeyArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    
    

class RateLimitIncludeFromApiKey(TypedDict, total=False):
    """Relational arguments for ApiKey"""


class RateLimitIncludeFromApiKeyRecursive1(TypedDict, total=False):
    """Relational arguments for ApiKey"""


class RateLimitIncludeFromApiKeyRecursive2(TypedDict, total=False):
    """Relational arguments for ApiKey"""


class RateLimitIncludeFromApiKeyRecursive3(TypedDict, total=False):
    """Relational arguments for ApiKey"""


class RateLimitIncludeFromApiKeyRecursive4(TypedDict, total=False):
    """Relational arguments for ApiKey"""

    

class RateLimitArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class RateLimitArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class RateLimitArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class RateLimitArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class RateLimitArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    
    

class FindManyRateLimitArgsFromApiKey(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class FindManyRateLimitArgsFromApiKeyRecursive1(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class FindManyRateLimitArgsFromApiKeyRecursive2(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class FindManyRateLimitArgsFromApiKeyRecursive3(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class FindManyRateLimitArgsFromApiKeyRecursive4(TypedDict, total=False):
    """Arguments for ApiKey"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    


FindManyApiKeyArgs = FindManyApiKeyArgsFromApiKey
FindFirstApiKeyArgs = FindManyApiKeyArgsFromApiKey


    

class ApiKeyWhereInput(TypedDict, total=False):
    """ApiKey arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    keyHash: Union[_str, 'types.StringFilter']
    permissions: Union['fields.Json', 'types.JsonFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    lastUsedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    expiresAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['ApiKeyWhereInputRecursive1', List['ApiKeyWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['ApiKeyWhereInputRecursive1']
    OR: List['ApiKeyWhereInputRecursive1']
    NOT: List['ApiKeyWhereInputRecursive1']


class ApiKeyWhereInputRecursive1(TypedDict, total=False):
    """ApiKey arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    keyHash: Union[_str, 'types.StringFilter']
    permissions: Union['fields.Json', 'types.JsonFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    lastUsedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    expiresAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['ApiKeyWhereInputRecursive2', List['ApiKeyWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['ApiKeyWhereInputRecursive2']
    OR: List['ApiKeyWhereInputRecursive2']
    NOT: List['ApiKeyWhereInputRecursive2']


class ApiKeyWhereInputRecursive2(TypedDict, total=False):
    """ApiKey arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    keyHash: Union[_str, 'types.StringFilter']
    permissions: Union['fields.Json', 'types.JsonFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    lastUsedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    expiresAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['ApiKeyWhereInputRecursive3', List['ApiKeyWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['ApiKeyWhereInputRecursive3']
    OR: List['ApiKeyWhereInputRecursive3']
    NOT: List['ApiKeyWhereInputRecursive3']


class ApiKeyWhereInputRecursive3(TypedDict, total=False):
    """ApiKey arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    keyHash: Union[_str, 'types.StringFilter']
    permissions: Union['fields.Json', 'types.JsonFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    lastUsedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    expiresAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['ApiKeyWhereInputRecursive4', List['ApiKeyWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['ApiKeyWhereInputRecursive4']
    OR: List['ApiKeyWhereInputRecursive4']
    NOT: List['ApiKeyWhereInputRecursive4']


class ApiKeyWhereInputRecursive4(TypedDict, total=False):
    """ApiKey arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    keyHash: Union[_str, 'types.StringFilter']
    permissions: Union['fields.Json', 'types.JsonFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    lastUsedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    expiresAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']



# aggregate ApiKey types


    

class ApiKeyScalarWhereWithAggregatesInput(TypedDict, total=False):
    """ApiKey arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    keyHash: Union[_str, 'types.StringWithAggregatesFilter']
    permissions: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    lastUsedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    expiresAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ApiKeyScalarWhereWithAggregatesInputRecursive1']
    OR: List['ApiKeyScalarWhereWithAggregatesInputRecursive1']
    NOT: List['ApiKeyScalarWhereWithAggregatesInputRecursive1']


class ApiKeyScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """ApiKey arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    keyHash: Union[_str, 'types.StringWithAggregatesFilter']
    permissions: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    lastUsedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    expiresAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ApiKeyScalarWhereWithAggregatesInputRecursive2']
    OR: List['ApiKeyScalarWhereWithAggregatesInputRecursive2']
    NOT: List['ApiKeyScalarWhereWithAggregatesInputRecursive2']


class ApiKeyScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """ApiKey arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    keyHash: Union[_str, 'types.StringWithAggregatesFilter']
    permissions: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    lastUsedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    expiresAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ApiKeyScalarWhereWithAggregatesInputRecursive3']
    OR: List['ApiKeyScalarWhereWithAggregatesInputRecursive3']
    NOT: List['ApiKeyScalarWhereWithAggregatesInputRecursive3']


class ApiKeyScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """ApiKey arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    keyHash: Union[_str, 'types.StringWithAggregatesFilter']
    permissions: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    lastUsedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    expiresAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ApiKeyScalarWhereWithAggregatesInputRecursive4']
    OR: List['ApiKeyScalarWhereWithAggregatesInputRecursive4']
    NOT: List['ApiKeyScalarWhereWithAggregatesInputRecursive4']


class ApiKeyScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """ApiKey arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    keyHash: Union[_str, 'types.StringWithAggregatesFilter']
    permissions: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    lastUsedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    expiresAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class ApiKeyGroupByOutput(TypedDict, total=False):
    id: _str
    name: _str
    keyHash: _str
    permissions: 'fields.Json'
    isActive: _bool
    lastUsedAt: datetime.datetime
    expiresAt: datetime.datetime
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    _sum: 'ApiKeySumAggregateOutput'
    _avg: 'ApiKeyAvgAggregateOutput'
    _min: 'ApiKeyMinAggregateOutput'
    _max: 'ApiKeyMaxAggregateOutput'
    _count: 'ApiKeyCountAggregateOutput'


class ApiKeyAvgAggregateOutput(TypedDict, total=False):
    """ApiKey output for aggregating averages"""


class ApiKeySumAggregateOutput(TypedDict, total=False):
    """ApiKey output for aggregating sums"""


class ApiKeyScalarAggregateOutput(TypedDict, total=False):
    """ApiKey output including scalar fields"""
    id: _str
    name: _str
    keyHash: _str
    permissions: 'fields.Json'
    isActive: _bool
    lastUsedAt: datetime.datetime
    expiresAt: datetime.datetime
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


ApiKeyMinAggregateOutput = ApiKeyScalarAggregateOutput
ApiKeyMaxAggregateOutput = ApiKeyScalarAggregateOutput


class ApiKeyMaxAggregateInput(TypedDict, total=False):
    """ApiKey input for aggregating by max"""
    id: bool
    name: bool
    keyHash: bool
    permissions: bool
    isActive: bool
    lastUsedAt: bool
    expiresAt: bool
    createdAt: bool
    updatedAt: bool


class ApiKeyMinAggregateInput(TypedDict, total=False):
    """ApiKey input for aggregating by min"""
    id: bool
    name: bool
    keyHash: bool
    permissions: bool
    isActive: bool
    lastUsedAt: bool
    expiresAt: bool
    createdAt: bool
    updatedAt: bool


class ApiKeyNumberAggregateInput(TypedDict, total=False):
    """ApiKey input for aggregating numbers"""


ApiKeyAvgAggregateInput = ApiKeyNumberAggregateInput
ApiKeySumAggregateInput = ApiKeyNumberAggregateInput


ApiKeyCountAggregateInput = TypedDict(
    'ApiKeyCountAggregateInput',
    {
        'id': bool,
        'name': bool,
        'keyHash': bool,
        'permissions': bool,
        'isActive': bool,
        'lastUsedAt': bool,
        'expiresAt': bool,
        'createdAt': bool,
        'updatedAt': bool,
        '_all': bool,
    },
    total=False,
)

ApiKeyCountAggregateOutput = TypedDict(
    'ApiKeyCountAggregateOutput',
    {
        'id': int,
        'name': int,
        'keyHash': int,
        'permissions': int,
        'isActive': int,
        'lastUsedAt': int,
        'expiresAt': int,
        'createdAt': int,
        'updatedAt': int,
        '_all': int,
    },
    total=False,
)


ApiKeyKeys = Literal[
    'id',
    'name',
    'keyHash',
    'permissions',
    'isActive',
    'lastUsedAt',
    'expiresAt',
    'createdAt',
    'updatedAt',
]
ApiKeyScalarFieldKeys = Literal[
    'id',
    'name',
    'keyHash',
    'permissions',
    'isActive',
    'lastUsedAt',
    'expiresAt',
    'createdAt',
    'updatedAt',
]
ApiKeyScalarFieldKeysT = TypeVar('ApiKeyScalarFieldKeysT', bound=ApiKeyScalarFieldKeys)

ApiKeyRelationalFieldKeys = _NoneType

# RateLimit types

class RateLimitOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the RateLimit create method"""
    id: _str
    requestCount: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class RateLimitCreateInput(RateLimitOptionalCreateInput):
    """Required arguments to the RateLimit create method"""
    identifier: _str
    endpoint: _str
    windowStart: datetime.datetime


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class RateLimitOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the RateLimit create method, without relations"""
    id: _str
    requestCount: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class RateLimitCreateWithoutRelationsInput(RateLimitOptionalCreateWithoutRelationsInput):
    """Required arguments to the RateLimit create method, without relations"""
    identifier: _str
    endpoint: _str
    windowStart: datetime.datetime

class RateLimitConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'RateLimitCreateWithoutRelationsInput'
    where: 'RateLimitWhereUniqueInput'

class RateLimitCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'RateLimitCreateWithoutRelationsInput'
    connect: 'RateLimitWhereUniqueInput'
    connect_or_create: 'RateLimitConnectOrCreateWithoutRelationsInput'


class RateLimitCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['RateLimitCreateWithoutRelationsInput', List['RateLimitCreateWithoutRelationsInput']]
    connect: Union['RateLimitWhereUniqueInput', List['RateLimitWhereUniqueInput']]
    connect_or_create: Union['RateLimitConnectOrCreateWithoutRelationsInput', List['RateLimitConnectOrCreateWithoutRelationsInput']]

_RateLimitWhereUnique_id_Input = TypedDict(
    '_RateLimitWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

_RateLimitCompoundidentifier_endpoint_windowStartKeyInner = TypedDict(
    '_RateLimitCompoundidentifier_endpoint_windowStartKeyInner',
    {
        'identifier': '_str',
        'endpoint': '_str',
        'windowStart': 'datetime.datetime',
    },
    total=True
)

_RateLimitCompoundidentifier_endpoint_windowStartKey = TypedDict(
    '_RateLimitCompoundidentifier_endpoint_windowStartKey',
    {
        'identifier_endpoint_windowStart': '_RateLimitCompoundidentifier_endpoint_windowStartKeyInner',
    },
    total=True
)

RateLimitWhereUniqueInput = Union[
    '_RateLimitWhereUnique_id_Input',
    '_RateLimitCompoundidentifier_endpoint_windowStartKey',
]


class RateLimitUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    identifier: _str
    endpoint: _str
    requestCount: Union[AtomicIntInput, _int]
    windowStart: datetime.datetime
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class RateLimitUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    identifier: _str
    endpoint: _str
    requestCount: Union[AtomicIntInput, _int]
    windowStart: datetime.datetime
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class RateLimitUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['RateLimitCreateWithoutRelationsInput']
    connect: List['RateLimitWhereUniqueInput']
    connect_or_create: List['RateLimitConnectOrCreateWithoutRelationsInput']
    set: List['RateLimitWhereUniqueInput']
    disconnect: List['RateLimitWhereUniqueInput']
    delete: List['RateLimitWhereUniqueInput']

    # TODO
    # update: List['RateLimitUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['RateLimitUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['RateLimitScalarWhereInput']
    # upsert: List['RateLimitUpserteWithWhereUniqueWithoutRelationsInput']


class RateLimitUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'RateLimitCreateWithoutRelationsInput'
    connect: 'RateLimitWhereUniqueInput'
    connect_or_create: 'RateLimitConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'RateLimitUpdateInput'
    # upsert: 'RateLimitUpsertWithoutRelationsInput'


class RateLimitUpsertInput(TypedDict):
    create: 'RateLimitCreateInput'
    update: 'RateLimitUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_RateLimit_id_OrderByInput = TypedDict(
    '_RateLimit_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_RateLimit_identifier_OrderByInput = TypedDict(
    '_RateLimit_identifier_OrderByInput',
    {
        'identifier': 'SortOrder',
    },
    total=True
)

_RateLimit_endpoint_OrderByInput = TypedDict(
    '_RateLimit_endpoint_OrderByInput',
    {
        'endpoint': 'SortOrder',
    },
    total=True
)

_RateLimit_requestCount_OrderByInput = TypedDict(
    '_RateLimit_requestCount_OrderByInput',
    {
        'requestCount': 'SortOrder',
    },
    total=True
)

_RateLimit_windowStart_OrderByInput = TypedDict(
    '_RateLimit_windowStart_OrderByInput',
    {
        'windowStart': 'SortOrder',
    },
    total=True
)

_RateLimit_createdAt_OrderByInput = TypedDict(
    '_RateLimit_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_RateLimit_updatedAt_OrderByInput = TypedDict(
    '_RateLimit_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_RateLimit_RelevanceInner = TypedDict(
    '_RateLimit_RelevanceInner',
    {
        'fields': 'List[RateLimitScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_RateLimit_RelevanceOrderByInput = TypedDict(
    '_RateLimit_RelevanceOrderByInput',
    {
        '_relevance': '_RateLimit_RelevanceInner',
    },
    total=True
)

RateLimitOrderByInput = Union[
    '_RateLimit_id_OrderByInput',
    '_RateLimit_identifier_OrderByInput',
    '_RateLimit_endpoint_OrderByInput',
    '_RateLimit_requestCount_OrderByInput',
    '_RateLimit_windowStart_OrderByInput',
    '_RateLimit_createdAt_OrderByInput',
    '_RateLimit_updatedAt_OrderByInput',
    '_RateLimit_RelevanceOrderByInput',
]



# recursive RateLimit types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

RateLimitRelationFilter = TypedDict(
    'RateLimitRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class RateLimitListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class RateLimitInclude(TypedDict, total=False):
    """RateLimit relational arguments"""


    

class UserIncludeFromRateLimit(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromRateLimitRecursive1']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromRateLimitRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromRateLimitRecursive1']
    campaigns: Union[bool, 'FindManyCampaignArgsFromRateLimitRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromRateLimitRecursive1']


class UserIncludeFromRateLimitRecursive1(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromRateLimitRecursive2']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromRateLimitRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromRateLimitRecursive2']
    campaigns: Union[bool, 'FindManyCampaignArgsFromRateLimitRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromRateLimitRecursive2']


class UserIncludeFromRateLimitRecursive2(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromRateLimitRecursive3']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromRateLimitRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromRateLimitRecursive3']
    campaigns: Union[bool, 'FindManyCampaignArgsFromRateLimitRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromRateLimitRecursive3']


class UserIncludeFromRateLimitRecursive3(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    facebookPages: Union[bool, 'FindManyFacebookPageArgsFromRateLimitRecursive4']
    whatsappNumbers: Union[bool, 'FindManyWhatsappNumberArgsFromRateLimitRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromRateLimitRecursive4']
    campaigns: Union[bool, 'FindManyCampaignArgsFromRateLimitRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromRateLimitRecursive4']


class UserIncludeFromRateLimitRecursive4(TypedDict, total=False):
    """Relational arguments for RateLimit"""

    

class UserArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    
    

class FindManyUserArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class FacebookPageIncludeFromRateLimit(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive1']
    posts: Union[bool, 'FindManyFacebookPostArgsFromRateLimitRecursive1']
    leads: Union[bool, 'FindManyLeadArgsFromRateLimitRecursive1']


class FacebookPageIncludeFromRateLimitRecursive1(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive2']
    posts: Union[bool, 'FindManyFacebookPostArgsFromRateLimitRecursive2']
    leads: Union[bool, 'FindManyLeadArgsFromRateLimitRecursive2']


class FacebookPageIncludeFromRateLimitRecursive2(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive3']
    posts: Union[bool, 'FindManyFacebookPostArgsFromRateLimitRecursive3']
    leads: Union[bool, 'FindManyLeadArgsFromRateLimitRecursive3']


class FacebookPageIncludeFromRateLimitRecursive3(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive4']
    posts: Union[bool, 'FindManyFacebookPostArgsFromRateLimitRecursive4']
    leads: Union[bool, 'FindManyLeadArgsFromRateLimitRecursive4']


class FacebookPageIncludeFromRateLimitRecursive4(TypedDict, total=False):
    """Relational arguments for RateLimit"""

    

class FacebookPageArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FacebookPageArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FacebookPageArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FacebookPageArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FacebookPageArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    
    

class FindManyFacebookPageArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive1'


class FindManyFacebookPageArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive2'


class FindManyFacebookPageArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive3'


class FindManyFacebookPageArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    include: 'FacebookPageIncludeFromFacebookPageRecursive4'


class FindManyFacebookPageArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['FacebookPageOrderByInput', List['FacebookPageOrderByInput']]
    where: 'FacebookPageWhereInput'
    cursor: 'FacebookPageWhereUniqueInput'
    distinct: List['FacebookPageScalarFieldKeys']
    
    

class FacebookPostIncludeFromRateLimit(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    facebookPage: Union[bool, 'FacebookPageArgsFromRateLimitRecursive1']


class FacebookPostIncludeFromRateLimitRecursive1(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    facebookPage: Union[bool, 'FacebookPageArgsFromRateLimitRecursive2']


class FacebookPostIncludeFromRateLimitRecursive2(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    facebookPage: Union[bool, 'FacebookPageArgsFromRateLimitRecursive3']


class FacebookPostIncludeFromRateLimitRecursive3(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    facebookPage: Union[bool, 'FacebookPageArgsFromRateLimitRecursive4']


class FacebookPostIncludeFromRateLimitRecursive4(TypedDict, total=False):
    """Relational arguments for RateLimit"""

    

class FacebookPostArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FacebookPostArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FacebookPostArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FacebookPostArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FacebookPostArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    
    

class FindManyFacebookPostArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive1'


class FindManyFacebookPostArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive2'


class FindManyFacebookPostArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive3'


class FindManyFacebookPostArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    include: 'FacebookPostIncludeFromFacebookPostRecursive4'


class FindManyFacebookPostArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['FacebookPostOrderByInput', List['FacebookPostOrderByInput']]
    where: 'FacebookPostWhereInput'
    cursor: 'FacebookPostWhereUniqueInput'
    distinct: List['FacebookPostScalarFieldKeys']
    
    

class WhatsappNumberIncludeFromRateLimit(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive1']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromRateLimitRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromRateLimitRecursive1']


class WhatsappNumberIncludeFromRateLimitRecursive1(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive2']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromRateLimitRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromRateLimitRecursive2']


class WhatsappNumberIncludeFromRateLimitRecursive2(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive3']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromRateLimitRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromRateLimitRecursive3']


class WhatsappNumberIncludeFromRateLimitRecursive3(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive4']
    templates: Union[bool, 'FindManyWhatsappTemplateArgsFromRateLimitRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromRateLimitRecursive4']


class WhatsappNumberIncludeFromRateLimitRecursive4(TypedDict, total=False):
    """Relational arguments for RateLimit"""

    

class WhatsappNumberArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class WhatsappNumberArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class WhatsappNumberArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class WhatsappNumberArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class WhatsappNumberArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    
    

class FindManyWhatsappNumberArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive1'


class FindManyWhatsappNumberArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive2'


class FindManyWhatsappNumberArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive3'


class FindManyWhatsappNumberArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    include: 'WhatsappNumberIncludeFromWhatsappNumberRecursive4'


class FindManyWhatsappNumberArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['WhatsappNumberOrderByInput', List['WhatsappNumberOrderByInput']]
    where: 'WhatsappNumberWhereInput'
    cursor: 'WhatsappNumberWhereUniqueInput'
    distinct: List['WhatsappNumberScalarFieldKeys']
    
    

class WhatsappTemplateIncludeFromRateLimit(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromRateLimitRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromRateLimitRecursive1']


class WhatsappTemplateIncludeFromRateLimitRecursive1(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromRateLimitRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromRateLimitRecursive2']


class WhatsappTemplateIncludeFromRateLimitRecursive2(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromRateLimitRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromRateLimitRecursive3']


class WhatsappTemplateIncludeFromRateLimitRecursive3(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromRateLimitRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromRateLimitRecursive4']


class WhatsappTemplateIncludeFromRateLimitRecursive4(TypedDict, total=False):
    """Relational arguments for RateLimit"""

    

class WhatsappTemplateArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class WhatsappTemplateArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class WhatsappTemplateArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class WhatsappTemplateArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class WhatsappTemplateArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    
    

class FindManyWhatsappTemplateArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive1'


class FindManyWhatsappTemplateArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive2'


class FindManyWhatsappTemplateArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive3'


class FindManyWhatsappTemplateArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    include: 'WhatsappTemplateIncludeFromWhatsappTemplateRecursive4'


class FindManyWhatsappTemplateArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['WhatsappTemplateOrderByInput', List['WhatsappTemplateOrderByInput']]
    where: 'WhatsappTemplateWhereInput'
    cursor: 'WhatsappTemplateWhereUniqueInput'
    distinct: List['WhatsappTemplateScalarFieldKeys']
    
    

class LeadIncludeFromRateLimit(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive1']
    facebookPage: Union[bool, 'FacebookPageArgsFromRateLimitRecursive1']
    tags: Union[bool, 'FindManyLeadTagArgsFromRateLimitRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromRateLimitRecursive1']


class LeadIncludeFromRateLimitRecursive1(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive2']
    facebookPage: Union[bool, 'FacebookPageArgsFromRateLimitRecursive2']
    tags: Union[bool, 'FindManyLeadTagArgsFromRateLimitRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromRateLimitRecursive2']


class LeadIncludeFromRateLimitRecursive2(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive3']
    facebookPage: Union[bool, 'FacebookPageArgsFromRateLimitRecursive3']
    tags: Union[bool, 'FindManyLeadTagArgsFromRateLimitRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromRateLimitRecursive3']


class LeadIncludeFromRateLimitRecursive3(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive4']
    facebookPage: Union[bool, 'FacebookPageArgsFromRateLimitRecursive4']
    tags: Union[bool, 'FindManyLeadTagArgsFromRateLimitRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromRateLimitRecursive4']


class LeadIncludeFromRateLimitRecursive4(TypedDict, total=False):
    """Relational arguments for RateLimit"""

    

class LeadArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'LeadIncludeFromLeadRecursive1'


class LeadArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'LeadIncludeFromLeadRecursive2'


class LeadArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'LeadIncludeFromLeadRecursive3'


class LeadArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'LeadIncludeFromLeadRecursive4'


class LeadArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    
    

class FindManyLeadArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive1'


class FindManyLeadArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive2'


class FindManyLeadArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive3'


class FindManyLeadArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    include: 'LeadIncludeFromLeadRecursive4'


class FindManyLeadArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['LeadOrderByInput', List['LeadOrderByInput']]
    where: 'LeadWhereInput'
    cursor: 'LeadWhereUniqueInput'
    distinct: List['LeadScalarFieldKeys']
    
    

class TagIncludeFromRateLimit(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    leads: Union[bool, 'FindManyLeadTagArgsFromRateLimitRecursive1']


class TagIncludeFromRateLimitRecursive1(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    leads: Union[bool, 'FindManyLeadTagArgsFromRateLimitRecursive2']


class TagIncludeFromRateLimitRecursive2(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    leads: Union[bool, 'FindManyLeadTagArgsFromRateLimitRecursive3']


class TagIncludeFromRateLimitRecursive3(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    leads: Union[bool, 'FindManyLeadTagArgsFromRateLimitRecursive4']


class TagIncludeFromRateLimitRecursive4(TypedDict, total=False):
    """Relational arguments for RateLimit"""

    

class TagArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'TagIncludeFromTagRecursive1'


class TagArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'TagIncludeFromTagRecursive2'


class TagArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'TagIncludeFromTagRecursive3'


class TagArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'TagIncludeFromTagRecursive4'


class TagArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    
    

class FindManyTagArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive1'


class FindManyTagArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive2'


class FindManyTagArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive3'


class FindManyTagArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    include: 'TagIncludeFromTagRecursive4'


class FindManyTagArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['TagOrderByInput', List['TagOrderByInput']]
    where: 'TagWhereInput'
    cursor: 'TagWhereUniqueInput'
    distinct: List['TagScalarFieldKeys']
    
    

class LeadTagIncludeFromRateLimit(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    lead: Union[bool, 'LeadArgsFromRateLimitRecursive1']
    tag: Union[bool, 'TagArgsFromRateLimitRecursive1']


class LeadTagIncludeFromRateLimitRecursive1(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    lead: Union[bool, 'LeadArgsFromRateLimitRecursive2']
    tag: Union[bool, 'TagArgsFromRateLimitRecursive2']


class LeadTagIncludeFromRateLimitRecursive2(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    lead: Union[bool, 'LeadArgsFromRateLimitRecursive3']
    tag: Union[bool, 'TagArgsFromRateLimitRecursive3']


class LeadTagIncludeFromRateLimitRecursive3(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    lead: Union[bool, 'LeadArgsFromRateLimitRecursive4']
    tag: Union[bool, 'TagArgsFromRateLimitRecursive4']


class LeadTagIncludeFromRateLimitRecursive4(TypedDict, total=False):
    """Relational arguments for RateLimit"""

    

class LeadTagArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class LeadTagArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class LeadTagArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class LeadTagArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class LeadTagArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    
    

class FindManyLeadTagArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive1'


class FindManyLeadTagArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive2'


class FindManyLeadTagArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive3'


class FindManyLeadTagArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    include: 'LeadTagIncludeFromLeadTagRecursive4'


class FindManyLeadTagArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['LeadTagOrderByInput', List['LeadTagOrderByInput']]
    where: 'LeadTagWhereInput'
    cursor: 'LeadTagWhereUniqueInput'
    distinct: List['LeadTagScalarFieldKeys']
    
    

class MessageIncludeFromRateLimit(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    lead: Union[bool, 'LeadArgsFromRateLimitRecursive1']
    campaign: Union[bool, 'CampaignArgsFromRateLimitRecursive1']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromRateLimitRecursive1']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromRateLimitRecursive1']


class MessageIncludeFromRateLimitRecursive1(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    lead: Union[bool, 'LeadArgsFromRateLimitRecursive2']
    campaign: Union[bool, 'CampaignArgsFromRateLimitRecursive2']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromRateLimitRecursive2']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromRateLimitRecursive2']


class MessageIncludeFromRateLimitRecursive2(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    lead: Union[bool, 'LeadArgsFromRateLimitRecursive3']
    campaign: Union[bool, 'CampaignArgsFromRateLimitRecursive3']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromRateLimitRecursive3']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromRateLimitRecursive3']


class MessageIncludeFromRateLimitRecursive3(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    lead: Union[bool, 'LeadArgsFromRateLimitRecursive4']
    campaign: Union[bool, 'CampaignArgsFromRateLimitRecursive4']
    whatsappNumber: Union[bool, 'WhatsappNumberArgsFromRateLimitRecursive4']
    whatsappTemplate: Union[bool, 'WhatsappTemplateArgsFromRateLimitRecursive4']


class MessageIncludeFromRateLimitRecursive4(TypedDict, total=False):
    """Relational arguments for RateLimit"""

    

class MessageArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    
    

class FindManyMessageArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class CampaignIncludeFromRateLimit(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromRateLimitRecursive1']


class CampaignIncludeFromRateLimitRecursive1(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromRateLimitRecursive2']


class CampaignIncludeFromRateLimitRecursive2(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromRateLimitRecursive3']


class CampaignIncludeFromRateLimitRecursive3(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromRateLimitRecursive4']


class CampaignIncludeFromRateLimitRecursive4(TypedDict, total=False):
    """Relational arguments for RateLimit"""

    

class CampaignArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'CampaignIncludeFromCampaignRecursive1'


class CampaignArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'CampaignIncludeFromCampaignRecursive2'


class CampaignArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'CampaignIncludeFromCampaignRecursive3'


class CampaignArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'CampaignIncludeFromCampaignRecursive4'


class CampaignArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    
    

class FindManyCampaignArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive1'


class FindManyCampaignArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive2'


class FindManyCampaignArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive3'


class FindManyCampaignArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    include: 'CampaignIncludeFromCampaignRecursive4'


class FindManyCampaignArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['CampaignOrderByInput', List['CampaignOrderByInput']]
    where: 'CampaignWhereInput'
    cursor: 'CampaignWhereUniqueInput'
    distinct: List['CampaignScalarFieldKeys']
    
    

class AuditLogIncludeFromRateLimit(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive1']


class AuditLogIncludeFromRateLimitRecursive1(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive2']


class AuditLogIncludeFromRateLimitRecursive2(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive3']


class AuditLogIncludeFromRateLimitRecursive3(TypedDict, total=False):
    """Relational arguments for RateLimit"""
    user: Union[bool, 'UserArgsFromRateLimitRecursive4']


class AuditLogIncludeFromRateLimitRecursive4(TypedDict, total=False):
    """Relational arguments for RateLimit"""

    

class AuditLogArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    
    

class FindManyAuditLogArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    
    

class ApiKeyIncludeFromRateLimit(TypedDict, total=False):
    """Relational arguments for RateLimit"""


class ApiKeyIncludeFromRateLimitRecursive1(TypedDict, total=False):
    """Relational arguments for RateLimit"""


class ApiKeyIncludeFromRateLimitRecursive2(TypedDict, total=False):
    """Relational arguments for RateLimit"""


class ApiKeyIncludeFromRateLimitRecursive3(TypedDict, total=False):
    """Relational arguments for RateLimit"""


class ApiKeyIncludeFromRateLimitRecursive4(TypedDict, total=False):
    """Relational arguments for RateLimit"""

    

class ApiKeyArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class ApiKeyArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class ApiKeyArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class ApiKeyArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class ApiKeyArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    
    

class FindManyApiKeyArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive1'


class FindManyApiKeyArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive2'


class FindManyApiKeyArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive3'


class FindManyApiKeyArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    include: 'ApiKeyIncludeFromApiKeyRecursive4'


class FindManyApiKeyArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['ApiKeyOrderByInput', List['ApiKeyOrderByInput']]
    where: 'ApiKeyWhereInput'
    cursor: 'ApiKeyWhereUniqueInput'
    distinct: List['ApiKeyScalarFieldKeys']
    
    

class RateLimitIncludeFromRateLimit(TypedDict, total=False):
    """Relational arguments for RateLimit"""


class RateLimitIncludeFromRateLimitRecursive1(TypedDict, total=False):
    """Relational arguments for RateLimit"""


class RateLimitIncludeFromRateLimitRecursive2(TypedDict, total=False):
    """Relational arguments for RateLimit"""


class RateLimitIncludeFromRateLimitRecursive3(TypedDict, total=False):
    """Relational arguments for RateLimit"""


class RateLimitIncludeFromRateLimitRecursive4(TypedDict, total=False):
    """Relational arguments for RateLimit"""

    

class RateLimitArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class RateLimitArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class RateLimitArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class RateLimitArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class RateLimitArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    
    

class FindManyRateLimitArgsFromRateLimit(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive1'


class FindManyRateLimitArgsFromRateLimitRecursive1(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive2'


class FindManyRateLimitArgsFromRateLimitRecursive2(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive3'


class FindManyRateLimitArgsFromRateLimitRecursive3(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    include: 'RateLimitIncludeFromRateLimitRecursive4'


class FindManyRateLimitArgsFromRateLimitRecursive4(TypedDict, total=False):
    """Arguments for RateLimit"""
    take: int
    skip: int
    order_by: Union['RateLimitOrderByInput', List['RateLimitOrderByInput']]
    where: 'RateLimitWhereInput'
    cursor: 'RateLimitWhereUniqueInput'
    distinct: List['RateLimitScalarFieldKeys']
    


FindManyRateLimitArgs = FindManyRateLimitArgsFromRateLimit
FindFirstRateLimitArgs = FindManyRateLimitArgsFromRateLimit


    

class RateLimitWhereInput(TypedDict, total=False):
    """RateLimit arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    identifier: Union[_str, 'types.StringFilter']
    endpoint: Union[_str, 'types.StringFilter']
    requestCount: Union[_int, 'types.IntFilter']
    windowStart: Union[datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['RateLimitWhereInputRecursive1', List['RateLimitWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['RateLimitWhereInputRecursive1']
    OR: List['RateLimitWhereInputRecursive1']
    NOT: List['RateLimitWhereInputRecursive1']


class RateLimitWhereInputRecursive1(TypedDict, total=False):
    """RateLimit arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    identifier: Union[_str, 'types.StringFilter']
    endpoint: Union[_str, 'types.StringFilter']
    requestCount: Union[_int, 'types.IntFilter']
    windowStart: Union[datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['RateLimitWhereInputRecursive2', List['RateLimitWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['RateLimitWhereInputRecursive2']
    OR: List['RateLimitWhereInputRecursive2']
    NOT: List['RateLimitWhereInputRecursive2']


class RateLimitWhereInputRecursive2(TypedDict, total=False):
    """RateLimit arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    identifier: Union[_str, 'types.StringFilter']
    endpoint: Union[_str, 'types.StringFilter']
    requestCount: Union[_int, 'types.IntFilter']
    windowStart: Union[datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['RateLimitWhereInputRecursive3', List['RateLimitWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['RateLimitWhereInputRecursive3']
    OR: List['RateLimitWhereInputRecursive3']
    NOT: List['RateLimitWhereInputRecursive3']


class RateLimitWhereInputRecursive3(TypedDict, total=False):
    """RateLimit arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    identifier: Union[_str, 'types.StringFilter']
    endpoint: Union[_str, 'types.StringFilter']
    requestCount: Union[_int, 'types.IntFilter']
    windowStart: Union[datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['RateLimitWhereInputRecursive4', List['RateLimitWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['RateLimitWhereInputRecursive4']
    OR: List['RateLimitWhereInputRecursive4']
    NOT: List['RateLimitWhereInputRecursive4']


class RateLimitWhereInputRecursive4(TypedDict, total=False):
    """RateLimit arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    identifier: Union[_str, 'types.StringFilter']
    endpoint: Union[_str, 'types.StringFilter']
    requestCount: Union[_int, 'types.IntFilter']
    windowStart: Union[datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']



# aggregate RateLimit types


    

class RateLimitScalarWhereWithAggregatesInput(TypedDict, total=False):
    """RateLimit arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    identifier: Union[_str, 'types.StringWithAggregatesFilter']
    endpoint: Union[_str, 'types.StringWithAggregatesFilter']
    requestCount: Union[_int, 'types.IntWithAggregatesFilter']
    windowStart: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['RateLimitScalarWhereWithAggregatesInputRecursive1']
    OR: List['RateLimitScalarWhereWithAggregatesInputRecursive1']
    NOT: List['RateLimitScalarWhereWithAggregatesInputRecursive1']


class RateLimitScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """RateLimit arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    identifier: Union[_str, 'types.StringWithAggregatesFilter']
    endpoint: Union[_str, 'types.StringWithAggregatesFilter']
    requestCount: Union[_int, 'types.IntWithAggregatesFilter']
    windowStart: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['RateLimitScalarWhereWithAggregatesInputRecursive2']
    OR: List['RateLimitScalarWhereWithAggregatesInputRecursive2']
    NOT: List['RateLimitScalarWhereWithAggregatesInputRecursive2']


class RateLimitScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """RateLimit arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    identifier: Union[_str, 'types.StringWithAggregatesFilter']
    endpoint: Union[_str, 'types.StringWithAggregatesFilter']
    requestCount: Union[_int, 'types.IntWithAggregatesFilter']
    windowStart: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['RateLimitScalarWhereWithAggregatesInputRecursive3']
    OR: List['RateLimitScalarWhereWithAggregatesInputRecursive3']
    NOT: List['RateLimitScalarWhereWithAggregatesInputRecursive3']


class RateLimitScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """RateLimit arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    identifier: Union[_str, 'types.StringWithAggregatesFilter']
    endpoint: Union[_str, 'types.StringWithAggregatesFilter']
    requestCount: Union[_int, 'types.IntWithAggregatesFilter']
    windowStart: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['RateLimitScalarWhereWithAggregatesInputRecursive4']
    OR: List['RateLimitScalarWhereWithAggregatesInputRecursive4']
    NOT: List['RateLimitScalarWhereWithAggregatesInputRecursive4']


class RateLimitScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """RateLimit arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    identifier: Union[_str, 'types.StringWithAggregatesFilter']
    endpoint: Union[_str, 'types.StringWithAggregatesFilter']
    requestCount: Union[_int, 'types.IntWithAggregatesFilter']
    windowStart: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class RateLimitGroupByOutput(TypedDict, total=False):
    id: _str
    identifier: _str
    endpoint: _str
    requestCount: _int
    windowStart: datetime.datetime
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    _sum: 'RateLimitSumAggregateOutput'
    _avg: 'RateLimitAvgAggregateOutput'
    _min: 'RateLimitMinAggregateOutput'
    _max: 'RateLimitMaxAggregateOutput'
    _count: 'RateLimitCountAggregateOutput'


class RateLimitAvgAggregateOutput(TypedDict, total=False):
    """RateLimit output for aggregating averages"""
    requestCount: float


class RateLimitSumAggregateOutput(TypedDict, total=False):
    """RateLimit output for aggregating sums"""
    requestCount: _int


class RateLimitScalarAggregateOutput(TypedDict, total=False):
    """RateLimit output including scalar fields"""
    id: _str
    identifier: _str
    endpoint: _str
    requestCount: _int
    windowStart: datetime.datetime
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


RateLimitMinAggregateOutput = RateLimitScalarAggregateOutput
RateLimitMaxAggregateOutput = RateLimitScalarAggregateOutput


class RateLimitMaxAggregateInput(TypedDict, total=False):
    """RateLimit input for aggregating by max"""
    id: bool
    identifier: bool
    endpoint: bool
    requestCount: bool
    windowStart: bool
    createdAt: bool
    updatedAt: bool


class RateLimitMinAggregateInput(TypedDict, total=False):
    """RateLimit input for aggregating by min"""
    id: bool
    identifier: bool
    endpoint: bool
    requestCount: bool
    windowStart: bool
    createdAt: bool
    updatedAt: bool


class RateLimitNumberAggregateInput(TypedDict, total=False):
    """RateLimit input for aggregating numbers"""
    requestCount: bool


RateLimitAvgAggregateInput = RateLimitNumberAggregateInput
RateLimitSumAggregateInput = RateLimitNumberAggregateInput


RateLimitCountAggregateInput = TypedDict(
    'RateLimitCountAggregateInput',
    {
        'id': bool,
        'identifier': bool,
        'endpoint': bool,
        'requestCount': bool,
        'windowStart': bool,
        'createdAt': bool,
        'updatedAt': bool,
        '_all': bool,
    },
    total=False,
)

RateLimitCountAggregateOutput = TypedDict(
    'RateLimitCountAggregateOutput',
    {
        'id': int,
        'identifier': int,
        'endpoint': int,
        'requestCount': int,
        'windowStart': int,
        'createdAt': int,
        'updatedAt': int,
        '_all': int,
    },
    total=False,
)


RateLimitKeys = Literal[
    'id',
    'identifier',
    'endpoint',
    'requestCount',
    'windowStart',
    'createdAt',
    'updatedAt',
]
RateLimitScalarFieldKeys = Literal[
    'id',
    'identifier',
    'endpoint',
    'requestCount',
    'windowStart',
    'createdAt',
    'updatedAt',
]
RateLimitScalarFieldKeysT = TypeVar('RateLimitScalarFieldKeysT', bound=RateLimitScalarFieldKeys)

RateLimitRelationalFieldKeys = _NoneType



# we have to import ourselves as types can be namespaced to types
from . import types, enums, models, fields